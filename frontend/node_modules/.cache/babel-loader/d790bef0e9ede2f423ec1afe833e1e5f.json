{"ast":null,"code":"var _jsxFileName = \"/home/pablo/work/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Upload.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid, Checkbox } from '@material-ui/core';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport IconButton from '@material-ui/core/IconButton';\nimport SendIcon from '@material-ui/icons/Send';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Preview from './Preview';\nimport STLDisplay from './STLDisplay';\nimport { Link } from 'react-router-dom';\nimport StorageIcon from '@material-ui/icons/Storage';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8)\n  },\n  root: {\n    marginTop: 80,\n    flexGrow: 1\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3)\n  },\n  fullWidth: {\n    width: '100%'\n  },\n  input: {\n    display: 'none'\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 270\n  },\n  paper: {\n    margin: theme.spacing(2)\n  },\n  model: {\n    marginLeft: theme.spacing(5)\n  },\n  buttons: {\n    marginLeft: theme.spacing(34)\n  }\n}));\n\nfunction Upload() {\n  const [models, setModels] = useState([]);\n  const [aux, setaux] = useState([]);\n  const [count, setCount] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [alert, setAlert] = useState(false);\n  const [send, setSend] = useState(false);\n  const [display, setDisplay] = useState(false);\n  const classes = useStyles();\n\n  function handleCheckboxClick(event, id) {\n    event.stopPropagation();\n\n    if (models[id].sel === false) {\n      models[id].sel = true;\n      setCount(count + 1);\n    } else if (models[id].sel === true) {\n      models[id].sel = false;\n      setCount(count - 1);\n    }\n  }\n\n  ;\n\n  function contain(element) {\n    for (let m of models) {\n      if (m.value === element) {\n        setAlert(true);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function handlerUpload(e) {\n    let counter = models.length;\n    let items = [];\n\n    for (let m of models) {\n      items.push(m);\n    }\n\n    var UpModels = Array.from(e.target.files);\n\n    for (let um of UpModels) {\n      if (contain(um.name) !== true) {\n        items.push({\n          value: um.name,\n          sel: false,\n          file: um,\n          id: counter\n        });\n        counter++;\n      }\n    }\n\n    setModels(items);\n  }\n\n  function handlerServer() {\n    const data = new FormData();\n\n    if (count > 0) {\n      for (let m of models) {\n        if (m.sel === true) {\n          data.append('files', m.file);\n        }\n      }\n\n      axios.post(\"http://mini3dfactory.duckdns.org:3002/api/models/upload\", data).then(response => {// server answer\n      }).catch(e => {\n        console.log(e);\n      });\n      setSend(true);\n    } //maybe message\n\n  }\n\n  function handlerDisplay() {\n    if (count === 1) {\n      for (let m of models) {\n        if (m.sel === true) {\n          setaux([m.file]);\n        }\n      }\n    } else {\n      setOpen(true);\n    }\n  }\n\n  function availableDisplay() {\n    ;\n    setDisplay(true);\n  }\n\n  function unavailableDisplay() {\n    ;\n    setDisplay(false);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 4,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    component: \"label\",\n    startIcon: /*#__PURE__*/React.createElement(CloudUploadIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 68\n      }\n    }),\n    className: classes.upload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, \"Upload File\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    multiple: true,\n    accept: \".obj,.stl,.3mf\",\n    className: classes.input,\n    id: \"Upload-button-file\",\n    onChange: handlerUpload.bind(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    stickyHeader: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }, \"Uploaded files\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, models.map(model => /*#__PURE__*/React.createElement(TableRow, {\n    key: model.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    className: classes.check,\n    onClick: event => handleCheckboxClick(event, model.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, model.value), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Preview, {\n    size: 50,\n    file: model.file,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 23\n    }\n  }))))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    direction: \"row\",\n    className: classes.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    in: count > 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"Display\",\n    onClick: handlerServer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SendIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Link, {\n    to: \"/server\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"default\",\n    \"aria-label\": \"Display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StorageIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Collapse, {\n    in: display,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"Display\",\n    onClick: handlerDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LaunchIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    in: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"warning\",\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"alert\",\n      color: \"inherit\",\n      size: \"small\",\n      onClick: () => {\n        setAlert(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      fontSize: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AlertTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }, \"Warning\"), \"You can not upload 2 files with same name.\")), /*#__PURE__*/React.createElement(Collapse, {\n    in: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"warning\",\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"alert\",\n      color: \"inherit\",\n      size: \"small\",\n      onClick: () => {\n        setOpen(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      fontSize: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AlertTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }\n  }, \"Warning\"), \"You must select only one model to display.\")), /*#__PURE__*/React.createElement(Collapse, {\n    in: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"success\",\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"alert\",\n      color: \"inherit\",\n      size: \"small\",\n      onClick: () => {\n        setSend(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      fontSize: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AlertTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, \"Send\"), \"Your models had sended to server successful!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.model,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }, aux.map(auxModel => /*#__PURE__*/React.createElement(STLDisplay, {\n    file: auxModel,\n    setAvailable: availableDisplay,\n    setUnavailable: unavailableDisplay,\n    size: 400,\n    key: auxModel.id + 128,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }\n  }))))));\n}\n\nexport default Upload;","map":{"version":3,"sources":["/home/pablo/work/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Upload.js"],"names":["React","useState","makeStyles","Button","Grid","Checkbox","axios","Paper","CloudUploadIcon","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","LaunchIcon","IconButton","SendIcon","Alert","AlertTitle","Collapse","CloseIcon","Preview","STLDisplay","Link","StorageIcon","useStyles","theme","title","flexGrow","marginLeft","spacing","root","marginTop","upload","marginBottom","fullWidth","width","input","display","table","margin","maxHeight","paper","model","buttons","Upload","models","setModels","aux","setaux","count","setCount","open","setOpen","alert","setAlert","send","setSend","setDisplay","classes","handleCheckboxClick","event","id","stopPropagation","sel","contain","element","m","value","handlerUpload","e","counter","length","items","push","UpModels","Array","from","target","files","um","name","file","handlerServer","data","FormData","append","post","then","response","catch","console","log","handlerDisplay","availableDisplay","unavailableDisplay","bind","map","check","auxModel"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {  Button, Grid, Checkbox} from '@material-ui/core';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport IconButton from '@material-ui/core/IconButton';\nimport SendIcon from '@material-ui/icons/Send';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Preview from './Preview';\nimport STLDisplay from './STLDisplay';\nimport { Link } from 'react-router-dom';\nimport StorageIcon from '@material-ui/icons/Storage';\n\n\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8),\n  },\n  root:{\n    marginTop:80,\n    flexGrow: 1,\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  input: {\n    display: 'none',\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 270,\n  },\n  paper: {\n    margin: theme.spacing(2),\n  },\n  model: {\n    marginLeft:theme.spacing(5),\n  },\n  buttons: {\n    marginLeft:theme.spacing(34),\n  },\n\n\n}));\n\n\n\n\nfunction Upload() {\n\n  const [models, setModels] = useState([]);\n  const [aux, setaux] = useState([]);\n  const [count, setCount] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [alert, setAlert] = useState(false);\n  const [send, setSend] = useState(false);\n  const [display, setDisplay] = useState(false);\n\n\n  const classes = useStyles();\n\n\n  function handleCheckboxClick(event, id){\n    event.stopPropagation();\n\n      if (models[id].sel === false) {\n          models[id].sel = true;\n          setCount(count + 1)\n\n      } else if (models[id].sel === true) {\n          models[id].sel = false; \n          setCount(count - 1)\n      }\n\n  };\n  function contain(element){\n    for (let m of models) {\n      if(m.value === element){\n        setAlert(true);\n        return true\n      }\n    }\n    return false\n}\n\n  function handlerUpload(e) {\n\n    let counter = models.length;\n    let items = [];\n\n    for(let m of models){\n      items.push(m);\n    }\n    var UpModels = Array.from(e.target.files)\n    \n    for (let um of UpModels) {\n      if(contain(um.name)!==true){\n        items.push({\n          value: um.name,\n          sel: false,\n          file: um,\n          id: counter\n        })\n        counter++;\n      }\n    }\n\n    setModels(items)\n  }\n\n\n\n  function handlerServer(){\n    const data = new FormData()\n    if(count > 0){\n\n    for (let m of models) {\n      if(m.sel === true){\n        data.append('files', m.file)\n      }\n    }\n    axios.post(\"http://mini3dfactory.duckdns.org:3002/api/models/upload\",data).then(response => {\n      // server answer\n    }).catch(e => {\n      console.log(e);\n    });\n    setSend(true)\n  }\n  //maybe message\n  }\n\n  function handlerDisplay(){\n\n    if(count === 1){\n      for (let m of models) {\n        if(m.sel === true){\n            setaux([m.file]);\n        }\n      }\n    }else{\n      setOpen(true);\n    }\n  }\n  \n  function availableDisplay(){;\n      setDisplay(true);\n  }\n  function unavailableDisplay(){;\n      setDisplay(false);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2} direction=\"row\">\n        <Grid container item xs={4} direction=\"column\">\n          <div>\n          <Button variant=\"contained\" component=\"label\" startIcon={<CloudUploadIcon />}className={classes.upload}>\n              Upload File\n              <input\n                  type=\"file\"\n                  multiple\n                  accept=\".obj,.stl,.3mf\"\n                  className={classes.input}\n                  id=\"Upload-button-file\"\n                  onChange={handlerUpload.bind()}\n              />\n          </Button>\n          </div>\n          <TableContainer component={Paper} className={classes.table}>\n            <Table  aria-label=\"simple table\" stickyHeader>\n              <TableHead>\n                <TableRow>\n                <TableCell></TableCell>\n                  <TableCell>Uploaded files</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {models.map(model =>\n                  <TableRow key={model.id}>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox className={classes.check} onClick={event => handleCheckboxClick(event, model.id)}/>\n                    </TableCell>\n                    <TableCell>{model.value}</TableCell>\n                    <TableCell>  \n                      <Preview size={50} file={model.file}/>\n                    </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <Grid container item direction=\"row\" className={classes.buttons} >\n\n          <Collapse in={count > 0}>\n            <IconButton color=\"primary\" aria-label=\"Display\" onClick={handlerServer}>\n              <SendIcon fontSize=\"large\"/>\n            </IconButton>\n          </Collapse>\n\n          <Link to=\"/server\">\n            <IconButton color=\"default\" aria-label=\"Display\">\n              <StorageIcon fontSize=\"large\"/>\n            </IconButton>\n          </Link>\n\n          <Collapse in={display}>\n            <IconButton color=\"primary\" aria-label=\"Display\" onClick={handlerDisplay}>\n              <LaunchIcon fontSize=\"large\"/>\n            </IconButton>\n          </Collapse>\n          </Grid>\n        </Grid>\n        <Grid item xs={8} >\n          <Collapse in={alert}>\n            <Alert severity=\"warning\"\n              action={\n                <IconButton\n                  aria-label=\"alert\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  onClick={() => {\n                    setAlert(false);\n                  }}\n                >\n                  <CloseIcon fontSize=\"inherit\" />\n                </IconButton>\n              }\n            >\n              <AlertTitle>Warning</AlertTitle>\n                You can not upload 2 files with same name.\n            </Alert>\n          </Collapse>\n          <Collapse in={open}>\n            <Alert severity=\"warning\"\n              action={\n                <IconButton\n                  aria-label=\"alert\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  onClick={() => {\n                    setOpen(false);\n                  }}\n                >\n                  <CloseIcon fontSize=\"inherit\" />\n                </IconButton>\n              }\n            >\n                <AlertTitle>Warning</AlertTitle>\n                  You must select only one model to display.\n            </Alert>\n          </Collapse>\n          <Collapse in={send}>\n            <Alert severity=\"success\"\n              action={\n                <IconButton\n                  aria-label=\"alert\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  onClick={() => {\n                    setSend(false);\n                  }}\n                >\n                  <CloseIcon fontSize=\"inherit\" />\n                </IconButton>\n              }\n            >\n                <AlertTitle>Send</AlertTitle>\n                  Your models had sended to server successful!\n            </Alert>\n          </Collapse>\n          <div className={classes.model} >  \n            {aux.map(auxModel=>\n                <STLDisplay file={auxModel} setAvailable={availableDisplay} setUnavailable={unavailableDisplay} size={400} key={auxModel.id+128}/>\n            )\n            }\n          \n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\n\n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}