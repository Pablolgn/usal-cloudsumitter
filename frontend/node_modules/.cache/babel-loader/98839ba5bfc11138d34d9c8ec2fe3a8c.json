{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _Button = _interopRequireDefault(require(\"../../generic/Button/Button\"));\n\nvar _common = require(\"../../common\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst className = 'exit-button';\n\nclass ExitButton extends React.Component {\n  render() {\n    const _this$props = this.props,\n          content = _this$props.content,\n          label = _this$props.label,\n          classNamePrefix = _this$props.classNamePrefix,\n          onClick = _this$props.onClick;\n\n    if (onClick) {\n      return /*#__PURE__*/React.createElement(_Button.default, {\n        classNamePrefix: classNamePrefix,\n        className: className,\n        label: label,\n        onClick: onClick,\n        content: content\n      });\n    } else {\n      return null;\n    }\n  }\n\n}\n\n_defineProperty(ExitButton, \"defaultProps\", {\n  classNamePrefix: _common.defaultClassNamePrefix\n});\n\nExitButton.displayName = 'ExitButton';\nvar _default = ExitButton;\nexports.default = _default;","map":{"version":3,"sources":["../../../src/replay/components/controls/ExitButton/ExitButton.js"],"names":["className","ExitButton","React","classNamePrefix","defaultClassNamePrefix","render","content","label","onClick"],"mappings":";;;;;;;AACA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,6BAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,MAAMA,SAAS,GAAf,aAAA;;AAEA,MAAA,UAAA,SAAyBE,KAAK,CAA9B,SAAA,CAAgD;AAK9CG,EAAAA,MAAM,GAAG;AAAA,UAAA,WAAA,GAC8C,KAD9C,KAAA;AAAA,UACCC,OADD,GAAA,WAAA,CAAA,OAAA;AAAA,UACUC,KADV,GAAA,WAAA,CAAA,KAAA;AAAA,UACiBJ,eADjB,GAAA,WAAA,CAAA,eAAA;AAAA,UACkCK,OADlC,GAAA,WAAA,CAAA,OAAA;;AAEP,QAAA,OAAA,EAAa;AACX,aAAA,aACE,KAAA,CAAA,aAAA,CAAC,OAAA,CAAD,OAAA,EAAA;AACE,QAAA,eAAe,EADjB,eAAA;AAEE,QAAA,SAAS,EAFX,SAAA;AAGE,QAAA,KAAK,EAHP,KAAA;AAIE,QAAA,OAAO,EAJT,OAAA;AAKE,QAAA,OAAO,EAAEF;AALX,OAAA,CADF;AADF,KAAA,MAUO;AACL,aAAA,IAAA;AACD;AACF;;AApB6C;;gBAA1CL,U,kBACkB;AACpBE,EAAAA,eAAe,EAAEC,OAAAA,CAAAA;AADG,C;;AAsBxBH,UAAU,CAAVA,WAAAA,GAAAA,YAAAA;eACeA,U","sourcesContent":["// @flow\nimport * as React from 'react';\nimport Button from '../../generic/Button/Button';\nimport { defaultClassNamePrefix } from '../../common';\nimport type { CommonProps } from '../../common';\n\ntype Props = CommonProps & {\n  /** The graphics or similar for the button. */\n  content: React.Node,\n  /** Callback invoked when the button is clicked. */\n  onClick: () => void\n};\n\nconst className = 'exit-button';\n\nclass ExitButton extends React.Component<Props> {\n  static defaultProps = {\n    classNamePrefix: defaultClassNamePrefix\n  };\n\n  render() {\n    const { content, label, classNamePrefix, onClick } = this.props;\n    if (onClick) {\n      return (\n        <Button\n          classNamePrefix={classNamePrefix}\n          className={className}\n          label={label}\n          onClick={onClick}\n          content={content}\n        />\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nExitButton.displayName = 'ExitButton';\nexport default ExitButton;\n"]},"metadata":{},"sourceType":"script"}