{"ast":null,"code":"var _jsxFileName = \"/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Preview.js\";\nimport ReactDOM from 'react-dom';\nimport React, { useRef, useState } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\n\nfunction Preview(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef(); // Set up state for the hovered and active state\n\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false); // Rotate mesh every frame, this is outside of React without overhead\n\n  useFrame(() => mesh.current.rotation.x = mesh.current.rotation.y += 0.01);\n  return React.createElement(\"mesh\", Object.assign({}, props, {\n    ref: mesh,\n    scale: active ? [1.5, 1.5, 1.5] : [1, 1, 1],\n    onClick: e => setActive(!active),\n    onPointerOver: e => setHover(true),\n    onPointerOut: e => setHover(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1, 1, 1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"meshStandardMaterial\", {\n    attach: \"material\",\n    color: hovered ? 'hotpink' : 'orange',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n}\n\nexport default Preview;","map":{"version":3,"sources":["/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Preview.js"],"names":["ReactDOM","React","useRef","useState","Canvas","useFrame","Preview","props","mesh","hovered","setHover","active","setActive","current","rotation","x","y","e"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,mBAAjC;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB;AACA,QAAMC,IAAI,GAAGN,MAAM,EAAnB,CAFsB,CAItB;;AACA,QAAM,CAACO,OAAD,EAAUC,QAAV,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC,CANsB,CAQtB;;AACAE,EAAAA,QAAQ,CAAC,MAAOG,IAAI,CAACK,OAAL,CAAaC,QAAb,CAAsBC,CAAtB,GAA0BP,IAAI,CAACK,OAAL,CAAaC,QAAb,CAAsBE,CAAtB,IAA2B,IAA7D,CAAR;AAEA,SACE,8CACMT,KADN;AAEE,IAAA,GAAG,EAAEC,IAFP;AAGE,IAAA,KAAK,EAAEG,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAH,GAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHpC;AAIE,IAAA,OAAO,EAAEM,CAAC,IAAIL,SAAS,CAAC,CAACD,MAAF,CAJzB;AAKE,IAAA,aAAa,EAAEM,CAAC,IAAIP,QAAQ,CAAC,IAAD,CAL9B;AAME,IAAA,YAAY,EAAEO,CAAC,IAAIP,QAAQ,CAAC,KAAD,CAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOE;AAAmB,IAAA,MAAM,EAAC,UAA1B;AAAqC,IAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AAAsB,IAAA,MAAM,EAAC,UAA7B;AAAwC,IAAA,KAAK,EAAED,OAAO,GAAG,SAAH,GAAe,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD;;AAED,eAAeH,OAAf","sourcesContent":["import ReactDOM from 'react-dom'\nimport React, { useRef, useState } from 'react'\nimport { Canvas, useFrame } from 'react-three-fiber'\n\n\nfunction Preview(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={active ? [1.5, 1.5, 1.5] : [1, 1, 1]}\n      onClick={e => setActive(!active)}\n      onPointerOver={e => setHover(true)}\n      onPointerOut={e => setHover(false)}>\n      <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\n      <meshStandardMaterial attach=\"material\" color={hovered ? 'hotpink' : 'orange'} />\n    </mesh>\n  )\n}\n\nexport default Preview;\n\n\n"]},"metadata":{},"sourceType":"module"}