{"ast":null,"code":"var _jsxFileName = \"/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Box.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useSpring, a } from 'react-spring/three';\n\nfunction Box() {\n  const [hovered, setHovered] = useState(false);\n  const [active, setActive] = useState(false);\n  const props = useSpring({\n    scale: active ? [1.3, 1.3, 1.3] : [2, 1, 3],\n    color: hovered ? \"green\" : \"grey\"\n  });\n  return (// mesh is what hold the object  \n    React.createElement(a.mesh, {\n      onPointerOver: () => setHovered(true),\n      onPointerOut: () => setHovered(false),\n      onClick: () => setActive(!active),\n      scale: props.scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"boxBufferGeometry\", {\n      attach: \"geometry\",\n      args: [1.5, 1.5, 1.5],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(a.meshPhysicalMaterial, {\n      attach: \"material\",\n      color: props.color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }))\n  );\n}\n\nexport default Box;","map":{"version":3,"sources":["/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Box.js"],"names":["React","useState","useRef","useEffect","useSpring","a","Box","hovered","setHovered","active","setActive","props","scale","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,SAAT,EAAoBC,CAApB,QAA6B,oBAA7B;;AAEA,SAASC,GAAT,GAAc;AAEN,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMU,KAAK,GAAGP,SAAS,CAAC;AACxBQ,IAAAA,KAAK,EAAEH,MAAM,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAH,GAAmB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CADR;AAExBI,IAAAA,KAAK,EAAEN,OAAO,GAAG,OAAH,GAAa;AAFH,GAAD,CAAvB;AAKA,SACA;AACA,wBAAC,CAAD,CAAG,IAAH;AACA,MAAA,aAAa,EAAE,MAAMC,UAAU,CAAC,IAAD,CAD/B;AAEA,MAAA,YAAY,EAAE,MAAMA,UAAU,CAAC,KAAD,CAF9B;AAGA,MAAA,OAAO,EAAE,MAAME,SAAS,CAAC,CAACD,MAAF,CAHxB;AAIA,MAAA,KAAK,EAAEE,KAAK,CAACC,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI;AAAmB,MAAA,MAAM,EAAC,UAA1B;AAAqC,MAAA,IAAI,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI,oBAAC,CAAD,CAAG,oBAAH;AAAwB,MAAA,MAAM,EAAC,UAA/B;AAA0C,MAAA,KAAK,EAAED,KAAK,CAACE,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ;AAFA;AAYC;;AACF,eAAeP,GAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport { useSpring, a } from 'react-spring/three'\n\nfunction Box(){\n    \n        const [hovered, setHovered] = useState(false) \n        const [active, setActive] = useState(false) \n        const props = useSpring({ \n        scale: active ? [1.3,1.3,1.3] : [2,1,3], \n        color: hovered ? \"green\" : \"grey\",\n         })\n         \n        return(\n        // mesh is what hold the object  \n        <a.mesh  \n        onPointerOver={() => setHovered(true)}  \n        onPointerOut={() => setHovered(false)}  \n        onClick={() => setActive(!active)}  \n        scale={props.scale}>    \n            <boxBufferGeometry attach=\"geometry\" args={[1.5,1.5,1.5]} />\n            <a.meshPhysicalMaterial attach=\"material\" color={props.color} />  \n           </a.mesh> )\n           \n        \n        }\n       export default Box;"]},"metadata":{},"sourceType":"module"}