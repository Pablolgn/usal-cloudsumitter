{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getImplementationResolver = getImplementationResolver;\nexports.default = void 0;\n\nvar _createVideoStreamerComponent = _interopRequireDefault(require(\"../common/createVideoStreamerComponent\"));\n\nvar _streamRangeHelper = _interopRequireDefault(require(\"./streamRangeHelper\"));\n\nvar _filteredStreamStateUpdater = _interopRequireDefault(require(\"../common/filteredStreamStateUpdater\"));\n\nvar _textTrackManager = _interopRequireDefault(require(\"./textTrackManager\"));\n\nvar _audioTrackManager = _interopRequireDefault(require(\"./audioTrackManager\"));\n\nvar _propertyApplier = require(\"../common/propertyApplier\");\n\nvar _playbackLifeCycleManager = _interopRequireDefault(require(\"../common/playbackLifeCycleManager\"));\n\nvar _basicVideoEventHandlers = _interopRequireDefault(require(\"./basicVideoEventHandlers\"));\n\nvar _renderers = require(\"../common/renderers\");\n\nvar _logger = require(\"../common/logger\");\n\nvar _sourceChangeHandler = _interopRequireDefault(require(\"./sourceChangeHandler\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getImplementationResolver(sourceChangeHandlerFactory) {\n  return function resolveImplementation(streamer, configuration, videoElement, onTrackElementDataChange) {\n    const streamRangeHelper = (0, _streamRangeHelper.default)(videoElement, configuration); // S\n\n    const handleSourceChange = sourceChangeHandlerFactory(videoElement);\n    const updateStreamState = (0, _filteredStreamStateUpdater.default)(streamer); // G\n\n    const textTrackManager = (0, _textTrackManager.default)(videoElement, updateStreamState, onTrackElementDataChange);\n    const audioTrackManager = (0, _audioTrackManager.default)(videoElement, updateStreamState);\n    const applyProperties = (0, _propertyApplier.getPropertyApplier)(videoElement, streamRangeHelper, textTrackManager, audioTrackManager); // G\n\n    const _getArrayLogger = (0, _logger.getArrayLogger)(window, 'videoEvents'),\n          log = _getArrayLogger.log;\n\n    const basicHandlers = (0, _basicVideoEventHandlers.default)({\n      streamer,\n      videoElement,\n      streamRangeHelper,\n      configuration,\n      applyProperties,\n      updateStreamState,\n      log\n    });\n    const videoElementEventHandlers = basicHandlers.videoElementEventHandlers,\n          setLifeCycleManager = basicHandlers.setLifeCycleManager;\n    const playbackLifeCycleManager = (0, _playbackLifeCycleManager.default)(updateStreamState, basicHandlers.pauseStreamRangeUpdater, (0, _logger.getArrayLogger)(window, 'lifecycle').log);\n    setLifeCycleManager(playbackLifeCycleManager);\n\n    function cleanup() {\n      textTrackManager.cleanup();\n      audioTrackManager.cleanup();\n      playbackLifeCycleManager.cleanup();\n      basicHandlers.cleanup();\n      return Promise.resolve();\n    }\n\n    const startPlaybackSession = playbackLifeCycleManager.startPlaybackSession,\n          endPlaybackSession = playbackLifeCycleManager.endPlaybackSession;\n    const render = _renderers.renderWithoutSource;\n    return Promise.resolve({\n      cleanup,\n      render,\n      textTrackManager,\n      audioTrackManager,\n      applyProperties,\n      handleSourceChange,\n      startPlaybackSession,\n      endPlaybackSession,\n      videoElementEventHandlers\n    });\n  };\n}\n\nconst BasicVideoStreamer = (0, _createVideoStreamerComponent.default)('BasicVideoStreamer', getImplementationResolver(_sourceChangeHandler.default));\nvar _default = BasicVideoStreamer;\nexports.default = _default;","map":{"version":3,"sources":["../../../../src/replay/components/player/VideoStreamer/BasicVideoStreamer/BasicVideoStreamer.js"],"names":["streamRangeHelper","handleSourceChange","sourceChangeHandlerFactory","updateStreamState","textTrackManager","audioTrackManager","applyProperties","log","basicHandlers","videoElementEventHandlers","setLifeCycleManager","playbackLifeCycleManager","Promise","startPlaybackSession","endPlaybackSession","render","renderWithoutSource","BasicVideoStreamer","getImplementationResolver","getSourceChangeHandler"],"mappings":"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","sourcesContent":["// @flow\nimport type { VideoStreamerImplProps } from '../types';\n\nimport createVideoStreamerComponent from '../common/createVideoStreamerComponent';\nimport getStreamRangeHelper from './streamRangeHelper';\nimport getFilteredStreamStateUpdater from '../common/filteredStreamStateUpdater';\nimport getTextTrackManager from './textTrackManager';\nimport getAudioTrackManager from './audioTrackManager';\nimport { getPropertyApplier } from '../common/propertyApplier';\nimport type { SimplifiedVideoStreamer, StreamerImplementationParts, TrackElementData } from '../common/types';\nimport type { VideoStreamerConfiguration } from '../types';\nimport getPlaybackLifeCycleManager from '../common/playbackLifeCycleManager';\nimport getBasicVideoEventHandlers from './basicVideoEventHandlers';\nimport { renderWithoutSource } from '../common/renderers';\nimport { getArrayLogger } from '../common/logger';\nimport getSourceChangeHandler from './sourceChangeHandler';\n\ntype BasicVideoStreamerProps = VideoStreamerImplProps<VideoStreamerConfiguration>;\ntype ThirdPartyPlayer = null;\n\nexport function getImplementationResolver(\n  sourceChangeHandlerFactory: (\n    videoElement: HTMLVideoElement\n  ) => (BasicVideoStreamerProps, ?BasicVideoStreamerProps) => Promise<any>\n) {\n  return function resolveImplementation(\n    streamer: SimplifiedVideoStreamer<VideoStreamerConfiguration, BasicVideoStreamerProps>,\n    configuration: ?VideoStreamerConfiguration,\n    videoElement: HTMLVideoElement,\n    onTrackElementDataChange: (Array<TrackElementData>) => void\n  ): Promise<StreamerImplementationParts<VideoStreamerConfiguration, BasicVideoStreamerProps, ThirdPartyPlayer>> {\n    const streamRangeHelper = getStreamRangeHelper(videoElement, configuration); // S\n    const handleSourceChange = sourceChangeHandlerFactory(videoElement);\n\n    const updateStreamState = getFilteredStreamStateUpdater(streamer); // G\n\n    const textTrackManager = getTextTrackManager(videoElement, updateStreamState, onTrackElementDataChange);\n    const audioTrackManager = getAudioTrackManager(videoElement, updateStreamState);\n\n    const applyProperties = getPropertyApplier(videoElement, streamRangeHelper, textTrackManager, audioTrackManager); // G\n    const { log } = getArrayLogger(window, 'videoEvents');\n\n    const basicHandlers = getBasicVideoEventHandlers({\n      streamer,\n      videoElement,\n      streamRangeHelper,\n      configuration,\n      applyProperties,\n      updateStreamState,\n      log\n    });\n    const { videoElementEventHandlers, setLifeCycleManager } = basicHandlers;\n\n    const playbackLifeCycleManager = getPlaybackLifeCycleManager(\n      updateStreamState,\n      basicHandlers.pauseStreamRangeUpdater,\n      getArrayLogger(window, 'lifecycle').log\n    );\n    setLifeCycleManager(playbackLifeCycleManager);\n\n    function cleanup() {\n      textTrackManager.cleanup();\n      audioTrackManager.cleanup();\n      playbackLifeCycleManager.cleanup();\n      basicHandlers.cleanup();\n      return Promise.resolve();\n    }\n\n    const { startPlaybackSession, endPlaybackSession } = playbackLifeCycleManager;\n    const render = renderWithoutSource;\n\n    return Promise.resolve({\n      cleanup,\n      render,\n      textTrackManager,\n      audioTrackManager,\n      applyProperties,\n      handleSourceChange,\n      startPlaybackSession,\n      endPlaybackSession,\n      videoElementEventHandlers\n    });\n  };\n}\n\nconst BasicVideoStreamer = createVideoStreamerComponent(\n  'BasicVideoStreamer',\n  getImplementationResolver(getSourceChangeHandler)\n);\n\nexport default BasicVideoStreamer;\n"]},"metadata":{},"sourceType":"script"}