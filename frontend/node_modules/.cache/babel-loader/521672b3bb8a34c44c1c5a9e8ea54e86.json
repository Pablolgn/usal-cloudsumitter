{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _playerStateClassNameBuilder = _interopRequireDefault(require(\"./playerStateClassNameBuilder\"));\n\nvar _common = require(\"../../common\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass PlayerStateClassNames extends React.Component {\n  render() {\n    const _this$props = this.props,\n          render = _this$props.render,\n          classNamePrefix = _this$props.classNamePrefix,\n          classNameDefinitions = _this$props.classNameDefinitions,\n          className = _this$props.className,\n          extraClassNames = _this$props.extraClassNames,\n          playerStateProps = _objectWithoutProperties(_this$props, [\"render\", \"classNamePrefix\", \"classNameDefinitions\", \"className\", \"extraClassNames\"]);\n\n    return render((0, _playerStateClassNameBuilder.default)(playerStateProps, classNameDefinitions, classNamePrefix, className ? [className, ...extraClassNames] : extraClassNames));\n  }\n\n}\n\n_defineProperty(PlayerStateClassNames, \"defaultProps\", {\n  classNamePrefix: _common.defaultClassNamePrefix,\n  extraClassNames: []\n});\n\n_defineProperty(PlayerStateClassNames, \"streamStateKeysForObservation\", ['isPaused', 'isSeeking', 'isBuffering', 'isMuted', 'volume', 'isAtLiveEdge', 'playState', 'error', 'playMode']);\n\nvar _default = PlayerStateClassNames;\nexports.default = _default;","map":{"version":3,"sources":["../../../src/replay/components/player/containment-helpers/PlayerStateClassNames.js"],"names":["PlayerStateClassNames","React","classNamePrefix","defaultClassNamePrefix","extraClassNames","render","classNameDefinitions","className","playerStateProps"],"mappings":";;;;;;;AACA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,4BAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,+BAAA,CAAA,CAAA;;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,MAAA,qBAAA,SAAoCC,KAAK,CAAzC,SAAA,CAA2D;AAkBzDI,EAAAA,MAAM,GAAG;AAAA,UAAA,WAAA,GAQH,KARG,KAAA;AAAA,UAELA,MAFK,GAAA,WAAA,CAAA,MAAA;AAAA,UAGLH,eAHK,GAAA,WAAA,CAAA,eAAA;AAAA,UAILI,oBAJK,GAAA,WAAA,CAAA,oBAAA;AAAA,UAKLC,SALK,GAAA,WAAA,CAAA,SAAA;AAAA,UAMLH,eANK,GAAA,WAAA,CAAA,eAAA;AAAA,UAOFI,gBAPE,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,QAAA,EAAA,iBAAA,EAAA,sBAAA,EAAA,WAAA,EAAA,iBAAA,CAAA,CAAA;;AASP,WAAOH,MAAM,CACX,CAAA,GAAA,4BAAA,CAAA,OAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,eAAA,EAIEE,SAAS,GAAG,CAAA,SAAA,EAAY,GAAf,eAAG,CAAH,GALb,eACE,CADW,CAAb;AAQD;;AAnCwD;;gBAArDP,qB,kBACkB;AACpBE,EAAAA,eAAe,EAAEC,OAAAA,CADG,sBAAA;AAEpBC,EAAAA,eAAe,EAAE;AAFG,C;;gBADlBJ,qB,mCAMkE,CAAA,UAAA,EAAA,WAAA,EAAA,aAAA,EAAA,SAAA,EAAA,QAAA,EAAA,cAAA,EAAA,WAAA,EAAA,OAAA,EAAA,UAAA,C;;eAgCzDA,qB","sourcesContent":["// @flow\nimport * as React from 'react';\nimport type { RecognizedPlayerStateProperties, ClassNameKeys } from './playerStateClassNameBuilder';\nimport playerStateClassNameBuilder from './playerStateClassNameBuilder';\nimport type { CommonGenericProps } from '../../common';\nimport { defaultClassNamePrefix } from '../../common';\nimport type { StreamStateKeysForObservation } from '../PlayerController/ControllerContext';\n\ntype Props = RecognizedPlayerStateProperties &\n  CommonGenericProps & {\n    render: string => React.Node,\n    classNameDefinitions: { [ClassNameKeys]: string },\n    extraClassNames: Array<string>\n  };\n\nclass PlayerStateClassNames extends React.Component<Props> {\n  static defaultProps = {\n    classNamePrefix: defaultClassNamePrefix,\n    extraClassNames: []\n  };\n\n  static streamStateKeysForObservation: StreamStateKeysForObservation = [\n    'isPaused',\n    'isSeeking',\n    'isBuffering',\n    'isMuted',\n    'volume',\n    'isAtLiveEdge',\n    'playState',\n    'error',\n    'playMode'\n  ];\n\n  render() {\n    const {\n      render,\n      classNamePrefix,\n      classNameDefinitions,\n      className,\n      extraClassNames,\n      ...playerStateProps\n    } = this.props;\n    return render(\n      playerStateClassNameBuilder(\n        playerStateProps,\n        classNameDefinitions,\n        classNamePrefix,\n        className ? [className, ...extraClassNames] : extraClassNames\n      )\n    );\n  }\n}\n\nexport default PlayerStateClassNames;\n"]},"metadata":{},"sourceType":"script"}