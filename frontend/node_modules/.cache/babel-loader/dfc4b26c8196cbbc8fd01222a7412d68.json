{"ast":null,"code":"var _jsxFileName = \"/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Upload.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid, Checkbox } from '@material-ui/core';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport PrintIcon from '@material-ui/icons/Print';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport model from '../image.jpg';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8)\n  },\n  root: {\n    marginTop: 80,\n    flexGrow: 1\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3)\n  },\n  fullWidth: {\n    width: '100%'\n  },\n  input: {\n    display: 'none'\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 270\n  },\n  paper: {\n    margin: theme.spacing(2)\n  },\n  model: {\n    marginLeft: theme.spacing(15)\n  },\n  buttons: {\n    marginLeft: theme.spacing(30)\n  }\n}));\n\nfunction Upload() {\n  const [models, setModels] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [numSelect] = React.useState(0);\n  const classes = useStyles();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addItem = name => {\n    setModels([...models, {\n      id: models.length,\n      value: name,\n      sel: false\n    }]);\n  };\n\n  function handleCheckboxClick(event, id) {\n    event.stopPropagation();\n    console.log(numSelect);\n\n    if (models[id].sel === false) {\n      models[id].sel = true;\n      SetnumSelect = 1;\n    } else if (models[id].sel === true) {\n      models[id].sel = false;\n      SetnumSelect = 1;\n    }\n\n    console.log(numSelect);\n  }\n\n  ;\n\n  function handleUpload(e) {\n    const data = new FormData();\n    var models = Array.from(e.target.files);\n\n    for (let m of models) {\n      data.append('file', m);\n      addItem(m.name);\n      axios.post(\"http://localhost:3002/upload\", data).then(response => {// server answer\n      }).catch(e => {\n        console.log(e);\n      });\n      console.log(m);\n    }\n  }\n\n  function handlePrint() {//code for send models to print and optimize\n  }\n\n  function handlerDisplay() {\n    console.log(numSelect);\n\n    if (numSelect === 1) {} else {\n      setOpen(true);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 3,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    component: \"label\",\n    startIcon: React.createElement(CloudUploadIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }),\n    className: classes.upload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Upload File\", React.createElement(\"input\", {\n    type: \"file\",\n    multiple: true,\n    accept: \".pdf,.obj,.stl\",\n    className: classes.input,\n    id: \"Upload-button-file\",\n    onChange: handleUpload.bind(this),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }))), React.createElement(TableContainer, {\n    component: Paper,\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    stickyHeader: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Uploaded files\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, models.map(model => React.createElement(TableRow, {\n    key: model.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    className: classes.check,\n    onClick: event => handleCheckboxClick(event, model.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  })), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, model.value)))))), React.createElement(Grid, {\n    container: true,\n    item: true,\n    direction: \"row\",\n    className: classes.buttons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"secondary\",\n    \"aria-label\": \"Display\",\n    onClick: handlePrint,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(PrintIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"Display\",\n    onClick: handlerDisplay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(LaunchIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  })), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Incorrect number of models\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"You need to select only one model to display.\")), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"ok\"))))), React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.model,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: model,\n    alt: \"model\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  })))));\n}\n\nexport default Upload;","map":{"version":3,"sources":["/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Upload.js"],"names":["React","useState","makeStyles","Button","Grid","Checkbox","axios","Paper","CloudUploadIcon","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","LaunchIcon","PrintIcon","IconButton","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","model","useStyles","theme","title","flexGrow","marginLeft","spacing","root","marginTop","upload","marginBottom","fullWidth","width","input","display","table","margin","maxHeight","paper","buttons","Upload","models","setModels","open","setOpen","numSelect","classes","handleClose","addItem","name","id","length","value","sel","handleCheckboxClick","event","stopPropagation","console","log","SetnumSelect","handleUpload","e","data","FormData","Array","from","target","files","m","append","post","then","response","catch","handlePrint","handlerDisplay","bind","map","check"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {  Button, Grid, Checkbox } from '@material-ui/core';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport PrintIcon from '@material-ui/icons/Print';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport model from '../image.jpg';\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8),\n  },\n  root:{\n    marginTop:80,\n    flexGrow: 1,\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  input: {\n    display: 'none',\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 270,\n  },\n  paper: {\n    margin: theme.spacing(2),\n  },\n  model: {\n    marginLeft:theme.spacing(15),\n  },\n  buttons: {\n    marginLeft:theme.spacing(30),\n  },\n\n}));\n\n\n\n\nfunction Upload() {\n\n  const [models, setModels] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [numSelect] = React.useState(0);\n\n  const classes = useStyles();\n\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const addItem = (name) => {\n    setModels([\n      ...models,\n      {\n        id: models.length,\n        value: name,\n        sel: false,\n      }\n    ]);\n  };\n\n  function handleCheckboxClick(event, id){\n    event.stopPropagation();\n\n    console.log(numSelect);\n      if (models[id].sel === false) {\n          models[id].sel = true;\n          SetnumSelect = 1;\n\n      } else if (models[id].sel === true) {\n          models[id].sel = false; \n          SetnumSelect = 1;\n      }\n      console.log(numSelect);\n  };\n\n  function handleUpload(e) {\n    const data = new FormData()\n\n    var models = Array.from(e.target.files)\n\n    for (let m of models) {\n\n      data.append('file', m)\n      addItem(m.name)\n      axios.post(\"http://localhost:3002/upload\",data).then(response => {\n        // server answer\n      }).catch(e => {\n        console.log(e);\n      });\n\n      console.log(m);\n    }\n  }\n\n  function handlePrint(){\n    //code for send models to print and optimize\n  }\n\n  function handlerDisplay(){\n\n    console.log(numSelect);\n    if(numSelect === 1){\n\n    }else{\n      setOpen(true);\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2} direction=\"row\">\n        <Grid container item xs={3} direction=\"column\">\n          <div>\n          <Button variant=\"contained\" component=\"label\" startIcon={<CloudUploadIcon />}className={classes.upload}>\n              Upload File\n              <input\n                  type=\"file\"\n                  multiple\n                  accept=\".pdf,.obj,.stl\"\n                  className={classes.input}\n                  id=\"Upload-button-file\"\n                  onChange={handleUpload.bind(this)}\n              />\n          </Button>\n          </div>\n          <TableContainer component={Paper} className={classes.table}>\n            <Table  aria-label=\"simple table\" stickyHeader>\n              <TableHead>\n                <TableRow>\n                <TableCell></TableCell>\n                  <TableCell>Uploaded files</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {models.map(model =>\n                  <TableRow key={model.id}>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox className={classes.check} onClick={event => handleCheckboxClick(event, model.id)}/>\n                    </TableCell>\n                    <TableCell>{model.value}</TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <Grid container item direction=\"row\" className={classes.buttons} >\n          <IconButton color=\"secondary\" aria-label=\"Display\" onClick={handlePrint}>\n             <PrintIcon fontSize=\"large\"/>\n          </IconButton>\n          <IconButton color=\"primary\" aria-label=\"Display\" onClick={handlerDisplay}>\n             <LaunchIcon fontSize=\"large\"/>\n          </IconButton>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Incorrect number of models\"}</DialogTitle>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                  You need to select only one model to display.\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                  ok\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Grid>\n        </Grid>\n        <Grid item xs={9} >\n          <div className={classes.model}>\n            <img src={model} alt=\"model\"/>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\n\n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}