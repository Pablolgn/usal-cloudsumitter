{"ast":null,"code":"var _jsxFileName = \"/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Preview.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\n\nfunction Preview() {\n  const mount = useRef(null);\n  const [isAnimating, setAnimating] = useState(true);\n  const controls = useRef(null);\n  useEffect(() => {\n    let width = mount.current.clientWidth;\n    let height = mount.current.clientHeight;\n    let frameId;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n\n    var STLLoader = require('three-stl-loader')(THREE);\n\n    var cube = new STLLoader();\n    cube.load('./models/gear.stl', function (geometry) {\n      var material = new THREE.MeshPhongMaterial({\n        color: 0xff5533,\n        specular: 0x111111,\n        shininess: 200\n      });\n      var mesh = new THREE.Mesh(geometry, material);\n      camera.position.z = 4;\n      scene.add(cube);\n      renderer.setClearColor('#000000');\n      renderer.setSize(width, height);\n      scene.add(mesh);\n    });\n\n    const renderScene = () => {\n      renderer.render(scene, camera);\n    };\n\n    const handleResize = () => {\n      width = mount.current.clientWidth;\n      height = mount.current.clientHeight;\n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderScene();\n    };\n\n    const animate = () => {\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderScene();\n      frameId = window.requestAnimationFrame(animate);\n    };\n\n    const start = () => {\n      if (!frameId) {\n        frameId = requestAnimationFrame(animate);\n      }\n    };\n\n    const stop = () => {\n      cancelAnimationFrame(frameId);\n      frameId = null;\n    };\n\n    mount.current.appendChild(renderer.domElement);\n    window.addEventListener('resize', handleResize);\n    start();\n    controls.current = {\n      start,\n      stop\n    };\n    return () => {\n      stop();\n      window.removeEventListener('resize', handleResize);\n      mount.current.removeChild(renderer.domElement);\n      scene.remove(cube);\n      geometry.dispose();\n      material.dispose();\n    };\n  }, []);\n  useEffect(() => {\n    if (isAnimating) {\n      controls.current.start();\n    } else {\n      controls.current.stop();\n    }\n  }, [isAnimating]);\n  return React.createElement(\"div\", {\n    className: \"vis\",\n    ref: mount,\n    onClick: () => setAnimating(!isAnimating),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  });\n}\n\nexport default Preview;","map":{"version":3,"sources":["/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Preview.js"],"names":["React","useRef","useEffect","useState","THREE","Preview","mount","isAnimating","setAnimating","controls","width","current","clientWidth","height","clientHeight","frameId","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","antialias","STLLoader","require","cube","load","geometry","material","MeshPhongMaterial","color","specular","shininess","mesh","Mesh","position","z","add","setClearColor","setSize","renderScene","render","handleResize","aspect","updateProjectionMatrix","animate","rotation","x","y","window","requestAnimationFrame","start","stop","cancelAnimationFrame","appendChild","domElement","addEventListener","removeEventListener","removeChild","remove","dispose"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three'\n\n\n\nfunction Preview(){\n\n  const mount = useRef(null)\n  const [isAnimating, setAnimating] = useState(true)\n  const controls = useRef(null)\n  \n  useEffect(() => {\n    let width = mount.current.clientWidth\n    let height = mount.current.clientHeight\n    let frameId\n\n    const scene = new THREE.Scene()\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000)\n    const renderer = new THREE.WebGLRenderer({ antialias: true })\n\n    var STLLoader = require('three-stl-loader')(THREE)\n\n    var cube = new STLLoader();\n    cube.load( './models/gear.stl', function ( geometry ) {\n\n      var material = new THREE.MeshPhongMaterial( { color: 0xff5533, specular: 0x111111, shininess: 200 } );\n      var mesh = new THREE.Mesh( geometry, material );\n\n\n      camera.position.z = 4\n      scene.add(cube)\n      renderer.setClearColor('#000000')\n      renderer.setSize(width, height)\n\n      scene.add( mesh );\n\n    } );\n\n\n\n\n    const renderScene = () => {\n      renderer.render(scene, camera)\n    }\n\n    const handleResize = () => {\n      width = mount.current.clientWidth\n      height = mount.current.clientHeight\n      renderer.setSize(width, height)\n      camera.aspect = width / height\n      camera.updateProjectionMatrix()\n      renderScene()\n    }\n    \n    const animate = () => {\n      cube.rotation.x += 0.01\n      cube.rotation.y += 0.01\n\n      renderScene()\n      frameId = window.requestAnimationFrame(animate)\n    }\n\n    const start = () => {\n      if (!frameId) {\n        frameId = requestAnimationFrame(animate)\n      }\n    }\n\n    const stop = () => {\n      cancelAnimationFrame(frameId)\n      frameId = null\n    }\n\n    mount.current.appendChild(renderer.domElement)\n    window.addEventListener('resize', handleResize)\n    start()\n\n    controls.current = { start, stop }\n    \n    return () => {\n      stop()\n      window.removeEventListener('resize', handleResize)\n      mount.current.removeChild(renderer.domElement)\n\n      scene.remove(cube)\n      geometry.dispose()\n      material.dispose()\n    }\n  }, [])\n\n  useEffect(() => {\n    if (isAnimating) {\n      controls.current.start()\n    } else {\n      controls.current.stop()\n    }\n  }, [isAnimating])\n  \n  return <div className=\"vis\" ref={mount} onClick={() => setAnimating(!isAnimating)} />\n}\nexport default Preview;"]},"metadata":{},"sourceType":"module"}