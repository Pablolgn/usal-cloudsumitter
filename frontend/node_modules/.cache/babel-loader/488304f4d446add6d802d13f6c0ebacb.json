{"ast":null,"code":"var _jsxFileName = \"/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Stl.js\";\nimport * as THREE from 'three';\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader';\nimport { useLoader } from 'react-three-fiber';\nvar camera, scene;\n\nfunction Stl() {\n  // scene\n  scene = new THREE.Scene(); // camera\n\n  camera = new THREE.PerspectiveCamera(35, window.innerWidth / window.innerHeight, 1, 10000);\n  camera.position.set(3, 0.5, 3);\n  scene.add(camera); // required, because we are adding a light as a child of the camera\n  // lights\n\n  scene.add(new THREE.AmbientLight(0x222222));\n  var light = new THREE.PointLight(0xffffff, 0.8);\n  camera.add(light);\n\n  function Asset({\n    url\n  }) {\n    const gltf = useLoader(GLTFLoader, url);\n    return React.createElement(\"primitive\", {\n      object: gltf.scene,\n      dispose: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Asset, {\n    url: \"../models/gear.stl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n}\n\n;\nexport default Stl;","map":{"version":3,"sources":["/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Stl.js"],"names":["THREE","STLLoader","useLoader","camera","scene","Stl","Scene","PerspectiveCamera","window","innerWidth","innerHeight","position","set","add","AmbientLight","light","PointLight","Asset","url","gltf","GLTFLoader"],"mappings":";AAAE,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,sCAA1B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAGE,IAAIC,MAAJ,EAAYC,KAAZ;;AAEJ,SAASC,GAAT,GAAc;AAGV;AACAD,EAAAA,KAAK,GAAG,IAAIJ,KAAK,CAACM,KAAV,EAAR,CAJU,CAMV;;AACAH,EAAAA,MAAM,GAAG,IAAIH,KAAK,CAACO,iBAAV,CAA6B,EAA7B,EAAiCC,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAA5D,EAAyE,CAAzE,EAA4E,KAA5E,CAAT;AACAP,EAAAA,MAAM,CAACQ,QAAP,CAAgBC,GAAhB,CAAqB,CAArB,EAAwB,GAAxB,EAA6B,CAA7B;AACAR,EAAAA,KAAK,CAACS,GAAN,CAAWV,MAAX,EATU,CASW;AAErB;;AACAC,EAAAA,KAAK,CAACS,GAAN,CAAW,IAAIb,KAAK,CAACc,YAAV,CAAwB,QAAxB,CAAX;AAEA,MAAIC,KAAK,GAAG,IAAIf,KAAK,CAACgB,UAAV,CAAsB,QAAtB,EAAgC,GAAhC,CAAZ;AACAb,EAAAA,MAAM,CAACU,GAAP,CAAYE,KAAZ;;AAGA,WAASE,KAAT,CAAe;AAAEC,IAAAA;AAAF,GAAf,EAAwB;AACpB,UAAMC,IAAI,GAAGjB,SAAS,CAACkB,UAAD,EAAaF,GAAb,CAAtB;AACA,WAAO;AAAW,MAAA,MAAM,EAAEC,IAAI,CAACf,KAAxB;AAA+B,MAAA,OAAO,EAAE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAEH,SACI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,oBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAMH;;AAAA;AAED,eAAeC,GAAf","sourcesContent":["  import * as THREE from 'three'\n  import { STLLoader } from 'three/examples/jsm/loaders/STLLoader'\n  import { useLoader } from 'react-three-fiber'\n\n\n    var camera, scene;\n  \nfunction Stl(){\n\n\n    // scene\n    scene = new THREE.Scene();\n\n    // camera\n    camera = new THREE.PerspectiveCamera( 35, window.innerWidth / window.innerHeight, 1, 10000 );\n    camera.position.set( 3, 0.5, 3 );\n    scene.add( camera ); // required, because we are adding a light as a child of the camera\n\n    // lights\n    scene.add( new THREE.AmbientLight( 0x222222 ) );\n\n    var light = new THREE.PointLight( 0xffffff, 0.8 );\n    camera.add( light );\n\n\n    function Asset({ url }) {\n        const gltf = useLoader(GLTFLoader, url)\n        return <primitive object={gltf.scene} dispose={null} />\n      }\n      \n    return(\n        <Asset url=\"../models/gear.stl\" />\n    );\n\n\n\n};\n\nexport default Stl;"]},"metadata":{},"sourceType":"module"}