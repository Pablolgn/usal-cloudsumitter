{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pablo/work/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/File_list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; //general\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Grid, Checkbox, Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField'; //table\n\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow'; //icons\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PrintIcon from '@material-ui/icons/Print';\nimport DeleteIcon from '@material-ui/icons/Delete'; //components\n\nimport State from './State';\nimport Preview from './Preview'; //Dialog\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8)\n  },\n  root: {\n    marginTop: 80,\n    flexGrow: 1\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3)\n  },\n  fullWidth: {\n    width: '100%'\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 350,\n    width: 520\n  },\n  paper: {\n    marginLeft: theme.spacing(20),\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(5)\n  },\n  model: {\n    margin: theme.spacing(2)\n  },\n  label1: {\n    marginTop: theme.spacing(5)\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  label2: {\n    marginTop: theme.spacing(3)\n  },\n  closeButton: {\n    marginLeft: theme.spacing(2),\n    marginTop: theme.spacing(4)\n  },\n  printStatus: {\n    marginLeft: theme.spacing(5)\n  },\n  buttons: {\n    marginLeft: theme.spacing(55)\n  },\n  numbers: {\n    width: 50\n  }\n}));\n\nfunction FileList() {\n  _s();\n\n  const [models, setModels] = useState([]);\n  const [aux, setAux] = useState([]);\n  const [count, setCount] = useState(0);\n  const [state, setState] = useState([]);\n  const [printMess, setPrintMess] = useState(false); //const [del, setDel] = useState(0);\n\n  const classes = useStyles();\n  useEffect(() => {\n    handlerCharge();\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      axios.get(\"http://mini3dfactory.duckdns.org:3004/api/communication/state\").then(response => {\n        //console.log(response.data)\n        updateState(response);\n      }).catch(e => {\n        console.log(e);\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  function updateState(r) {\n    new Date(r.data.Progress.printTime * 1000).toISOString().substr(11, 8);\n    setState({\n      state: r.data.state,\n      printTime: new Date(r.data.Progress.printTime * 1000).toISOString().substr(11, 8),\n      printTimeLeft: Math.round(r.data.Progress.printTimeLeft / 60),\n      percent: r.data.Progress.completion,\n      filaLength: (r.data.Job.Filament.Tool0.length / 1000).toFixed(2),\n      filaVol: r.data.Job.Filament.Tool0.volume.toFixed(2),\n      name: r.data.Job.File.name,\n      size: (r.data.Job.File.size * 1e-6).toFixed(2),\n      price: (r.data.Job.Filament.Tool0.volume * 1.24 / 1000 * 20).toFixed(2),\n      //((volume * density)/1kg)*price \n      user: r.data.Job.user\n    });\n  }\n\n  function handlerDelete(id) {\n    axios.delete(\"http://mini3dfactory.duckdns.org:3002/api/models/delete/\" + models[id].value).then(response => {\n      handlerCharge();\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  ;\n\n  function handlerButClose() {\n    setPrintMess(false);\n  }\n\n  function handleCheckboxClick(event, id) {\n    event.stopPropagation();\n\n    if (models[id].sel === false) {\n      models[id].sel = true;\n      setCount(count + 1);\n      setAux([models[id].file]);\n    } else if (models[id].sel === true) {\n      models[id].sel = false;\n      setCount(count - 1);\n    }\n  }\n\n  ;\n\n  function handlerNumber(n, id) {\n    if (n !== \"\") {\n      models[id].number = n;\n    }\n  } //function to optimize the .stl models \n\n\n  function handlerOptimize() {\n    var arrOfModels = [];\n\n    for (let m of models) {\n      if (m.sel === true) {\n        arrOfModels.push({\n          name: m.value,\n          number: m.number\n        });\n      }\n    }\n\n    axios.post(\"http://mini3dfactory.duckdns.org:3003/api/optimize\", arrOfModels).then(response => {\n      handlerCharge();\n      return response.data;\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  function handlerPrint() {\n    var fullName;\n    var arrOfModels = [];\n\n    for (let m of models) {\n      if (m.sel === true) {\n        arrOfModels.push({\n          name: m.value,\n          number: m.number\n        });\n      }\n    }\n\n    if (arrOfModels.length > 1 || arrOfModels[0].number > 1) {\n      setPrintMess(true);\n    } else {\n      fullName = arrOfModels[0].name;\n      var filename = fullName.slice(0, -4);\n      /* \n      axios.post(\"http://mini3dfactory.duckdns.org:3002/api/models/printupload/\"+filename).then(response => {\n        // server answer\n      }).catch(e => {\n        console.log(e);\n      });\n      */\n    }\n  } //function to read all the models that are uploaded on the server\n\n\n  function handlerCharge() {\n    axios.get(\"http://mini3dfactory.duckdns.org:3002/api/models\").then(function (response) {\n      var namelist = response.data;\n      var items = [];\n      setModels([]);\n      let counter = 0;\n      namelist.forEach(nl => {\n        axios.get(\"http://mini3dfactory.duckdns.org:3002/api/models/Uploaded_models/\" + nl, {\n          responseType: 'blob'\n        }).then(function (response) {\n          const f = new Blob([response.data]);\n          var file = new File([f], nl, {\n            type: \"application/sla\",\n            lastModified: Date.now()\n          });\n          items.push({\n            value: file.name,\n            sel: false,\n            file: file,\n            number: \"1\",\n            id: counter\n          });\n          counter++;\n\n          if (counter === namelist.length) {\n            setModels(items);\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          className: classes.table,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-label\": \"simple table\",\n            stickyHeader: true,\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Files on server\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: models.map(model => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    color: \"primary\",\n                    checked: model.sel,\n                    onClick: event => handleCheckboxClick(event, model.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: model.sel ? /*#__PURE__*/_jsxDEV(TextField, {\n                    type: \"number\",\n                    className: classes.numbers,\n                    onChange: event => handlerNumber(event.target.value, model.id),\n                    defaultValue: \"1\",\n                    id: \"number\",\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 29\n                  }, this) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: classes.name,\n                  children: model.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Preview, {\n                    size: 50,\n                    file: model.file\n                  }, 2, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: model.sel ? /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"secondary\",\n                    \"aria-label\": \"Delete\",\n                    onClick: () => handlerDelete(model.id),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                      fontSize: \"large\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 29\n                  }, this) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 25\n                }, this)]\n              }, model.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          className: classes.buttons,\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            disabled: !count,\n            \"aria-label\": \"Optimize\",\n            onClick: handlerOptimize,\n            children: /*#__PURE__*/_jsxDEV(DashboardIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            disabled: !count,\n            \"aria-label\": \"Optimize\",\n            onClick: handlerPrint,\n            children: /*#__PURE__*/_jsxDEV(PrintIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(State, {\n          model: aux,\n          state: state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: printMess,\n      children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: [\"For print severals copies or different models, you need to press the button of the left to combine and optimize them. ~\", \"\\n\", \"Once this is done, you can see that a new model has appeared with a name like OP-XX:XX:XX.stl with the current date.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handlerButClose,\n          color: \"primary\",\n          children: \"Agree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FileList, \"SWUe6CM00bhpivIg3H5m1xu/dss=\", false, function () {\n  return [useStyles];\n});\n\n_c = FileList;\nexport default FileList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileList\");","map":{"version":3,"sources":["/home/pablo/work/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/File_list.js"],"names":["React","useState","useEffect","axios","makeStyles","IconButton","Grid","Checkbox","Button","TextField","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","DashboardIcon","PrintIcon","DeleteIcon","State","Preview","Dialog","DialogActions","DialogContent","DialogContentText","useStyles","theme","title","flexGrow","marginLeft","spacing","root","marginTop","upload","marginBottom","fullWidth","width","table","margin","maxHeight","paper","marginRight","model","label1","label2","closeButton","printStatus","buttons","numbers","FileList","models","setModels","aux","setAux","count","setCount","state","setState","printMess","setPrintMess","classes","handlerCharge","interval","setInterval","get","then","response","updateState","catch","e","console","log","clearInterval","r","Date","data","Progress","printTime","toISOString","substr","printTimeLeft","Math","round","percent","completion","filaLength","Job","Filament","Tool0","length","toFixed","filaVol","volume","name","File","size","price","user","handlerDelete","id","delete","value","handlerButClose","handleCheckboxClick","event","stopPropagation","sel","file","handlerNumber","n","number","handlerOptimize","arrOfModels","m","push","post","handlerPrint","fullName","filename","slice","namelist","items","counter","forEach","nl","responseType","f","Blob","type","lastModified","now","error","map","target"],"mappings":"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","sourcesContent":["import React, { useState , useEffect } from 'react';\nimport axios from 'axios';\n  //general\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Grid, Checkbox, Button} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\n  //table\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n  //icons\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PrintIcon from '@material-ui/icons/Print';\nimport DeleteIcon from '@material-ui/icons/Delete';\n//components\nimport State from './State'\nimport Preview from './Preview';\n//Dialog\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8),\n  },\n  root:{\n    marginTop:80,\n    flexGrow: 1,\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 350,\n    width: 520\n\n  },\n  paper: {\n    marginLeft: theme.spacing(20),\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(5),\n  },\n  model: {\n    margin: theme.spacing(2),\n  },\n  label1: {\n    marginTop: theme.spacing(5),\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  label2: {\n    marginTop: theme.spacing(3),\n  },\n  closeButton: {\n    marginLeft: theme.spacing(2),\n    marginTop: theme.spacing(4)\n  },\n  printStatus: {\n    marginLeft:theme.spacing(5),\n  },\n  buttons: {\n    marginLeft:theme.spacing(55),\n  },\n  numbers: {\n    width:50\n  },\n\n}));\n\nfunction FileList() {\n\n  const [models, setModels] = useState([]);\n  const [aux, setAux] = useState([]);\n  const [count, setCount] = useState(0);\n  const [state, setState] = useState([]);\n  const [printMess, setPrintMess] = useState(false);\n  \n  //const [del, setDel] = useState(0);\n\n  const classes = useStyles();\n\n  useEffect(() => { \n    handlerCharge()\n  },[]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      axios.get(\"http://mini3dfactory.duckdns.org:3004/api/communication/state\").then(response => { \n        \n     //console.log(response.data)\n      updateState(response)\n\n      }).catch(e => {\n        console.log(e);\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  function updateState(r){\n\n    new Date(r.data.Progress.printTime * 1000).toISOString().substr(11, 8)\n\n    setState({\n      state: r.data.state,\n      printTime:   new Date(r.data.Progress.printTime * 1000).toISOString().substr(11, 8),\n      printTimeLeft: Math.round(r.data.Progress.printTimeLeft / 60),\n      percent: r.data.Progress.completion,\n      filaLength: (r.data.Job.Filament.Tool0.length / 1000).toFixed(2),\n      filaVol: r.data.Job.Filament.Tool0.volume.toFixed(2),\n      name: r.data.Job.File.name,\n      size: (r.data.Job.File.size * 1e-6).toFixed(2),\n      price: (((r.data.Job.Filament.Tool0.volume*1.24 )/1000)*20).toFixed(2), //((volume * density)/1kg)*price \n      user: r.data.Job.user\n    })\n\n  }\n\n\n\n  function handlerDelete(id){\n\n    axios.delete(\"http://mini3dfactory.duckdns.org:3002/api/models/delete/\" + models[id].value).then(response => {\n      handlerCharge()\n    }).catch(e => {\n      console.log(e);\n    });\n\n  };\n\n\n  function handlerButClose(){\n    setPrintMess(false)\n  }\n\n\n  function handleCheckboxClick(event, id){\n    event.stopPropagation();\n\n      if (models[id].sel === false) {\n          models[id].sel = true;\n          setCount(count + 1)\n          setAux([models[id].file])\n\n      } else if (models[id].sel === true) {\n          models[id].sel = false; \n          setCount(count - 1)\n      }\n  };\n\n  function handlerNumber(n,id){\n    if(n !== \"\"){\n      models[id].number = n\n    }\n  }\n\n  //function to optimize the .stl models \n  function handlerOptimize(){\n    var arrOfModels = []\n\n    for (let m of models) {\n      if (m.sel === true){\n        arrOfModels.push({name:m.value , number:m.number})\n      }\n    }\n\n    axios.post(\"http://mini3dfactory.duckdns.org:3003/api/optimize\",arrOfModels).then(response => {\n      handlerCharge()\n      return response.data\n    }).catch(e => {\n      console.log(e);\n    });\n\n\n  }\n\n  function handlerPrint(){\n    var fullName \n    var arrOfModels = []\n\n    for (let m of models) {\n      if (m.sel === true){\n        arrOfModels.push({name:m.value , number:m.number})\n      }\n    }\n\n    if(arrOfModels.length > 1 || arrOfModels[0].number > 1){\n      setPrintMess(true)\n\n    }else{\n      fullName = arrOfModels[0].name\n\n      var filename = fullName.slice(0,-4)\n      /* \n      axios.post(\"http://mini3dfactory.duckdns.org:3002/api/models/printupload/\"+filename).then(response => {\n        // server answer\n      }).catch(e => {\n        console.log(e);\n      });\n      */\n    }\n\n  }\n\n  //function to read all the models that are uploaded on the server\n  function handlerCharge(){\n\n    axios.get(\"http://mini3dfactory.duckdns.org:3002/api/models\").then(function (response){ \n\n          var namelist = response.data;\n          var items = [];\n\n            setModels([])\n     \n          let counter = 0;\n\n          namelist.forEach( nl => {\n\n            axios.get(\"http://mini3dfactory.duckdns.org:3002/api/models/Uploaded_models/\"+nl,{responseType: 'blob'}).then(function (response){ \n\n              const f = new Blob([response.data]);\n              var file = new File([f], nl, {type: \"application/sla\", lastModified: Date.now()});\n\n                items.push({\n                  value: file.name,\n                  sel: false,\n                  file: file,\n                  number: \"1\",\n                  id: counter\n                })\n                counter++\n\n                if(counter === namelist.length){\n                  setModels(items)\n                }\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n            })\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n  }\n\n  return (\n    <div className={classes.root}>\n    <Grid container spacing={2} direction=\"row\">\n      <Grid item xs={4}>\n           <TableContainer component={Paper} className={classes.table}>\n              <Table  aria-label=\"simple table\" stickyHeader>\n                <TableHead>\n                    <TableRow>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell>Files on server</TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    </TableRow>\n                </TableHead>\n\n                <TableBody>\n                    {models.map(model =>\n                      <TableRow key={model.id}>\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox color=\"primary\" checked={model.sel} onClick={event => handleCheckboxClick(event, model.id)}/>\n                        </TableCell>\n                        <TableCell>  \n                          {model.sel ? \n                            <TextField type={\"number\"} className={classes.numbers} onChange={event => handlerNumber(event.target.value,model.id)} defaultValue=\"1\" id=\"number\" size=\"small\"/>\n                                                    : null\n                          }\n                        </TableCell>\n                        <TableCell className={classes.name}>{model.value}</TableCell>\n                        <TableCell>  \n                          <Preview size={50} file={model.file} key={2}/>\n                        </TableCell>\n                        <TableCell>  \n                          {model.sel ? \n                            <IconButton color=\"secondary\" aria-label=\"Delete\" onClick={() => handlerDelete(model.id)}>\n                              <DeleteIcon fontSize=\"large\"/>\n                            </IconButton> \n                                                    : null\n                          }\n                        </TableCell>\n                      </TableRow>\n                    )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n\n          <Grid container direction=\"row\" className={classes.buttons} >\n              <IconButton color=\"primary\" disabled={!count} aria-label=\"Optimize\" onClick={handlerOptimize}>\n                <DashboardIcon fontSize=\"large\"/>\n              </IconButton>\n\n              <IconButton  color=\"primary\" disabled={!count} aria-label=\"Optimize\" onClick={handlerPrint}>\n                <PrintIcon fontSize=\"large\"/>\n              </IconButton>\n\n            </Grid>\n      </Grid>\n      <Grid item xs={8}>\n        <State model={aux} state={state}/>\n      </Grid>\n    </Grid>\n\n    <Dialog\n        open={printMess}\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            For print severals copies or different models, you need to press the button of the left to combine and optimize them.\n            ~{\"\\n\"}Once this is done, you can see that a new model has appeared with a name like OP-XX:XX:XX.stl with the current date.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handlerButClose} color=\"primary\">\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n    </div>\n  );\n}\n\nexport default FileList;\n"]},"metadata":{},"sourceType":"module"}