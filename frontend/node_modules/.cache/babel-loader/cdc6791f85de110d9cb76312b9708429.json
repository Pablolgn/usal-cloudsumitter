{"ast":null,"code":"var _jsxFileName = \"/home/pablo/work/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Upload.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid, Checkbox } from '@material-ui/core';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport IconButton from '@material-ui/core/IconButton';\nimport SendIcon from '@material-ui/icons/Send';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Preview from './Preview';\nimport STLDisplay from './STLDisplay';\nimport { Link } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8)\n  },\n  root: {\n    marginTop: 80,\n    flexGrow: 1\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3)\n  },\n  fullWidth: {\n    width: '100%'\n  },\n  input: {\n    display: 'none'\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 270\n  },\n  paper: {\n    margin: theme.spacing(2)\n  },\n  model: {\n    marginLeft: theme.spacing(5)\n  },\n  buttons: {\n    marginLeft: theme.spacing(40)\n  }\n}));\n\nfunction Upload() {\n  const [models, setModels] = useState([]);\n  const [aux, setaux] = useState([]);\n  const [count, setCount] = useState(0);\n  const [open, setOpen] = React.useState(false);\n  const [alert, setAlert] = React.useState(false);\n  const [send, setSend] = React.useState(false);\n  const classes = useStyles();\n\n  function handleCheckboxClick(event, id) {\n    event.stopPropagation();\n    console.log(models[id]);\n\n    if (models[id].sel === false) {\n      models[id].sel = true;\n      setCount(count + 1);\n    } else if (models[id].sel === true) {\n      models[id].sel = false;\n      setCount(count - 1);\n    }\n  }\n\n  ;\n\n  function contain(element) {\n    for (let m of models) {\n      if (m.value === element) {\n        setAlert(true);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function handlerUpload(e) {\n    let count = models.length;\n    let items = [];\n\n    for (let m of models) {\n      items.push(m);\n    }\n\n    var UpModels = Array.from(e.target.files);\n\n    for (let um of UpModels) {\n      count++;\n\n      if (contain(um.name) !== true) {\n        items.push({\n          value: um.name,\n          sel: false,\n          file: um,\n          id: count\n        });\n      }\n    }\n\n    setModels(items);\n  }\n\n  function handlerServer() {\n    const data = new FormData();\n\n    if (count > 0) {\n      for (let m of models) {\n        if (m.sel === true) {\n          data.append('files', m.file);\n        }\n      }\n\n      axios.post(\"http://localhost:3002/upload\", data).then(response => {// server answer\n      }).catch(e => {\n        console.log(e);\n      });\n      setSend(true);\n    } //maybe message\n\n  }\n\n  function handlerDisplay() {\n    if (count === 1) {\n      for (let m of models) {\n        if (m.sel === true) {\n          setaux([m.file]);\n        }\n      }\n    } else {\n      setOpen(true);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 4,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    component: \"label\",\n    startIcon: React.createElement(CloudUploadIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }),\n    className: classes.upload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Upload File\", React.createElement(\"input\", {\n    type: \"file\",\n    multiple: true,\n    accept: \".obj,.stl,.3mf\",\n    className: classes.input,\n    id: \"Upload-button-file\",\n    onChange: handlerUpload.bind(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }))), React.createElement(TableContainer, {\n    component: Paper,\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    stickyHeader: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Uploaded files\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, models.map(model => React.createElement(TableRow, {\n    key: model.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    className: classes.check,\n    onClick: event => handleCheckboxClick(event, model.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  })), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, model.value), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(Preview, {\n    file: model.file,\n    size: 50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }))))))), React.createElement(Grid, {\n    container: true,\n    item: true,\n    direction: \"row\",\n    className: classes.buttons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/server\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"secondary\",\n    \"aria-label\": \"Display\",\n    onClick: handlerServer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(SendIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }))), React.createElement(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"Display\",\n    onClick: handlerDisplay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(LaunchIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(Collapse, {\n    in: alert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    severity: \"warning\",\n    action: React.createElement(IconButton, {\n      \"aria-label\": \"alert\",\n      color: \"inherit\",\n      size: \"small\",\n      onClick: () => {\n        setAlert(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      fontSize: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(AlertTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, \"Warning\"), \"You can not upload 2 files with same name.\")), React.createElement(Collapse, {\n    in: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    severity: \"warning\",\n    action: React.createElement(IconButton, {\n      \"aria-label\": \"alert\",\n      color: \"inherit\",\n      size: \"small\",\n      onClick: () => {\n        setOpen(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      fontSize: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(AlertTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, \"Warning\"), \"You must select only one model to display.\")), React.createElement(Collapse, {\n    in: send,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    severity: \"success\",\n    action: React.createElement(IconButton, {\n      \"aria-label\": \"alert\",\n      color: \"inherit\",\n      size: \"small\",\n      onClick: () => {\n        setSend(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      fontSize: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, React.createElement(AlertTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, \"Send\"), \"Your models had sended to server successful!\")), React.createElement(\"div\", {\n    className: classes.model,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, aux.map(auxModel => React.createElement(STLDisplay, {\n    file: auxModel,\n    size: 400,\n    key: aux.size,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }))))));\n}\n\nexport default Upload;","map":{"version":3,"sources":["/home/pablo/work/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Upload.js"],"names":["React","useState","makeStyles","Button","Grid","Checkbox","axios","Paper","CloudUploadIcon","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","LaunchIcon","IconButton","SendIcon","Alert","AlertTitle","Collapse","CloseIcon","Preview","STLDisplay","Link","useStyles","theme","title","flexGrow","marginLeft","spacing","root","marginTop","upload","marginBottom","fullWidth","width","input","display","table","margin","maxHeight","paper","model","buttons","Upload","models","setModels","aux","setaux","count","setCount","open","setOpen","alert","setAlert","send","setSend","classes","handleCheckboxClick","event","id","stopPropagation","console","log","sel","contain","element","m","value","handlerUpload","e","length","items","push","UpModels","Array","from","target","files","um","name","file","handlerServer","data","FormData","append","post","then","response","catch","handlerDisplay","bind","map","check","auxModel","size"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {  Button, Grid, Checkbox} from '@material-ui/core';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport IconButton from '@material-ui/core/IconButton';\nimport SendIcon from '@material-ui/icons/Send';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Preview from './Preview';\nimport STLDisplay from './STLDisplay';\nimport { Link } from 'react-router-dom';\n\n\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8),\n  },\n  root:{\n    marginTop:80,\n    flexGrow: 1,\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  input: {\n    display: 'none',\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 270,\n  },\n  paper: {\n    margin: theme.spacing(2),\n  },\n  model: {\n    marginLeft:theme.spacing(5),\n  },\n  buttons: {\n    marginLeft:theme.spacing(40),\n  },\n\n\n}));\n\n\n\n\nfunction Upload() {\n\n  const [models, setModels] = useState([]);\n  const [aux, setaux] = useState([]);\n  const [count, setCount] = useState(0);\n  const [open, setOpen] = React.useState(false);\n  const [alert, setAlert] = React.useState(false);\n  const [send, setSend] = React.useState(false);\n\n\n  const classes = useStyles();\n\n\n  function handleCheckboxClick(event, id){\n    event.stopPropagation();\n    console.log(models[id]);\n\n      if (models[id].sel === false) {\n          models[id].sel = true;\n          setCount(count + 1)\n\n      } else if (models[id].sel === true) {\n          models[id].sel = false; \n          setCount(count - 1)\n      }\n\n  };\n  function contain(element){\n    for (let m of models) {\n      if(m.value === element){\n        setAlert(true);\n        return true\n      }\n    }\n    return false\n}\n\n  function handlerUpload(e) {\n\n    let count = models.length;\n    let items = [];\n\n    for(let m of models){\n      items.push(m);\n    }\n    var UpModels = Array.from(e.target.files)\n    \n    for (let um of UpModels) {\n      count++;\n      if(contain(um.name)!==true){\n        items.push({\n          value: um.name,\n          sel: false,\n          file: um,\n          id: count\n        })\n        \n      }\n    }\n    setModels(items)\n  }\n\n\n\n  function handlerServer(){\n    const data = new FormData()\n    if(count > 0){\n\n    for (let m of models) {\n      if(m.sel === true){\n        data.append('files', m.file)\n      }\n    }\n    axios.post(\"http://localhost:3002/upload\",data).then(response => {\n      // server answer\n    }).catch(e => {\n      console.log(e);\n    });\n    setSend(true)\n  }\n  //maybe message\n  }\n\n  function handlerDisplay(){\n\n    if(count === 1){\n      for (let m of models) {\n        if(m.sel === true){\n          setaux([m.file]);\n        }\n      }\n    }else{\n      setOpen(true);\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2} direction=\"row\">\n        <Grid container item xs={4} direction=\"column\">\n          <div>\n          <Button variant=\"contained\" component=\"label\" startIcon={<CloudUploadIcon />}className={classes.upload}>\n              Upload File\n              <input\n                  type=\"file\"\n                  multiple\n                  accept=\".obj,.stl,.3mf\"\n                  className={classes.input}\n                  id=\"Upload-button-file\"\n                  onChange={handlerUpload.bind()}\n              />\n          </Button>\n          </div>\n          <TableContainer component={Paper} className={classes.table}>\n            <Table  aria-label=\"simple table\" stickyHeader>\n              <TableHead>\n                <TableRow>\n                <TableCell></TableCell>\n                  <TableCell>Uploaded files</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {models.map(model =>\n                  <TableRow key={model.id}>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox className={classes.check} onClick={event => handleCheckboxClick(event, model.id)}/>\n                    </TableCell>\n                    <TableCell>{model.value}</TableCell>\n                    <TableCell>  \n                      <Preview file={model.file} size={50}/>\n                    </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <Grid container item direction=\"row\" className={classes.buttons} >\n          <Link to=\"/server\">\n            <IconButton color=\"secondary\" aria-label=\"Display\" onClick={handlerServer}>\n              <SendIcon fontSize=\"large\"/>\n            </IconButton>\n          </Link>\n\n            <IconButton color=\"primary\" aria-label=\"Display\" onClick={handlerDisplay}>\n              <LaunchIcon fontSize=\"large\"/>\n            </IconButton>\n\n          </Grid>\n        </Grid>\n        <Grid item xs={8} >\n          <Collapse in={alert}>\n            <Alert severity=\"warning\"\n              action={\n                <IconButton\n                  aria-label=\"alert\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  onClick={() => {\n                    setAlert(false);\n                  }}\n                >\n                  <CloseIcon fontSize=\"inherit\" />\n                </IconButton>\n              }\n            >\n              <AlertTitle>Warning</AlertTitle>\n                You can not upload 2 files with same name.\n            </Alert>\n          </Collapse>\n          <Collapse in={open}>\n            <Alert severity=\"warning\"\n              action={\n                <IconButton\n                  aria-label=\"alert\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  onClick={() => {\n                    setOpen(false);\n                  }}\n                >\n                  <CloseIcon fontSize=\"inherit\" />\n                </IconButton>\n              }\n            >\n                <AlertTitle>Warning</AlertTitle>\n                  You must select only one model to display.\n            </Alert>\n          </Collapse>\n          <Collapse in={send}>\n            <Alert severity=\"success\"\n              action={\n                <IconButton\n                  aria-label=\"alert\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  onClick={() => {\n                    setSend(false);\n                  }}\n                >\n                  <CloseIcon fontSize=\"inherit\" />\n                </IconButton>\n              }\n            >\n                <AlertTitle>Send</AlertTitle>\n                  Your models had sended to server successful!\n            </Alert>\n          </Collapse>\n          <div className={classes.model} >\n            {aux.map(auxModel=>\n                <STLDisplay file={auxModel} size={400} key={aux.size}/>\n            )\n            }\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\n\n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}