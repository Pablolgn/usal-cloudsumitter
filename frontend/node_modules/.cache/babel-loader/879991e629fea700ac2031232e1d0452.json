{"ast":null,"code":"var _jsxFileName = \"/home/pablo/work/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/STLDisplay.js\";\nimport React, { useState, useEffect } from 'react';\nimport { STLViewer } from 'react-stl-obj-viewer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Collapse, Grid } from '@material-ui/core';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport { GithubPicker } from 'react-color';\nconst useStyles = makeStyles(theme => ({\n  display: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3)\n  }\n}));\n\nfunction STLDisplay(props) {\n  const classes = useStyles();\n  const [aux, setaux] = useState([]);\n  const [button, setbutton] = useState(false);\n  const [backColor] = useState(\"#b0b0b0\");\n  const [modelColor, setmodelColor] = useState();\n  useEffect(() => {\n    setaux([props.file]);\n    setbutton(true);\n    props.setUnavailable(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.file]);\n  useEffect(() => {\n    setmodelColor(\"#ffffff\");\n  }, [modelColor]);\n\n  function deleteid() {\n    props.setAvailable();\n    setaux([]);\n    setbutton(false);\n  }\n\n  function changeHandler(color) {\n    setmodelColor(color.hex);\n    console.log(color.hex);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    in: button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"Display\",\n    onClick: deleteid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(BackspaceIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 6\n    }\n  }))), button ? /*#__PURE__*/React.createElement(GithubPicker, {\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }) : null), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.display,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }\n  }, aux.map(auxModel => /*#__PURE__*/React.createElement(STLViewer, {\n    key: auxModel.id + 256,\n    width: 800,\n    height: 320,\n    sceneClassName: \"test-scene\",\n    file: auxModel,\n    className: \"stl\",\n    modelColor: modelColor,\n    backgroundColor: backColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 6\n    }\n  }))));\n}\n\n;\nexport default STLDisplay;","map":{"version":3,"sources":["/home/pablo/work/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/STLDisplay.js"],"names":["React","useState","useEffect","STLViewer","makeStyles","IconButton","Collapse","Grid","BackspaceIcon","GithubPicker","useStyles","theme","display","flexGrow","marginTop","spacing","STLDisplay","props","classes","aux","setaux","button","setbutton","backColor","modelColor","setmodelColor","file","setUnavailable","deleteid","setAvailable","changeHandler","color","hex","console","log","map","auxModel","id"],"mappings":"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","sourcesContent":["\timport React, { useState,useEffect } from 'react';\n\timport {STLViewer} from 'react-stl-obj-viewer';\n\timport { makeStyles } from '@material-ui/core/styles';\n\timport {IconButton, Collapse, Grid} from '@material-ui/core';\n\timport BackspaceIcon from '@material-ui/icons/Backspace';\n\timport { GithubPicker } from 'react-color';\n\t\n\n\n\tconst useStyles = makeStyles(theme => ({\n\t\tdisplay: {\n\t\t  flexGrow: 1,\n\t\t  marginTop: theme.spacing(3),\n\t\t},\n\t  }));\n\n\tfunction STLDisplay(props){\n\n\t\tconst classes = useStyles();\n\t\n\t\tconst [aux, setaux] = useState([]);\n\t\tconst [button, setbutton] = useState(false);\n\t\tconst [backColor,] = useState(\"#b0b0b0\");\n\t\tconst [modelColor, setmodelColor ] = useState();\n\n\t\tuseEffect(() => {   \n\t\t\tsetaux([props.file])\n\t\t\tsetbutton(true)\n\t\t\tprops.setUnavailable()\n\t\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t},[props.file]);\n\n\t\tuseEffect(() => {   \n\t\t\tsetmodelColor(\"#ffffff\")\n\t\t},[modelColor]);\n\n\t\tfunction deleteid(){\n\t\t\tprops.setAvailable()\n\t\t\tsetaux([])\n\t\t\tsetbutton(false)\n\t\t}\n\n\t\tfunction changeHandler(color){\n\t\t\tsetmodelColor(color.hex)\n\t\t\tconsole.log(color.hex)\n\t\t}\n\n\n\t\n\treturn(\n\t\t<div>\n      \t\t<Grid container spacing={2} direction=\"row\">\n\n\t\t\t\t<Collapse in={button}>\n\t\t\t\t\t<IconButton color=\"primary\" aria-label=\"Display\" onClick={deleteid}>\n\t\t\t\t\t<BackspaceIcon fontSize=\"large\"/>\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Collapse>\n\t\t\t\t{button ? \n\t\t\t\t<GithubPicker \n\t\t\t\t\tonChange={ changeHandler }\n\t\t\t\t/> : null\n\t\t\t\t}\n\t\t\t\t\n\t\t\t</Grid>\n\n\t\t\t<Grid container className={classes.display}>\n\t\t\t\t{aux.map(auxModel=>\n\t\t\t\t\t<STLViewer\n\t\t\t\t\tkey={auxModel.id+256}\n\t\t\t\t\twidth={800}\n\t\t\t\t\theight={320}\n\t\t\t\t\tsceneClassName=\"test-scene\"\n\t\t\t\t\tfile={auxModel}\n\t\t\t\t\tclassName=\"stl\"\n\t\t\t\t\tmodelColor={modelColor}\n\t\t\t\t\tbackgroundColor={backColor}\n\t\t\t\t\t/> \n\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Grid>\n\n\n\t\t</div>\n\t)};\n\texport default STLDisplay;\n"]},"metadata":{},"sourceType":"module"}