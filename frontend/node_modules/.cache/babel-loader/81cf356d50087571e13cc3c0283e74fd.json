{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pablo/work/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Upload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid, Checkbox } from '@material-ui/core';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport IconButton from '@material-ui/core/IconButton';\nimport SendIcon from '@material-ui/icons/Send';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Preview from './Preview';\nimport STLDisplay from './STLDisplay';\nimport { Link } from 'react-router-dom';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport Tooltip from '@material-ui/core/Tooltip';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8)\n  },\n  root: {\n    marginTop: 70,\n    height: \"100%\",\n    width: \"100%\",\n    backgroundColor: 100\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3)\n  },\n  fullWidth: {\n    width: '100%'\n  },\n  input: {\n    display: 'none'\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 270\n  },\n  paper: {\n    margin: theme.spacing(2)\n  },\n  model: {\n    marginLeft: theme.spacing(5)\n  },\n  buttons: {\n    marginLeft: theme.spacing(34)\n  }\n}));\n\nfunction Upload() {\n  _s();\n\n  const [models, setModels] = useState([]);\n  const [aux, setaux] = useState([]);\n  const [count, setCount] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [alert, setAlert] = useState(false);\n  const [send, setSend] = useState(false);\n  const classes = useStyles();\n\n  function handleCheckboxClick(event, id) {\n    event.stopPropagation();\n\n    if (models[id].sel === false) {\n      models[id].sel = true;\n      setCount(count + 1);\n    } else if (models[id].sel === true) {\n      models[id].sel = false;\n      setCount(count - 1);\n    }\n  }\n\n  ;\n\n  function contain(element) {\n    for (let m of models) {\n      if (m.value === element) {\n        setAlert(true);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function handlerUpload(e) {\n    let counter = models.length;\n    let items = [];\n\n    for (let m of models) {\n      items.push(m);\n    }\n\n    var UpModels = Array.from(e.target.files);\n\n    for (let um of UpModels) {\n      if (contain(um.name) !== true) {\n        items.push({\n          value: um.name,\n          sel: false,\n          file: um,\n          id: counter\n        });\n        counter++;\n      }\n    }\n\n    setModels(items);\n  }\n\n  function handlerServer() {\n    const data = new FormData();\n\n    if (count > 0) {\n      for (let m of models) {\n        if (m.sel === true) {\n          data.append('files', m.file);\n        }\n      }\n\n      axios.post(\"http://mini3dfactory.duckdns.org:3002/api/models/upload\", data).then(response => {// server answer\n      }).catch(e => {\n        console.log(e);\n      });\n      setSend(true);\n    } //maybe message\n\n  }\n\n  function handlerDisplay() {\n    if (count === 1) {\n      for (let m of models) {\n        if (m.sel === true) {\n          setaux([m.file]);\n        }\n      }\n    } else {\n      setOpen(true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 4,\n        direction: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: \"label\",\n            startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 68\n            }, this),\n            className: classes.upload,\n            children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              multiple: true,\n              accept: \".obj,.stl,.3mf\",\n              className: classes.input,\n              id: \"Upload-button-file\",\n              onChange: handlerUpload.bind()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          className: classes.table,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-label\": \"simple table\",\n            stickyHeader: true,\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Uploaded files\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: models.map(model => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    className: classes.check,\n                    onClick: event => handleCheckboxClick(event, model.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: model.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Preview, {\n                    size: 50,\n                    file: model.file\n                  }, 3, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 21\n                }, this)]\n              }, model.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          direction: \"row\",\n          className: classes.buttons,\n          children: [/*#__PURE__*/_jsxDEV(Collapse, {\n            in: count > 0,\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Send to server\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"primary\",\n                \"aria-label\": \"Display\",\n                onClick: handlerServer,\n                children: /*#__PURE__*/_jsxDEV(SendIcon, {\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: count > 0,\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Display\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"primary\",\n                \"aria-label\": \"Display\",\n                onClick: handlerDisplay,\n                children: /*#__PURE__*/_jsxDEV(LaunchIcon, {\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/server\",\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Server\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"default\",\n                \"aria-label\": \"Display\",\n                children: /*#__PURE__*/_jsxDEV(StorageIcon, {\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: [/*#__PURE__*/_jsxDEV(Collapse, {\n          in: alert,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"warning\",\n            action: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"alert\",\n              color: \"inherit\",\n              size: \"small\",\n              onClick: () => {\n                setAlert(false);\n              },\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                fontSize: \"inherit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n              children: \"Warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), \"You can not upload 2 files with same name.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: open,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"warning\",\n            action: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"alert\",\n              color: \"inherit\",\n              size: \"small\",\n              onClick: () => {\n                setOpen(false);\n              },\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                fontSize: \"inherit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n              children: \"Warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), \"You must select only one model to display.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: send,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"success\",\n            action: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"alert\",\n              color: \"inherit\",\n              size: \"small\",\n              onClick: () => {\n                setSend(false);\n              },\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                fontSize: \"inherit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), \"Your models had sended to server successful!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.model,\n          children: aux.map(auxModel => /*#__PURE__*/_jsxDEV(STLDisplay, {\n            file: auxModel,\n            size: 400\n          }, auxModel.id + 128, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Upload, \"8JOdEkZwrSr8m5o23/Gg3hClEHw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/home/pablo/work/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Upload.js"],"names":["React","useState","makeStyles","Button","Grid","Checkbox","axios","Paper","CloudUploadIcon","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","LaunchIcon","IconButton","SendIcon","Alert","AlertTitle","Collapse","CloseIcon","Preview","STLDisplay","Link","StorageIcon","Tooltip","useStyles","theme","title","flexGrow","marginLeft","spacing","root","marginTop","height","width","backgroundColor","upload","marginBottom","fullWidth","input","display","table","margin","maxHeight","paper","model","buttons","Upload","models","setModels","aux","setaux","count","setCount","open","setOpen","alert","setAlert","send","setSend","classes","handleCheckboxClick","event","id","stopPropagation","sel","contain","element","m","value","handlerUpload","e","counter","length","items","push","UpModels","Array","from","target","files","um","name","file","handlerServer","data","FormData","append","post","then","response","catch","console","log","handlerDisplay","bind","map","check","auxModel"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {  Button, Grid, Checkbox} from '@material-ui/core';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport IconButton from '@material-ui/core/IconButton';\nimport SendIcon from '@material-ui/icons/Send';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Preview from './Preview';\nimport STLDisplay from './STLDisplay';\nimport { Link } from 'react-router-dom';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\n\n\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8),\n  },\n  root:{\n    marginTop:70,\n    height: \"100%\",\n    width: \"100%\",\n    backgroundColor: 100,\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  input: {\n    display: 'none',\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 270,\n  },\n  paper: {\n    margin: theme.spacing(2),\n  },\n  model: {\n    marginLeft:theme.spacing(5),\n  },\n  buttons: {\n    marginLeft:theme.spacing(34),\n  },\n\n\n}));\n\n\n\n\nfunction Upload() {\n\n  const [models, setModels] = useState([]);\n  const [aux, setaux] = useState([]);\n  const [count, setCount] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [alert, setAlert] = useState(false);\n  const [send, setSend] = useState(false);\n\n  const classes = useStyles();\n\n\n  function handleCheckboxClick(event, id){\n    event.stopPropagation();\n\n      if (models[id].sel === false) {\n          models[id].sel = true;\n          setCount(count + 1)\n\n      } else if (models[id].sel === true) {\n          models[id].sel = false; \n          setCount(count - 1)\n      }\n\n  };\n  function contain(element){\n    for (let m of models) {\n      if(m.value === element){\n        setAlert(true);\n        return true\n      }\n    }\n    return false\n}\n\n  function handlerUpload(e) {\n\n    let counter = models.length;\n    let items = [];\n\n    for(let m of models){\n      items.push(m);\n    }\n    var UpModels = Array.from(e.target.files)\n    \n    for (let um of UpModels) {\n      if(contain(um.name)!==true){\n        items.push({\n          value: um.name,\n          sel: false,\n          file: um,\n          id: counter\n        })\n        counter++;\n      }\n    }\n\n    setModels(items)\n  }\n\n\n\n  function handlerServer(){\n    const data = new FormData()\n    if(count > 0){\n\n    for (let m of models) {\n      if(m.sel === true){\n        data.append('files', m.file)\n      }\n    }\n    axios.post(\"http://mini3dfactory.duckdns.org:3002/api/models/upload\",data).then(response => {\n      // server answer\n    }).catch(e => {\n      console.log(e);\n    });\n    setSend(true)\n  }\n  //maybe message\n  }\n\n  function handlerDisplay(){\n\n    if(count === 1){\n      for (let m of models) {\n        if(m.sel === true){\n            setaux([m.file]);\n        }\n      }\n    }else{\n      setOpen(true);\n    }\n  }\n  \n\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2} direction=\"row\">\n        <Grid container item xs={4} direction=\"column\">\n          <div>\n          <Button variant=\"contained\" component=\"label\" startIcon={<CloudUploadIcon />}className={classes.upload}>\n              Upload File\n              <input\n                  type=\"file\"\n                  multiple\n                  accept=\".obj,.stl,.3mf\"\n                  className={classes.input}\n                  id=\"Upload-button-file\"\n                  onChange={handlerUpload.bind()}\n              />\n          </Button>\n          </div>\n          <TableContainer component={Paper} className={classes.table}>\n            <Table  aria-label=\"simple table\" stickyHeader>\n              <TableHead>\n                <TableRow>\n                <TableCell></TableCell>\n                  <TableCell>Uploaded files</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {models.map(model =>\n                  <TableRow key={model.id}>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox className={classes.check} onClick={event => handleCheckboxClick(event, model.id)}/>\n                    </TableCell>\n                    <TableCell>{model.value}</TableCell>\n                    <TableCell>  \n                      <Preview size={50} file={model.file} key={3}/>\n                    </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <Grid container item direction=\"row\" className={classes.buttons} >\n\n          <Collapse in={count > 0}>\n            <Tooltip title=\"Send to server\">  \n              <IconButton color=\"primary\" aria-label=\"Display\" onClick={handlerServer}>\n                <SendIcon fontSize=\"large\"/>\n              </IconButton>\n            </Tooltip>\n          </Collapse>\n\n          <Collapse in={count > 0}>\n            <Tooltip title=\"Display\">   \n              <IconButton color=\"primary\" aria-label=\"Display\" onClick={handlerDisplay}>\n                <LaunchIcon fontSize=\"large\"/>\n              </IconButton>\n            </Tooltip>\n          </Collapse>\n\n          <Link to=\"/server\">\n            <Tooltip title=\"Server\">  \n              <IconButton color=\"default\" aria-label=\"Display\">\n                <StorageIcon fontSize=\"large\"/>\n              </IconButton>\n            </Tooltip>\n          </Link>\n\n          </Grid>\n        </Grid>\n        <Grid item xs={8} >\n          <Collapse in={alert}>\n            <Alert severity=\"warning\"\n              action={\n                <IconButton\n                  aria-label=\"alert\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  onClick={() => {\n                    setAlert(false);\n                  }}\n                >\n                  <CloseIcon fontSize=\"inherit\" />\n                </IconButton>\n              }\n            >\n              <AlertTitle>Warning</AlertTitle>\n                You can not upload 2 files with same name.\n            </Alert>\n          </Collapse>\n          <Collapse in={open}>\n            <Alert severity=\"warning\"\n              action={\n                <IconButton\n                  aria-label=\"alert\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  onClick={() => {\n                    setOpen(false);\n                  }}\n                >\n                  <CloseIcon fontSize=\"inherit\" />\n                </IconButton>\n              }\n            >\n                <AlertTitle>Warning</AlertTitle>\n                  You must select only one model to display.\n            </Alert>\n          </Collapse>\n          <Collapse in={send}>\n            <Alert severity=\"success\"\n              action={\n                <IconButton\n                  aria-label=\"alert\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  onClick={() => {\n                    setSend(false);\n                  }}\n                >\n                  <CloseIcon fontSize=\"inherit\" />\n                </IconButton>\n              }\n            >\n                <AlertTitle>Send</AlertTitle>\n                  Your models had sended to server successful!\n            </Alert>\n          </Collapse>\n          <div className={classes.model} >  \n            {aux.map(auxModel=>\n                <STLDisplay file={auxModel} size={400} key={auxModel.id+128}/>\n            )\n            }\n          \n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\n\n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}