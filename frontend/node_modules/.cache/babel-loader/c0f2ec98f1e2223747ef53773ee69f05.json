{"ast":null,"code":"var _jsxFileName = \"/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Upload.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid, Checkbox } from '@material-ui/core';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport IconButton from '@material-ui/core/IconButton';\nimport Preview from './Preview';\nimport SendIcon from '@material-ui/icons/Send';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8)\n  },\n  root: {\n    marginTop: 80,\n    flexGrow: 1\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3)\n  },\n  fullWidth: {\n    width: '100%'\n  },\n  input: {\n    display: 'none'\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 270\n  },\n  paper: {\n    margin: theme.spacing(2)\n  },\n  model: {\n    marginLeft: theme.spacing(5)\n  },\n  buttons: {\n    marginLeft: theme.spacing(30)\n  }\n}));\n\nfunction Upload() {\n  const [models, setModels] = useState([]);\n  const [count, setCount] = useState(0);\n  const [open, setOpen] = React.useState(false);\n  const [alert, setAlert] = React.useState(false);\n  const [send, setSend] = React.useState(false);\n  const classes = useStyles();\n\n  const addItem = file => {\n    setModels([...models, {\n      id: models.length,\n      value: file.name,\n      sel: false,\n      file: file\n    }]);\n  };\n\n  function handleCheckboxClick(event, id) {\n    event.stopPropagation();\n\n    if (models[id].sel === false) {\n      models[id].sel = true;\n      setCount(count + 1);\n    } else if (models[id].sel === true) {\n      models[id].sel = false;\n      setCount(count - 1);\n    }\n  }\n\n  ;\n\n  function contain(element) {\n    for (let m of models) {\n      console.log(m.value);\n      console.log(element);\n\n      if (m.value === element) {\n        setAlert(true);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function handleUpload(e) {\n    var UpModels = Array.from(e.target.files);\n\n    for (let um of UpModels) {\n      if (contain(um.name) !== true) {\n        addItem(um);\n      }\n    }\n  }\n\n  function handleServer() {\n    const data = new FormData();\n\n    if (count > 0) {\n      for (let m of models) {\n        if (m.sel === true) {\n          data.append('files', m.file);\n        }\n      }\n\n      axios.post(\"http://localhost:3002/upload\", data).then(response => {// server answer\n      }).catch(e => {\n        console.log(e);\n      });\n      setSend(true);\n    }\n  }\n\n  function handlerDisplay() {\n    if (count === 1) {} else {\n      console.log(\"mal\");\n      setOpen(true);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 3,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    component: \"label\",\n    startIcon: React.createElement(CloudUploadIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }),\n    className: classes.upload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Upload File\", React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".obj,.stl\",\n    className: classes.input,\n    id: \"Upload-button-file\",\n    onChange: handleUpload.bind(this),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }))), React.createElement(TableContainer, {\n    component: Paper,\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    stickyHeader: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Uploaded files\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, models.map(model => React.createElement(TableRow, {\n    key: model.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    className: classes.check,\n    onClick: event => handleCheckboxClick(event, model.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, model.value)))))), React.createElement(Grid, {\n    container: true,\n    item: true,\n    direction: \"row\",\n    className: classes.buttons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"secondary\",\n    \"aria-label\": \"Display\",\n    onClick: handleServer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(SendIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"Display\",\n    onClick: handlerDisplay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(LaunchIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(Collapse, {\n    in: alert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    severity: \"warning\",\n    action: React.createElement(IconButton, {\n      \"aria-label\": \"alert\",\n      color: \"inherit\",\n      size: \"small\",\n      onClick: () => {\n        setAlert(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      fontSize: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(AlertTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \"Warning\"), \"You can not upload 2 files with same name.\")), React.createElement(Collapse, {\n    in: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    severity: \"warning\",\n    action: React.createElement(IconButton, {\n      \"aria-label\": \"alert\",\n      color: \"inherit\",\n      size: \"small\",\n      onClick: () => {\n        setOpen(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      fontSize: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(AlertTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"Warning\"), \"You must select only one model to display.\")), React.createElement(Collapse, {\n    in: send,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    severity: \"success\",\n    action: React.createElement(IconButton, {\n      \"aria-label\": \"alert\",\n      color: \"inherit\",\n      size: \"small\",\n      onClick: () => {\n        setSend(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      fontSize: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(AlertTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, \"Send\"), \"Your models had sended to server successful!\")), React.createElement(\"div\", {\n    className: classes.model,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, React.createElement(Preview, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  })))));\n}\n\nexport default Upload;","map":{"version":3,"sources":["/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Upload.js"],"names":["React","useState","makeStyles","Button","Grid","Checkbox","axios","Paper","CloudUploadIcon","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","LaunchIcon","IconButton","Preview","SendIcon","Alert","AlertTitle","Collapse","CloseIcon","useStyles","theme","title","flexGrow","marginLeft","spacing","root","marginTop","upload","marginBottom","fullWidth","width","input","display","table","margin","maxHeight","paper","model","buttons","Upload","models","setModels","count","setCount","open","setOpen","alert","setAlert","send","setSend","classes","addItem","file","id","length","value","name","sel","handleCheckboxClick","event","stopPropagation","contain","element","m","console","log","handleUpload","e","UpModels","Array","from","target","files","um","handleServer","data","FormData","append","post","then","response","catch","handlerDisplay","bind","map","check"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {  Button, Grid, Checkbox } from '@material-ui/core';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport IconButton from '@material-ui/core/IconButton';\nimport Preview from './Preview'\nimport SendIcon from '@material-ui/icons/Send';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8),\n  },\n  root:{\n    marginTop:80,\n    flexGrow: 1,\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  input: {\n    display: 'none',\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 270,\n  },\n  paper: {\n    margin: theme.spacing(2),\n  },\n  model: {\n    marginLeft:theme.spacing(5),\n  },\n  buttons: {\n    marginLeft:theme.spacing(30),\n  },\n\n\n}));\n\n\n\n\nfunction Upload() {\n\n  const [models, setModels] = useState([]);\n  const [count, setCount] = useState(0);\n  const [open, setOpen] = React.useState(false);\n  const [alert, setAlert] = React.useState(false);\n  const [send, setSend] = React.useState(false);\n\n  const classes = useStyles();\n\n  const addItem = (file) => {\n    setModels([\n      ...models,\n      {\n        id: models.length,\n        value: file.name,\n        sel: false,\n        file: file,\n      }\n    ]);\n  };\n\n  function handleCheckboxClick(event, id){\n    event.stopPropagation();\n\n\n      if (models[id].sel === false) {\n          models[id].sel = true;\n          setCount(count + 1)\n\n      } else if (models[id].sel === true) {\n          models[id].sel = false; \n          setCount(count - 1)\n      }\n\n  };\n  function contain(element){\n    for (let m of models) {\n      console.log(m.value)\n      console.log(element)\n      if(m.value === element){\n        setAlert(true);\n        return true\n      }\n    }\n    return false\n}\n\n  function handleUpload(e) {\n    var UpModels = Array.from(e.target.files)\n\n    for (let um of UpModels) {\n      if(contain(um.name)!==true){\n        addItem(um)\n      }\n    }\n  }\n\n  function handleServer(){\n    const data = new FormData()\n    if(count > 0){\n\n    for (let m of models) {\n      if(m.sel === true){\n        data.append('files', m.file)\n      }\n    }\n    axios.post(\"http://localhost:3002/upload\",data).then(response => {\n      // server answer\n    }).catch(e => {\n      console.log(e);\n    });\n    setSend(true)\n  }\n  }\n\n  function handlerDisplay(){\n    if(count === 1){\n  \n    }else{\n      console.log(\"mal\")\n      setOpen(true);\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2} direction=\"row\">\n        <Grid container item xs={3} direction=\"column\">\n          <div>\n          <Button variant=\"contained\" component=\"label\" startIcon={<CloudUploadIcon />}className={classes.upload}>\n              Upload File\n              <input\n                  type=\"file\"\n                  accept=\".obj,.stl\"\n                  className={classes.input}\n                  id=\"Upload-button-file\"\n                  onChange={handleUpload.bind(this)}\n              />\n          </Button>\n          </div>\n          <TableContainer component={Paper} className={classes.table}>\n            <Table  aria-label=\"simple table\" stickyHeader>\n              <TableHead>\n                <TableRow>\n                <TableCell></TableCell>\n                  <TableCell>Uploaded files</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {models.map(model =>\n                  <TableRow key={model.id}>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox className={classes.check} onClick={event => handleCheckboxClick(event, model.id)}/>\n                    </TableCell>\n                    <TableCell>{model.value}</TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <Grid container item direction=\"row\" className={classes.buttons} >\n          <IconButton color=\"secondary\" aria-label=\"Display\" onClick={handleServer}>\n             <SendIcon fontSize=\"large\"/>\n          </IconButton>\n          <IconButton color=\"primary\" aria-label=\"Display\" onClick={handlerDisplay}>\n             <LaunchIcon fontSize=\"large\"/>\n          </IconButton>\n          </Grid>\n        </Grid>\n        <Grid item xs={9} >\n          <Collapse in={alert}>\n            <Alert severity=\"warning\"\n              action={\n                <IconButton\n                  aria-label=\"alert\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  onClick={() => {\n                    setAlert(false);\n                  }}\n                >\n                  <CloseIcon fontSize=\"inherit\" />\n                </IconButton>\n              }\n            >\n              <AlertTitle>Warning</AlertTitle>\n                You can not upload 2 files with same name.\n            </Alert>\n          </Collapse>\n      <Collapse in={open}>\n        <Alert severity=\"warning\"\n          action={\n            <IconButton\n              aria-label=\"alert\"\n              color=\"inherit\"\n              size=\"small\"\n              onClick={() => {\n                setOpen(false);\n              }}\n            >\n              <CloseIcon fontSize=\"inherit\" />\n            </IconButton>\n          }\n        >\n            <AlertTitle>Warning</AlertTitle>\n              You must select only one model to display.\n        </Alert>\n      </Collapse>\n      <Collapse in={send}>\n        <Alert severity=\"success\"\n          action={\n            <IconButton\n              aria-label=\"alert\"\n              color=\"inherit\"\n              size=\"small\"\n              onClick={() => {\n                setSend(false);\n              }}\n            >\n              <CloseIcon fontSize=\"inherit\" />\n            </IconButton>\n          }\n        >\n            <AlertTitle>Send</AlertTitle>\n              Your models had sended to server successful!\n        </Alert>\n      </Collapse>\n          <div className={classes.model}>\n            <Preview/>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\n\n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}