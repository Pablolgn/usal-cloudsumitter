{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _common = require(\"../../common\");\n\nvar _memoizeOne = _interopRequireDefault(require(\"memoize-one\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst outerStyle = {\n  position: 'relative',\n  maxHeight: '100vh'\n};\nconst helperStyle = {\n  display: 'block',\n  width: '100%',\n  paddingTop: '56.25%',\n  pointerEvents: 'none'\n};\nconst getHelperStyle = (0, _memoizeOne.default)(aspectRatio => aspectRatio ? _objectSpread({}, helperStyle, {\n  paddingTop: (aspectRatio.vertical * 100 / aspectRatio.horizontal).toFixed(2) + '%'\n}) : helperStyle);\n\nconst AspectRatio = ({\n  aspectRatio,\n  render,\n  rootClassName = '',\n  aspectFixClassName,\n  classNamePrefix = _common.defaultClassNamePrefix\n}) => {\n  if (aspectFixClassName) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(rootClassName, \" \").concat((0, _common.prefixClassNames)(classNamePrefix, aspectFixClassName))\n    }, render());\n  } else {\n    const beforeStyle = getHelperStyle(aspectRatio);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: rootClassName,\n      style: outerStyle\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: beforeStyle\n    }), render());\n  }\n};\n\nvar _default = AspectRatio;\nexports.default = _default;","map":{"version":3,"sources":["../../../src/replay/components/player/containment-helpers/AspectRatio.js"],"names":["outerStyle","position","maxHeight","helperStyle","display","width","paddingTop","pointerEvents","getHelperStyle","aspectRatio","AspectRatio","rootClassName","classNamePrefix","defaultClassNamePrefix","render","beforeStyle"],"mappings":";;;;;;;AACA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,MAAMA,UAAU,GAAG;AAAEC,EAAAA,QAAQ,EAAV,UAAA;AAAwBC,EAAAA,SAAS,EAAE;AAAnC,CAAnB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,OAAO,EADW,OAAA;AAElBC,EAAAA,KAAK,EAFa,MAAA;AAGlBC,EAAAA,UAAU,EAHQ,QAAA;AAIlBC,EAAAA,aAAa,EAAE;AAJG,CAApB;AAOA,MAAMC,cAAc,GAAG,CAAA,GAAA,WAAA,CAAA,OAAA,EAAQC,WAAW,IACxCA,WAAW,GAAA,aAAA,CAAA,EAAA,EAAA,WAAA,EAAA;AACWH,EAAAA,UAAU,EAAE,CAAEG,WAAW,CAAXA,QAAAA,GAAD,GAACA,GAA8BA,WAAW,CAA3C,UAAA,EAAA,OAAA,CAAA,CAAA,IAAqE;AAD5F,CAAA,CAAA,GADb,WAAuB,CAAvB;;AAMA,MAAMC,WAAW,GAAG,CAAC;AAAA,EAAA,WAAA;AAAA,EAAA,MAAA;AAGnBC,EAAAA,aAAa,GAHM,EAAA;AAAA,EAAA,kBAAA;AAKnBC,EAAAA,eAAe,GAAGC,OAAAA,CAAAA;AALC,CAAD,KAMP;AACX,MAAA,kBAAA,EAAwB;AACtB,WAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAA,GAAA,MAAA,CAAA,aAAA,EAAA,GAAA,EAAA,MAAA,CAAsB,CAAA,GAAA,OAAA,CAAA,gBAAA,EAAA,eAAA,EAAtB,kBAAsB,CAAtB;AAAd,KAAA,EAA8FC,MADhG,EACE,CADF;AADF,GAAA,MAIO;AACL,UAAMC,WAAW,GAAGP,cAAc,CAAlC,WAAkC,CAAlC;AACA,WAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAd,aAAA;AAA+B,MAAA,KAAK,EAAER;AAAtC,KAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,KAAK,EAAEe;AAAZ,KAAA,CADF,EAEGD,MAHL,EACE,CADF;AAMD;AAnBH,CAAA;;eAsBeJ,W","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { defaultClassNamePrefix, prefixClassNames } from '../../common';\nimport memoize from 'memoize-one';\n\ntype Props = {\n  aspectRatio?: {\n    horizontal: number,\n    vertical: number\n  },\n  classNamePrefix?: string,\n  aspectFixClassName?: ?string,\n  render: () => React.Node,\n  rootClassName?: string\n};\n\nconst outerStyle = { position: 'relative', maxHeight: '100vh' };\n\nconst helperStyle = {\n  display: 'block',\n  width: '100%',\n  paddingTop: '56.25%',\n  pointerEvents: 'none'\n};\n\nconst getHelperStyle = memoize(aspectRatio =>\n  aspectRatio\n    ? { ...helperStyle, paddingTop: ((aspectRatio.vertical * 100) / aspectRatio.horizontal).toFixed(2) + '%' }\n    : helperStyle\n);\n\nconst AspectRatio = ({\n  aspectRatio,\n  render,\n  rootClassName = '',\n  aspectFixClassName,\n  classNamePrefix = defaultClassNamePrefix\n}: Props) => {\n  if (aspectFixClassName) {\n    return (\n      <div className={`${rootClassName} ${prefixClassNames(classNamePrefix, aspectFixClassName)}`}>{render()}</div>\n    );\n  } else {\n    const beforeStyle = getHelperStyle(aspectRatio);\n    return (\n      <div className={rootClassName} style={outerStyle}>\n        <div style={beforeStyle} />\n        {render()}\n      </div>\n    );\n  }\n};\n\nexport default AspectRatio;\n"]},"metadata":{},"sourceType":"script"}