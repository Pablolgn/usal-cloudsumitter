{"ast":null,"code":"var _jsxFileName = \"/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Upload.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Button, Grid } from '@material-ui/core';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport PrintIcon from '@material-ui/icons/Print';\nimport IconButton from '@material-ui/core/IconButton';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport model from '../image.jpg';\nvar arr = [\"object.stl\", \"object2.stl\", \"object3.stl\"];\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8)\n  },\n  root: {\n    marginTop: 80,\n    flexGrow: 1\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3)\n  },\n  fullWidth: {\n    width: '100%'\n  },\n  input: {\n    display: 'none'\n  },\n  table: {\n    margin: theme.spacing(2)\n  },\n  paper: {\n    margin: theme.spacing(2)\n  },\n  model: {\n    marginLeft: theme.spacing(15)\n  },\n  buttons: {\n    marginLeft: theme.spacing(30)\n  }\n}));\n\nfunction Upload() {\n  this.state = {\n    array: [\"15\"]\n  };\n  const classes = useStyles();\n\n  function handleUpload(e) {\n    const data = new FormData();\n    console.log(arr);\n    arr.push(\"hola.stl\");\n    console.log(arr);\n    componentWillReceiveProps();\n    var models = Array.from(e.target.files);\n\n    for (let m of models) {\n      data.append('file', m);\n      axios.post(\"http://localhost:3002/upload\", data).then(response => {// server answer\n      }).catch(e => {\n        console.log(e);\n      });\n      console.log(m);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    xs: 3,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    component: \"label\",\n    startIcon: React.createElement(CloudUploadIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }),\n    className: classes.upload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Upload File\", React.createElement(\"input\", {\n    type: \"file\",\n    multiple: true,\n    accept: \".pdf,.obj,.stl\",\n    className: classes.input,\n    id: \"Upload-button-file\",\n    onChange: handleUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }))), React.createElement(TableContainer, {\n    component: Paper,\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Uploaded files\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, arr.map(object => React.createElement(TableRow, {\n    key: object,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, object)))))), React.createElement(\"div\", {\n    className: classes.buttons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"SendToPrint\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(PrintIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"Display\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(LaunchIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.model,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: model,\n    alt: \"model\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })))));\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  if (nextProps.initialCount && nextProps.initialCount > this.state.count) {\n    this.setState({\n      count: nextProps.initialCount\n    });\n  }\n}\n\nexport default Upload;","map":{"version":3,"sources":["/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Upload.js"],"names":["React","makeStyles","Typography","Button","Grid","axios","Paper","CloudUploadIcon","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","LaunchIcon","PrintIcon","IconButton","Checkbox","model","arr","useStyles","theme","title","flexGrow","marginLeft","spacing","root","marginTop","upload","marginBottom","fullWidth","width","input","display","table","margin","paper","buttons","Upload","state","array","classes","handleUpload","e","data","FormData","console","log","push","componentWillReceiveProps","models","Array","from","target","files","m","append","post","then","response","catch","map","object","nextProps","initialCount","count","setState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Button, Grid } from '@material-ui/core';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport PrintIcon from '@material-ui/icons/Print';\nimport IconButton from '@material-ui/core/IconButton';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport model from '../image.jpg';\n\n\n\nvar arr = [\"object.stl\",\"object2.stl\",\"object3.stl\"];\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8),\n  },\n  root:{\n    marginTop:80,\n    flexGrow: 1,\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  input: {\n    display: 'none',\n  },\n  table: {\n    margin: theme.spacing(2),\n  },\n  paper: {\n    margin: theme.spacing(2),\n  },\n  model: {\n    marginLeft:theme.spacing(15),\n  },\n  buttons: {\n    marginLeft:theme.spacing(30),\n  },\n}));\n\n\nfunction Upload() {\n\n\n\n  this.state = { \n    array: [\"15\"]\n}\n  const classes = useStyles();\n\n  function handleUpload(e) {\n    const data = new FormData()\n    console.log(arr)\n    arr.push(\"hola.stl\")\n    console.log(arr);\n\n    componentWillReceiveProps();\n    var models = Array.from(e.target.files)\n\n    for (let m of models) {\n\n      data.append('file', m)\n\n      axios.post(\"http://localhost:3002/upload\",data).then(response => {\n        // server answer\n      }).catch(e => {\n        console.log(e);\n      });\n\n      \n      console.log(m);\n    }\n  }\n\n\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2} direction=\"row\">\n        <Grid container xs={3} direction=\"column\">\n          <div>\n          <Button variant=\"contained\" component=\"label\" startIcon={<CloudUploadIcon />}className={classes.upload}>\n              Upload File\n              <input\n                  type=\"file\"\n                  multiple\n                  accept=\".pdf,.obj,.stl\"\n                  className={classes.input}\n                  id=\"Upload-button-file\"\n                  onChange={handleUpload}\n              />\n          </Button>\n          </div>\n          <TableContainer component={Paper} className={classes.table}>\n            <Table  aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Uploaded files</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {arr.map((object) =>\n                  <TableRow key={object} >\n                    <TableCell>{object}</TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <div className={classes.buttons}>\n          <IconButton aria-label=\"SendToPrint\">\n             <PrintIcon fontSize=\"large\"/>\n          </IconButton>\n          <IconButton color=\"primary\" aria-label=\"Display\">\n             <LaunchIcon fontSize=\"large\"/>\n          </IconButton>\n\n          </div>\n        </Grid>\n        <Grid item xs={9} >\n          <div className={classes.model}>\n            <img src={model} alt=\"model\"/>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n\n\n\n    \n  );\n}\n\nfunction componentWillReceiveProps(nextProps){\n  if (nextProps.initialCount && nextProps.initialCount > this.state.count){\n    this.setState({\n      count : nextProps.initialCount\n    });\n  }\n}\n\n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}