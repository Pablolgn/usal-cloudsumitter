{"ast":null,"code":"var _jsxFileName = \"/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Upload.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid } from '@material-ui/core';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport PrintIcon from '@material-ui/icons/Print';\nimport IconButton from '@material-ui/core/IconButton';\nimport model from '../image.jpg';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8)\n  },\n  root: {\n    marginTop: 80,\n    flexGrow: 1\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3)\n  },\n  fullWidth: {\n    width: '100%'\n  },\n  input: {\n    display: 'none'\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 270\n  },\n  paper: {\n    margin: theme.spacing(2)\n  },\n  model: {\n    marginLeft: theme.spacing(15)\n  },\n  buttons: {\n    marginLeft: theme.spacing(30)\n  }\n}));\n\nfunction Upload() {\n  const [models, setModels] = useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const classes = useStyles();\n\n  const addItem = name => {\n    setModels([...models, {\n      id: models.length,\n      value: name\n    }]);\n  };\n\n  function handleUpload(e) {\n    const data = new FormData();\n    var models = Array.from(e.target.files);\n\n    for (let m of models) {\n      data.append('file', m);\n      addItem(m.name);\n      axios.post(\"http://localhost:3002/upload\", data).then(response => {// server answer\n      }).catch(e => {\n        console.log(e);\n      });\n      console.log(m);\n    }\n  }\n\n  function handlePrint() {//code for send models to print and optimize\n  }\n\n  function handlerDisplay() {//code for display selected model on the screen\n  }\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = models.map(n);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 3,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    component: \"label\",\n    startIcon: React.createElement(CloudUploadIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }),\n    className: classes.upload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Upload File\", React.createElement(\"input\", {\n    type: \"file\",\n    multiple: true,\n    accept: \".pdf,.obj,.stl\",\n    className: classes.input,\n    id: \"Upload-button-file\",\n    onChange: handleUpload.bind(this),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }))), React.createElement(TableContainer, {\n    component: Paper,\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    stickyHeader: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    onSelectAllClick: handleSelectAllClick,\n    rowCount: rows.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: rowCount > 0 && numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      'aria-label': 'select all desserts'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  })), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Uploaded files\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, models.map(model => React.createElement(TableRow, {\n    key: model.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, model.value)))))), React.createElement(Grid, {\n    container: true,\n    item: true,\n    direction: \"row\",\n    className: classes.buttons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"SendToPrint\",\n    onClick: handlePrint,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(PrintIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"Display\",\n    onClick: handlerDisplay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(LaunchIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.model,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: model,\n    alt: \"model\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  })))));\n}\n\nexport default Upload;","map":{"version":3,"sources":["/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Upload.js"],"names":["React","useState","makeStyles","Button","Grid","axios","Paper","CloudUploadIcon","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","LaunchIcon","PrintIcon","IconButton","model","useStyles","theme","title","flexGrow","marginLeft","spacing","root","marginTop","upload","marginBottom","fullWidth","width","input","display","table","margin","maxHeight","paper","buttons","Upload","models","setModels","selected","setSelected","classes","addItem","name","id","length","value","handleUpload","e","data","FormData","Array","from","target","files","m","append","post","then","response","catch","console","log","handlePrint","handlerDisplay","handleSelectAllClick","event","checked","newSelecteds","map","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","bind","rows","numSelected","rowCount","onSelectAllClick"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {  Button, Grid } from '@material-ui/core';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport PrintIcon from '@material-ui/icons/Print';\nimport IconButton from '@material-ui/core/IconButton';\nimport model from '../image.jpg';\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8),\n  },\n  root:{\n    marginTop:80,\n    flexGrow: 1,\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  input: {\n    display: 'none',\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 270,\n  },\n  paper: {\n    margin: theme.spacing(2),\n  },\n  model: {\n    marginLeft:theme.spacing(15),\n  },\n  buttons: {\n    marginLeft:theme.spacing(30),\n  },\n}));\n\n\nfunction Upload() {\n\n  const [models, setModels] = useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const classes = useStyles();\n\n\n\n  const addItem = (name) => {\n    setModels([\n      ...models,\n      {\n        id: models.length,\n        value: name\n      }\n    ]);\n  };\n\n\n\n  function handleUpload(e) {\n    const data = new FormData()\n\n    var models = Array.from(e.target.files)\n\n    for (let m of models) {\n\n      data.append('file', m)\n      addItem(m.name)\n      axios.post(\"http://localhost:3002/upload\",data).then(response => {\n        // server answer\n      }).catch(e => {\n        console.log(e);\n      });\n\n      console.log(m);\n    }\n  }\n\n  function handlePrint(){\n    //code for send models to print and optimize\n  }\n\n  function handlerDisplay(){\n    //code for display selected model on the screen\n  }\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = models.map(n);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2} direction=\"row\">\n        <Grid container item xs={3} direction=\"column\">\n          <div>\n          <Button variant=\"contained\" component=\"label\" startIcon={<CloudUploadIcon />}className={classes.upload}>\n              Upload File\n              <input\n                  type=\"file\"\n                  multiple\n                  accept=\".pdf,.obj,.stl\"\n                  className={classes.input}\n                  id=\"Upload-button-file\"\n                  onChange={handleUpload.bind(this)}\n              />\n          </Button>\n          </div>\n          <TableContainer component={Paper} className={classes.table}>\n            <Table  aria-label=\"simple table\" stickyHeader>\n              <TableHead               classes={classes}\n                numSelected={selected.length}\n                onSelectAllClick={handleSelectAllClick}\n                rowCount={rows.length}>\n                <TableRow>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      indeterminate={numSelected > 0 && numSelected < rowCount}\n                      checked={rowCount > 0 && numSelected === rowCount}\n                      onChange={onSelectAllClick}\n                      inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                  </TableCell>\n                  <TableCell>Uploaded files</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {models.map(model =>\n                  <TableRow key={model.id} >\n                    <TableCell>{model.value}</TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <Grid container item direction=\"row\" className={classes.buttons} >\n          <IconButton aria-label=\"SendToPrint\" onClick={handlePrint}>\n             <PrintIcon fontSize=\"large\"/>\n          </IconButton>\n          <IconButton color=\"primary\" aria-label=\"Display\" onClick={handlerDisplay}>\n             <LaunchIcon fontSize=\"large\"/>\n          </IconButton>\n\n          </Grid>\n        </Grid>\n        <Grid item xs={9} >\n          <div className={classes.model}>\n            <img src={model} alt=\"model\"/>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n\n\n\n    \n  );\n}\n\n\n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}