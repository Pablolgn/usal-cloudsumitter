{"ast":null,"code":"var _jsxFileName = \"/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Box.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useSpring, a } from 'react-spring/three';\n\nfunction Box() {\n  const Box = () => {\n    const [hovered, setHovered] = useState(false);\n    const [active, setActive] = useState(false);\n    const props = useSpring({\n      scale: active ? [1.3, 1.3, 1.3] : [1, 1, 1],\n      color: hovered ? \"green\" : \"grey\"\n    });\n    return (// mesh is what hold the object  \n      React.createElement(a.mesh, {\n        onPointerOver: () => setHovered(true),\n        onPointerOut: () => setHovered(false),\n        onClick: () => setActive(!active),\n        scale: props.scale,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"boxBufferGeometry\", {\n        attach: \"geometry\",\n        args: [1.5, 1.5, 1.5],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(a.meshPhysicalMaterial, {\n        attach: \"material\",\n        color: props.color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }))\n    );\n  };\n}\n\nexport default Box;","map":{"version":3,"sources":["/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Box.js"],"names":["React","useState","useRef","useEffect","useSpring","a","Box","hovered","setHovered","active","setActive","props","scale","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,SAAT,EAAoBC,CAApB,QAA6B,oBAA7B;;AAEA,SAASC,GAAT,GAAc;AACV,QAAMA,GAAG,GAAG,MAAM;AAEd,UAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,UAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,UAAMU,KAAK,GAAGP,SAAS,CAAC;AACxBQ,MAAAA,KAAK,EAAEH,MAAM,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAH,GAAmB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CADR;AAExBI,MAAAA,KAAK,EAAEN,OAAO,GAAG,OAAH,GAAa;AAFH,KAAD,CAAvB;AAKA,WACA;AACA,0BAAC,CAAD,CAAG,IAAH;AACA,QAAA,aAAa,EAAE,MAAMC,UAAU,CAAC,IAAD,CAD/B;AAEA,QAAA,YAAY,EAAE,MAAMA,UAAU,CAAC,KAAD,CAF9B;AAGA,QAAA,OAAO,EAAE,MAAME,SAAS,CAAC,CAACD,MAAF,CAHxB;AAIA,QAAA,KAAK,EAAEE,KAAK,CAACC,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI;AAAmB,QAAA,MAAM,EAAC,UAA1B;AAAqC,QAAA,IAAI,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EASI,oBAAC,CAAD,CAAG,oBAAH;AAAwB,QAAA,MAAM,EAAC,UAA/B;AAA0C,QAAA,KAAK,EAAED,KAAK,CAACE,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ;AAFA;AAce,GAvBnB;AAwBI;;AAED,eAAeP,GAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport { useSpring, a } from 'react-spring/three'\n\nfunction Box(){\n    const Box = () => {\n    \n        const [hovered, setHovered] = useState(false) \n        const [active, setActive] = useState(false) \n        const props = useSpring({ \n        scale: active ? [1.3,1.3,1.3] : [1,1,1], \n        color: hovered ? \"green\" : \"grey\",\n         })\n         \n        return(\n        // mesh is what hold the object  \n        <a.mesh  \n        onPointerOver={() => setHovered(true)}  \n        onPointerOut={() => setHovered(false)}  \n        onClick={() => setActive(!active)}  \n        scale={props.scale}>    \n        \n            <boxBufferGeometry attach=\"geometry\" args={[1.5,1.5,1.5]} />\n            \n\n            <a.meshPhysicalMaterial attach=\"material\" color={props.color} />  \n        \n\n           </a.mesh> )}\n       }\n\n       export default Box;"]},"metadata":{},"sourceType":"module"}