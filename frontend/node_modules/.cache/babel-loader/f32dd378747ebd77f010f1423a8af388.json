{"ast":null,"code":"import * as THREE from 'three';\nvar container, camera, scene, renderer;\n\nvar STLLoader = require('three-stl-loader')(THREE);\n\nfunction Stl(props) {\n  // renderer\n  renderer = new THREE.WebGLRenderer({\n    antialias: true\n  });\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  container.appendChild(renderer.domElement); // scene\n\n  scene = new THREE.Scene(); // camera\n\n  camera = new THREE.PerspectiveCamera(35, window.innerWidth / window.innerHeight, 1, 10000);\n  camera.position.set(3, 0.5, 3);\n  scene.add(camera); // required, because we are adding a light as a child of the camera\n  // lights\n\n  scene.add(new THREE.AmbientLight(0x222222));\n  var light = new THREE.PointLight(0xffffff, 0.8);\n  camera.add(light);\n  var loader = new THREE.STLLoader();\n  loader.load('FIRSTFILE.stl', function (geometry) {\n    var material = new THREE.MeshPhongMaterial({\n      color: 0xff5533\n    });\n    var mesh = new THREE.Mesh(geometry, material);\n    scene.add(mesh);\n  });\n  loader.load('SECONDFILE.stl', function (geometry) {\n    var material = new THREE.MeshPhongMaterial({\n      color: 0xff5533\n    });\n    var mesh = new THREE.Mesh(geometry, material);\n    scene.add(mesh);\n  });\n}\n\n;\nexport default Stl;","map":{"version":3,"sources":["/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Stl.js"],"names":["THREE","container","camera","scene","renderer","STLLoader","require","Stl","props","WebGLRenderer","antialias","setSize","window","innerWidth","innerHeight","appendChild","domElement","Scene","PerspectiveCamera","position","set","add","AmbientLight","light","PointLight","loader","load","geometry","material","MeshPhongMaterial","color","mesh","Mesh"],"mappings":"AAAE,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGE,IAAIC,SAAJ,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,QAA9B;;AACA,IAAIC,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAP,CAA4BN,KAA5B,CAAhB;;AAEJ,SAASO,GAAT,CAAaC,KAAb,EAAmB;AAGf;AACAJ,EAAAA,QAAQ,GAAG,IAAIJ,KAAK,CAACS,aAAV,CAAyB;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAAzB,CAAX;AACAN,EAAAA,QAAQ,CAACO,OAAT,CAAkBC,MAAM,CAACC,UAAzB,EAAqCD,MAAM,CAACE,WAA5C;AACAb,EAAAA,SAAS,CAACc,WAAV,CAAuBX,QAAQ,CAACY,UAAhC,EANe,CAQf;;AACAb,EAAAA,KAAK,GAAG,IAAIH,KAAK,CAACiB,KAAV,EAAR,CATe,CAWf;;AACAf,EAAAA,MAAM,GAAG,IAAIF,KAAK,CAACkB,iBAAV,CAA6B,EAA7B,EAAiCN,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAA5D,EAAyE,CAAzE,EAA4E,KAA5E,CAAT;AACAZ,EAAAA,MAAM,CAACiB,QAAP,CAAgBC,GAAhB,CAAqB,CAArB,EAAwB,GAAxB,EAA6B,CAA7B;AACAjB,EAAAA,KAAK,CAACkB,GAAN,CAAWnB,MAAX,EAde,CAcM;AAGrB;;AACAC,EAAAA,KAAK,CAACkB,GAAN,CAAW,IAAIrB,KAAK,CAACsB,YAAV,CAAwB,QAAxB,CAAX;AAEA,MAAIC,KAAK,GAAG,IAAIvB,KAAK,CAACwB,UAAV,CAAsB,QAAtB,EAAgC,GAAhC,CAAZ;AACAtB,EAAAA,MAAM,CAACmB,GAAP,CAAYE,KAAZ;AAGA,MAAIE,MAAM,GAAG,IAAIzB,KAAK,CAACK,SAAV,EAAb;AACAoB,EAAAA,MAAM,CAACC,IAAP,CAAa,eAAb,EAA8B,UAAWC,QAAX,EAAsB;AAChD,QAAIC,QAAQ,GAAG,IAAI5B,KAAK,CAAC6B,iBAAV,CAA6B;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA7B,CAAf;AACA,QAAIC,IAAI,GAAG,IAAI/B,KAAK,CAACgC,IAAV,CAAgBL,QAAhB,EAA0BC,QAA1B,CAAX;AACAzB,IAAAA,KAAK,CAACkB,GAAN,CAAWU,IAAX;AACH,GAJD;AAMAN,EAAAA,MAAM,CAACC,IAAP,CAAa,gBAAb,EAA+B,UAAWC,QAAX,EAAsB;AACjD,QAAIC,QAAQ,GAAG,IAAI5B,KAAK,CAAC6B,iBAAV,CAA6B;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA7B,CAAf;AACA,QAAIC,IAAI,GAAG,IAAI/B,KAAK,CAACgC,IAAV,CAAgBL,QAAhB,EAA0BC,QAA1B,CAAX;AACAzB,IAAAA,KAAK,CAACkB,GAAN,CAAWU,IAAX;AACH,GAJD;AAOH;;AAAA;AAED,eAAexB,GAAf","sourcesContent":["  import * as THREE from 'three'\n  \n\n    var container, camera, scene, renderer;\n    var STLLoader = require('three-stl-loader')(THREE)\n  \nfunction Stl(props){\n\n\n    // renderer\n    renderer = new THREE.WebGLRenderer( { antialias: true } );\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    container.appendChild( renderer.domElement );\n\n    // scene\n    scene = new THREE.Scene();\n\n    // camera\n    camera = new THREE.PerspectiveCamera( 35, window.innerWidth / window.innerHeight, 1, 10000 );\n    camera.position.set( 3, 0.5, 3 );\n    scene.add( camera ); // required, because we are adding a light as a child of the camera\n\n\n    // lights\n    scene.add( new THREE.AmbientLight( 0x222222 ) );\n\n    var light = new THREE.PointLight( 0xffffff, 0.8 );\n    camera.add( light );\n\n\n    var loader = new THREE.STLLoader();\n    loader.load( 'FIRSTFILE.stl', function ( geometry ) {\n        var material = new THREE.MeshPhongMaterial( { color: 0xff5533 } );\n        var mesh = new THREE.Mesh( geometry, material );\n        scene.add( mesh );\n    } );\n    \n    loader.load( 'SECONDFILE.stl', function ( geometry ) {\n        var material = new THREE.MeshPhongMaterial( { color: 0xff5533 } );\n        var mesh = new THREE.Mesh( geometry, material );\n        scene.add( mesh );\n    } );\n\n\n};\n\nexport default Stl;"]},"metadata":{},"sourceType":"module"}