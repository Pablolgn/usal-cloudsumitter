{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _Selector = _interopRequireDefault(require(\"../../generic/Selector/Selector\"));\n\nvar _common = require(\"../../common\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst className = 'audio-selector';\n\nconst buildId = (...str) => str.filter(s => s).join('.');\n\nconst buildLabel = ({\n  label,\n  kind = '',\n  language = 'unknown'\n}) => label || (kind ? \"[\".concat(language, \"] \").concat(kind) : \"[\".concat(language, \"]\"));\n\nconst audioTrackToItem = track => {\n  return {\n    id: track.id || buildId(track.language, track.label) || track.label,\n    label: buildLabel(track),\n    data: track\n  };\n};\n\nclass AudioSelector extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleSelect\", item => {\n      if (this.props.setProperties) {\n        this.props.setProperties({\n          selectedAudioTrack: item\n        });\n      }\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          audioTracks = _this$props.audioTracks,\n          currentAudioTrack = _this$props.currentAudioTrack,\n          label = _this$props.label,\n          toggleContent = _this$props.toggleContent,\n          classNamePrefix = _this$props.classNamePrefix;\n\n    if (Array.isArray(audioTracks) && audioTracks.length > 1) {\n      // TODO: Consider optimization, memoizing the array and all props involved in rendering.\n      let selectedItem = audioTracks[0];\n\n      if (currentAudioTrack) {\n        const selectedIndex = audioTracks.indexOf(currentAudioTrack);\n\n        if (selectedIndex >= 0) {\n          selectedItem = audioTracks[selectedIndex]; // Ugly construct, but leaving it for now.\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(_Selector.default, {\n        items: audioTracks,\n        itemMapper: audioTrackToItem,\n        classNamePrefix: classNamePrefix,\n        className: className,\n        selectedItem: selectedItem,\n        label: label,\n        onSelect: this.handleSelect,\n        reverseOrder: true,\n        expandedToggleContent: toggleContent,\n        collapsedToggleContent: toggleContent\n      });\n    } else {\n      return null;\n    }\n  }\n\n}\n\n_defineProperty(AudioSelector, \"defaultProps\", {\n  classNamePrefix: _common.defaultClassNamePrefix\n});\n\n_defineProperty(AudioSelector, \"streamStateKeysForObservation\", ['audioTracks', 'currentAudioTrack']);\n\nAudioSelector.displayName = 'AudioSelector';\nvar _default = AudioSelector;\nexports.default = _default;","map":{"version":3,"sources":["../../../src/replay/components/controls/AudioSelector/AudioSelector.js"],"names":["className","buildId","str","s","buildLabel","kind","language","label","audioTrackToItem","track","id","data","AudioSelector","React","classNamePrefix","defaultClassNamePrefix","item","selectedAudioTrack","render","audioTracks","currentAudioTrack","toggleContent","Array","selectedItem","selectedIndex"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport Selector from '../../generic/Selector/Selector';\nimport { defaultClassNamePrefix } from '../../common';\nimport type { AvailableTrack } from '../../player/VideoStreamer/types';\nimport type { CommonProps } from '../../common';\nimport type { StreamStateKeysForObservation } from '../../player/PlayerController/ControllerContext';\n\ntype Props = CommonProps & {\n  /** ⇘︎ The list of audio tracks available for selection. */\n  audioTracks?: Array<AvailableTrack>,\n  /** ⇘ The currently playing audio track (if known). Must be strict equal one of the items in the audio track list, or null. */\n  currentAudioTrack?: AvailableTrack,\n  /** ⇗ When one item is clicked, this callback is invoked with an object having an selectedAudioTrack property with the audioTrack object corresponding to the selection. */\n  setProperties?: ({ selectedAudioTrack: AvailableTrack }) => void,\n  /** Element displayed in the control bar for expanding/collapsing the selector items. */\n  toggleContent: React.Node\n};\n\nconst className = 'audio-selector';\n\nconst buildId = (...str: Array<?string>) => str.filter(s => s).join('.');\nconst buildLabel = ({ label, kind = '', language = 'unknown' }: AvailableTrack) =>\n  label || (kind ? `[${language}] ${kind}` : `[${language}]`);\n\nconst audioTrackToItem = (track: AvailableTrack) => {\n  return { id: track.id || buildId(track.language, track.label) || track.label, label: buildLabel(track), data: track };\n};\n\nclass AudioSelector extends React.Component<Props> {\n  static defaultProps = {\n    classNamePrefix: defaultClassNamePrefix\n  };\n\n  static streamStateKeysForObservation: StreamStateKeysForObservation = ['audioTracks', 'currentAudioTrack'];\n\n  handleSelect = (item: any) => {\n    if (this.props.setProperties) {\n      this.props.setProperties({ selectedAudioTrack: item });\n    }\n  };\n\n  render() {\n    const { audioTracks, currentAudioTrack, label, toggleContent, classNamePrefix } = this.props;\n    if (Array.isArray(audioTracks) && audioTracks.length > 1) {\n      // TODO: Consider optimization, memoizing the array and all props involved in rendering.\n      let selectedItem = audioTracks[0];\n      if (currentAudioTrack) {\n        const selectedIndex = audioTracks.indexOf(currentAudioTrack);\n        if (selectedIndex >= 0) {\n          selectedItem = audioTracks[selectedIndex]; // Ugly construct, but leaving it for now.\n        }\n      }\n      return (\n        <Selector\n          items={audioTracks}\n          itemMapper={audioTrackToItem}\n          classNamePrefix={classNamePrefix}\n          className={className}\n          selectedItem={selectedItem}\n          label={label}\n          onSelect={this.handleSelect}\n          reverseOrder={true}\n          expandedToggleContent={toggleContent}\n          collapsedToggleContent={toggleContent}\n        />\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nAudioSelector.displayName = 'AudioSelector';\nexport default AudioSelector;\n"]},"metadata":{},"sourceType":"script"}