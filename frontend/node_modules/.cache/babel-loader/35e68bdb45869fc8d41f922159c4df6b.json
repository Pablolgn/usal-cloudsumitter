{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pablo/work/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/File_list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; //general\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Grid, Checkbox } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField'; //table\n\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow'; //icons\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PrintIcon from '@material-ui/icons/Print';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Preview from './Preview';\nimport { Replay } from 'vimond-replay';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8)\n  },\n  root: {\n    marginTop: 80,\n    flexGrow: 1\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3)\n  },\n  fullWidth: {\n    width: '100%'\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 350,\n    width: 520\n  },\n  paper: {\n    margin: theme.spacing(2)\n  },\n  model: {\n    marginLeft: theme.spacing(5)\n  },\n  buttons: {\n    marginLeft: theme.spacing(55)\n  },\n  numbers: {\n    width: 50\n  }\n}));\n\nfunction FileList() {\n  _s();\n\n  const [models, setModels] = useState([]);\n  const [count, setCount] = useState(0); //const [del, setDel] = useState(0);\n\n  const classes = useStyles();\n  useEffect(() => {\n    handlerCharge();\n  }, []);\n\n  function handlerDelete(id) {\n    axios.delete(\"http://mini3dfactory.duckdns.org:3002/api/models/delete/\" + models[id].value).then(response => {\n      handlerCharge();\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  ;\n\n  function handleCheckboxClick(event, id) {\n    event.stopPropagation();\n\n    if (models[id].sel === false) {\n      models[id].sel = true;\n      setCount(count + 1);\n    } else if (models[id].sel === true) {\n      models[id].sel = false;\n      setCount(count - 1);\n    }\n  }\n\n  ;\n\n  function handlerNumber(n, id) {\n    if (n !== \"\") {\n      console.log(n);\n      models[id].number = n;\n    }\n  }\n\n  function handlerCancelar() {\n    axios.get(\"http://mini3dfactory.duckdns.org:3004/api/communication/cancel\").then(response => {// server answer\n    }).catch(e => {\n      console.log(e);\n    });\n  } //function to optimize the .stl models \n\n\n  function handlerOptimize() {\n    /*\n        var arrOfModels = []\n    \n        for (let m of models) {\n          if (m.sel === true){\n            arrOfModels.push({name:m.value , number:m.number})\n          }\n        }\n    \n    \n        axios.post(\"http://mini3dfactory.duckdns.org:3003/api/optimize\",arrOfModels).then(response => {\n          handlerCharge()\n        }).catch(e => {\n          console.log(e);\n        });\n        \n     */\n    var fullName;\n\n    for (let m of models) {\n      if (m.sel === true) {\n        fullName = m.value;\n      }\n    }\n\n    var filename = fullName.slice(0, -4);\n    axios.post(\"http://mini3dfactory.duckdns.org:3002/api/models/printupload/\" + filename).then(response => {// server answer\n    }).catch(e => {\n      console.log(e);\n    }); //estado\n\n    /*\n    axios.get(\"http://mini3dfactory.duckdns.org:3004/api/communication/state\").then(response => {\n      console.log(response)\n    }).catch(e => {\n      console.log(e);\n    });\n    */\n  } //function to read all the models that are uploaded on the server\n\n\n  function handlerCharge() {\n    axios.get(\"http://mini3dfactory.duckdns.org:3002/api/models\").then(function (response) {\n      var namelist = response.data;\n      var items = [];\n      setModels([]);\n      let counter = 0;\n      namelist.forEach(nl => {\n        axios.get(\"http://mini3dfactory.duckdns.org:3002/api/models/Uploaded_models/\" + nl, {\n          responseType: 'blob'\n        }).then(function (response) {\n          const f = new Blob([response.data]);\n          var file = new File([f], nl, {\n            type: \"application/sla\",\n            lastModified: Date.now()\n          });\n          items.push({\n            value: file.name,\n            sel: false,\n            file: file,\n            number: \"1\",\n            id: counter\n          });\n          counter++;\n\n          if (counter === namelist.length) {\n            setModels(items);\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      direction: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 4,\n        direction: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          className: classes.table,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-label\": \"simple table\",\n            stickyHeader: true,\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Files on server\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: models.map(model => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    color: \"primary\",\n                    checked: model.sel,\n                    onClick: event => handleCheckboxClick(event, model.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: model.sel ? /*#__PURE__*/_jsxDEV(TextField, {\n                    type: \"number\",\n                    className: classes.numbers,\n                    onChange: event => handlerNumber(event.target.value, model.id),\n                    defaultValue: \"1\",\n                    id: \"number\",\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 25\n                  }, this) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: classes.name,\n                  children: model.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Preview, {\n                    size: 50,\n                    file: model.file\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: model.sel ? /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"secondary\",\n                    \"aria-label\": \"Delete\",\n                    onClick: () => handlerDelete(model.id),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                      fontSize: \"large\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 25\n                  }, this) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 21\n                }, this)]\n              }, model.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          direction: \"row\",\n          className: classes.buttons,\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            disabled: !count,\n            \"aria-label\": \"Optimize\",\n            onClick: handlerOptimize,\n            children: /*#__PURE__*/_jsxDEV(DashboardIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            disabled: !count,\n            \"aria-label\": \"Optimize\",\n            onClick: handlerCancelar,\n            children: /*#__PURE__*/_jsxDEV(PrintIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Replay, {\n            source: \"http://mini3dfactory.duckdns.org:3008/webcam/?action=stream\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FileList, \"EdhE+bxQpzSeE82wqK99Z9M7IjQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = FileList;\nexport default FileList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileList\");","map":{"version":3,"sources":["/home/pablo/work/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/File_list.js"],"names":["React","useState","useEffect","axios","makeStyles","IconButton","Grid","Checkbox","TextField","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","DashboardIcon","PrintIcon","DeleteIcon","Preview","Replay","useStyles","theme","title","flexGrow","marginLeft","spacing","root","marginTop","upload","marginBottom","fullWidth","width","table","margin","maxHeight","paper","model","buttons","numbers","FileList","models","setModels","count","setCount","classes","handlerCharge","handlerDelete","id","delete","value","then","response","catch","e","console","log","handleCheckboxClick","event","stopPropagation","sel","handlerNumber","n","number","handlerCancelar","get","handlerOptimize","fullName","m","filename","slice","post","namelist","data","items","counter","forEach","nl","responseType","f","Blob","file","File","type","lastModified","Date","now","push","name","length","error","map","target"],"mappings":"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","sourcesContent":["import React, { useState , useEffect } from 'react';\nimport axios from 'axios';\n  //general\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Grid, Checkbox} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n  //table\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n  //icons\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PrintIcon from '@material-ui/icons/Print';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport Preview from './Preview';\nimport { Replay } from 'vimond-replay';\n\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8),\n  },\n  root:{\n    marginTop:80,\n    flexGrow: 1,\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 350,\n    width: 520\n  \n  },\n  paper: {\n    margin: theme.spacing(2),\n  },\n  model: {\n    marginLeft:theme.spacing(5),\n  },\n  buttons: {\n    marginLeft:theme.spacing(55),\n  },\n  numbers: {\n    width:50\n  },\n\n}));\n\nfunction FileList() {\n\n  const [models, setModels] = useState([]);\n  const [count, setCount] = useState(0);\n  //const [del, setDel] = useState(0);\n\n  const classes = useStyles();\n\n  useEffect(() => { \n    handlerCharge()\n  },[]);\n\n\n  function handlerDelete(id){\n\n    axios.delete(\"http://mini3dfactory.duckdns.org:3002/api/models/delete/\" + models[id].value).then(response => {\n      handlerCharge()\n    }).catch(e => {\n      console.log(e);\n    });\n\n  };\n\n\n  function handleCheckboxClick(event, id){\n    event.stopPropagation();\n\n      if (models[id].sel === false) {\n          models[id].sel = true;\n          setCount(count + 1)\n\n      } else if (models[id].sel === true) {\n          models[id].sel = false; \n          setCount(count - 1)\n      }\n  };\n\n  function handlerNumber(n,id){\n    if(n !== \"\"){\n      console.log(n)\n      models[id].number = n\n    }\n  }\n\n  function handlerCancelar(){\n\n    axios.get(\"http://mini3dfactory.duckdns.org:3004/api/communication/cancel\").then(response => {\n      // server answer\n    }).catch(e => {\n      console.log(e);\n    });\n\n  }\n\n\n//function to optimize the .stl models \n\n  function handlerOptimize(){\n/*\n    var arrOfModels = []\n\n    for (let m of models) {\n      if (m.sel === true){\n        arrOfModels.push({name:m.value , number:m.number})\n      }\n    }\n\n\n    axios.post(\"http://mini3dfactory.duckdns.org:3003/api/optimize\",arrOfModels).then(response => {\n      handlerCharge()\n    }).catch(e => {\n      console.log(e);\n    });\n    \n */\nvar fullName \n\nfor (let m of models) {\n  if (m.sel === true){\n    fullName = m.value\n  }\n}\n\nvar filename = fullName.slice(0,-4)\n\naxios.post(\"http://mini3dfactory.duckdns.org:3002/api/models/printupload/\"+filename).then(response => {\n  // server answer\n}).catch(e => {\n  console.log(e);\n});\n \n\n  //estado\n/*\naxios.get(\"http://mini3dfactory.duckdns.org:3004/api/communication/state\").then(response => {\n  console.log(response)\n}).catch(e => {\n  console.log(e);\n});\n*/\n\n  }\n\n\n  //function to read all the models that are uploaded on the server\n  function handlerCharge(){\n\n    axios.get(\"http://mini3dfactory.duckdns.org:3002/api/models\").then(function (response){ \n\n          var namelist = response.data;\n          var items = [];\n\n            setModels([])\n     \n          let counter = 0;\n\n          namelist.forEach( nl => {\n\n            axios.get(\"http://mini3dfactory.duckdns.org:3002/api/models/Uploaded_models/\"+nl,{responseType: 'blob'}).then(function (response){ \n\n              const f = new Blob([response.data]);\n              var file = new File([f], nl, {type: \"application/sla\", lastModified: Date.now()});\n\n                items.push({\n                  value: file.name,\n                  sel: false,\n                  file: file,\n                  number: \"1\",\n                  id: counter\n                })\n                counter++\n\n                if(counter === namelist.length){\n                  setModels(items)\n                }\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n            })\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n}\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2} direction=\"row\">\n        <Grid container item xs={4} direction=\"column\">\n          <TableContainer component={Paper} className={classes.table}>\n            <Table  aria-label=\"simple table\" stickyHeader>\n              <TableHead>\n                <TableRow>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n                <TableCell>Files on server</TableCell>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {models.map(model =>\n                  <TableRow key={model.id}>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox color=\"primary\" checked={model.sel} onClick={event => handleCheckboxClick(event, model.id)}/>\n                    </TableCell>\n                    <TableCell>  \n                      {model.sel ? \n                        <TextField type={\"number\"} className={classes.numbers} onChange={event => handlerNumber(event.target.value,model.id)} defaultValue=\"1\" id=\"number\" size=\"small\"/>\n                                                : null\n                      }\n                    </TableCell>\n                    <TableCell className={classes.name}>{model.value}</TableCell>\n                    <TableCell>  \n                      <Preview size={50} file={model.file}/>\n                    </TableCell>\n                    <TableCell>  \n                      {model.sel ? \n                        <IconButton color=\"secondary\" aria-label=\"Delete\" onClick={() => handlerDelete(model.id)}>\n                          <DeleteIcon fontSize=\"large\"/>\n                        </IconButton> \n                                                : null\n                      }\n\n                    </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          <Grid container item direction=\"row\" className={classes.buttons} >\n            <IconButton color=\"primary\" disabled={!count} aria-label=\"Optimize\" onClick={handlerOptimize}>\n              <DashboardIcon fontSize=\"large\"/>\n            </IconButton>\n\n            <IconButton  color=\"primary\" disabled={!count} aria-label=\"Optimize\" onClick={handlerCancelar}>\n              <PrintIcon fontSize=\"large\"/>\n            </IconButton>\n          </Grid>\n          <Grid item xs={8} >\n          <Replay source=\"http://mini3dfactory.duckdns.org:3008/webcam/?action=stream\"/>\n\n          </Grid>\n\n        </Grid>\n    </Grid>\n    </div>\n  );\n}\n\n\nexport default FileList;\n"]},"metadata":{},"sourceType":"module"}