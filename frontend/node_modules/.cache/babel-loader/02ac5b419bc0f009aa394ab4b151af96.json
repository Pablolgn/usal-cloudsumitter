{"ast":null,"code":"var _jsxFileName = \"/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Stl.js\";\nimport React from \"react\";\nimport * as THREE from 'three';\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader';\nvar camera, scene;\n\nfunction Stl() {\n  // scene\n  scene = new THREE.Scene(); // camera\n\n  camera = new THREE.PerspectiveCamera(35, window.innerWidth / window.innerHeight, 1, 10000);\n  camera.position.set(3, 0.5, 3);\n  scene.add(camera); // required, because we are adding a light as a child of the camera\n  // lights\n\n  scene.add(new THREE.AmbientLight(0x222222));\n  var light = new THREE.PointLight(0xffffff, 0.8);\n  camera.add(light);\n  var loader = new STLLoader(THREE);\n  var mymesh = loader.load('FIRSTFILE.stl', function (geometry) {\n    var material = new THREE.MeshPhongMaterial({\n      color: 0xff5533\n    });\n    var mesh = new THREE.Mesh(geometry, material);\n  });\n  return React.createElement(\"mymesh\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  });\n}\n\n;\nexport default Stl;","map":{"version":3,"sources":["/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Stl.js"],"names":["React","THREE","STLLoader","camera","scene","Stl","Scene","PerspectiveCamera","window","innerWidth","innerHeight","position","set","add","AmbientLight","light","PointLight","loader","mymesh","load","geometry","material","MeshPhongMaterial","color","mesh","Mesh"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACC,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACC,SAASC,SAAT,QAA0B,sCAA1B;AAGE,IAAIC,MAAJ,EAAYC,KAAZ;;AAEJ,SAASC,GAAT,GAAc;AAEV;AACAD,EAAAA,KAAK,GAAG,IAAIH,KAAK,CAACK,KAAV,EAAR,CAHU,CAKV;;AACAH,EAAAA,MAAM,GAAG,IAAIF,KAAK,CAACM,iBAAV,CAA6B,EAA7B,EAAiCC,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAA5D,EAAyE,CAAzE,EAA4E,KAA5E,CAAT;AACAP,EAAAA,MAAM,CAACQ,QAAP,CAAgBC,GAAhB,CAAqB,CAArB,EAAwB,GAAxB,EAA6B,CAA7B;AACAR,EAAAA,KAAK,CAACS,GAAN,CAAWV,MAAX,EARU,CAQW;AAGrB;;AACAC,EAAAA,KAAK,CAACS,GAAN,CAAW,IAAIZ,KAAK,CAACa,YAAV,CAAwB,QAAxB,CAAX;AAEA,MAAIC,KAAK,GAAG,IAAId,KAAK,CAACe,UAAV,CAAsB,QAAtB,EAAgC,GAAhC,CAAZ;AACAb,EAAAA,MAAM,CAACU,GAAP,CAAYE,KAAZ;AAGA,MAAIE,MAAM,GAAG,IAAIf,SAAJ,CAAcD,KAAd,CAAb;AACA,MAAIiB,MAAM,GAAGD,MAAM,CAACE,IAAP,CAAa,eAAb,EAA8B,UAAWC,QAAX,EAAsB;AAC7D,QAAIC,QAAQ,GAAG,IAAIpB,KAAK,CAACqB,iBAAV,CAA6B;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA7B,CAAf;AACA,QAAIC,IAAI,GAAG,IAAIvB,KAAK,CAACwB,IAAV,CAAgBL,QAAhB,EAA0BC,QAA1B,CAAX;AAEH,GAJY,CAAb;AAOA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEH;;AAAA;AAED,eAAehB,GAAf","sourcesContent":["import React from \"react\";\n import * as THREE from 'three'\n  import { STLLoader } from 'three/examples/jsm/loaders/STLLoader'\n\n\n    var camera, scene;\n  \nfunction Stl(){\n\n    // scene\n    scene = new THREE.Scene();\n\n    // camera\n    camera = new THREE.PerspectiveCamera( 35, window.innerWidth / window.innerHeight, 1, 10000 );\n    camera.position.set( 3, 0.5, 3 );\n    scene.add( camera ); // required, because we are adding a light as a child of the camera\n\n\n    // lights\n    scene.add( new THREE.AmbientLight( 0x222222 ) );\n\n    var light = new THREE.PointLight( 0xffffff, 0.8 );\n    camera.add( light );\n\n\n    var loader = new STLLoader(THREE);\n    var mymesh = loader.load( 'FIRSTFILE.stl', function ( geometry ) {\n        var material = new THREE.MeshPhongMaterial( { color: 0xff5533 } );\n        var mesh = new THREE.Mesh( geometry, material );\n\n    } );\n\n\n    return <mymesh/>\n    \n};\n\nexport default Stl;"]},"metadata":{},"sourceType":"module"}