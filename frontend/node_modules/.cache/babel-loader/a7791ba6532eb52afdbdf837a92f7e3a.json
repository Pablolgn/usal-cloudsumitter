{"ast":null,"code":"var _jsxFileName = \"/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Upload.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Button, Grid } from '@material-ui/core';\nimport axios from 'axios';\nimport Dropzone from 'react-dropzone';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    marginTop: 50,\n    flexGrow: 1,\n    padding: theme.spacing(5)\n  },\n  root: {\n    flexGrow: 1\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  uploadbutton: {\n    marginLeft: 75,\n    marginTop: 25\n  },\n  fullWidth: {\n    width: '100%'\n  }\n}));\n\nfunction Upload() {\n  const classes = useStyles();\n\n  function handleUpload(e) {\n    const data = new FormData();\n    var models = Array.from(e.target.files);\n\n    for (let m of models) {\n      data.append('file', m);\n      axios.post(\"http://localhost:3002/upload\", data).then(response => {// server answer\n      }).catch(e => {\n        console.log(e);\n      });\n      console.log(m);\n    }\n  }\n\n  return React.createElement(\"main\", {\n    className: classes.fullWidth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    className: classes.root,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: spacing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    key: value,\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"File upload\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    component: \"label\",\n    className: classes.uploadbutton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Upload File\", React.createElement(\"input\", {\n    type: \"file\",\n    style: {\n      display: \"none\"\n    },\n    multiple: true,\n    accept: \".pdf,.obj,.stl\",\n    onChange: handleUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })))));\n}\n\nexport default Upload;","map":{"version":3,"sources":["/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Upload.js"],"names":["React","makeStyles","Typography","Button","Grid","axios","Dropzone","useStyles","theme","title","marginTop","flexGrow","padding","spacing","root","content","uploadbutton","marginLeft","fullWidth","width","Upload","classes","handleUpload","e","data","FormData","models","Array","from","target","files","m","append","post","then","response","catch","console","log","value","paper","toolbar","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Button, Grid } from '@material-ui/core';\nimport axios from 'axios';\nimport Dropzone from 'react-dropzone';\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    marginTop: 50,\n    flexGrow: 1,\n    padding: theme.spacing(5),\n  },\n  root:{\n    flexGrow: 1,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  uploadbutton: {\n    marginLeft: 75,\n    marginTop: 25,\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  \n}));\n\nfunction Upload() {\n  const classes = useStyles();\n\n\n  function handleUpload(e) {\n    const data = new FormData()\n\n    var models = Array.from(e.target.files)\n\n    for (let m of models) {\n\n      data.append('file', m)\n\n      axios.post(\"http://localhost:3002/upload\",data).then(response => {\n        // server answer\n      }).catch(e => {\n        console.log(e);\n      });\n\n      console.log(m);\n    }\n  }\n\n  return (\n    <main className={classes.fullWidth}>\n    <Grid container className={classes.root} spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justify=\"center\" spacing={spacing}>\n            <Grid key={value} item>\n              <Paper className={classes.paper} />\n            </Grid>\n        </Grid>\n      </Grid>\n        <div className={classes.toolbar} />\n        <div className={classes.title}>\n         <Typography variant='h6'>File upload</Typography>\n        </div>\n        <div>\n        <Button variant=\"contained\" component=\"label\" className={classes.uploadbutton}>\n            Upload File\n            <input\n                type=\"file\"\n                style={{ display: \"none\" }}\n                multiple\n                accept=\".pdf,.obj,.stl\"\n                onChange={handleUpload}\n            />\n        </Button>\n        </div>  \n        </Grid>\n    </main>\n    \n  );\n}\n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}