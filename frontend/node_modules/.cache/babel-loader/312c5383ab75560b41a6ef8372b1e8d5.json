{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.getConnectedPlayerUIContainer = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _common = require(\"../../common\");\n\nvar _Fullscreen = _interopRequireDefault(require(\"../containment-helpers/Fullscreen\"));\n\nvar _AspectRatio = _interopRequireDefault(require(\"../containment-helpers/AspectRatio\"));\n\nvar _InteractionDetector = _interopRequireDefault(require(\"../containment-helpers/InteractionDetector\"));\n\nvar _KeyboardShortcuts = _interopRequireDefault(require(\"../containment-helpers/KeyboardShortcuts\"));\n\nvar _PlayerStateClassNames = _interopRequireDefault(require(\"../containment-helpers/PlayerStateClassNames\"));\n\nvar _ResponsiveClassNames = _interopRequireDefault(require(\"../containment-helpers/ResponsiveClassNames\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst uiContainerClassName = 'ui-container';\nconst aspectRatioFixClassName = 'aspect-ratio-fix';\nconst classNameDefinitions = {\n  responsivenessPrefix: 'player-size-',\n  volumePrefix: 'volume-level-',\n  isFullscreen: 'is-fullscreen',\n  isUserActive: 'is-user-active',\n  isUserInactive: 'is-user-inactive',\n  isBuffering: 'is-buffering',\n  isSeeking: 'is-seeking',\n  isPlaying: 'is-playing',\n  isPaused: 'is-paused',\n  isStarting: 'is-starting',\n  isMuted: 'is-muted',\n  isAtLiveEdge: 'is-at-live-edge',\n  isLive: 'is-live',\n  isOnDemand: 'is-on-demand',\n  isDvrEnabled: 'is-dvr-enabled',\n  isFailed: 'is-failed'\n}; // Make stateClassNames pass an array with all relevant keys, so that a simple mapping can be done.\n// In addition comes dynamically generated class names from responsiveness, and perhaps volume level.\n\nconst noConnect = Component => Component;\n\nconst getConnectedPlayerUIContainer = (connector = noConnect) => {\n  var _class, _temp;\n\n  const ConnectedPlayerStateClassNames = connector(_PlayerStateClassNames.default);\n  const ConnectedKeyboardShortcuts = connector(_KeyboardShortcuts.default);\n  return _temp = _class = class PlayerUIContainer extends React.Component {\n    render() {\n      const _this$props = this.props,\n            classNamePrefix = _this$props.classNamePrefix,\n            _render = _this$props.render,\n            configuration = _this$props.configuration,\n            aspectRatio = _this$props.aspectRatio,\n            className = _this$props.className;\n      const playerClassName = classNamePrefix ? classNamePrefix.substr(0, classNamePrefix.length - 1) : className;\n      return /*#__PURE__*/React.createElement(_AspectRatio.default, {\n        rootClassName: playerClassName,\n        aspectRatio: aspectRatio || configuration && configuration.aspectRatio,\n        aspectFixClassName: aspectRatioFixClassName,\n        classNamePrefix: classNamePrefix,\n        render: () => /*#__PURE__*/React.createElement(_Fullscreen.default, {\n          render: _ref => {\n            let onRef = _ref.onRef,\n                fullscreenState = _objectWithoutProperties(_ref, [\"onRef\"]);\n\n            return /*#__PURE__*/React.createElement(_InteractionDetector.default, {\n              configuration: configuration,\n              render: _ref2 => {\n                let handleMouseMove = _ref2.handleMouseMove,\n                    handleTouchStart = _ref2.handleTouchStart,\n                    handleTouchEnd = _ref2.handleTouchEnd,\n                    handleFocus = _ref2.handleFocus,\n                    interactionState = _objectWithoutProperties(_ref2, [\"handleMouseMove\", \"handleTouchStart\", \"handleTouchEnd\", \"handleFocus\"]);\n\n                return /*#__PURE__*/React.createElement(ConnectedKeyboardShortcuts, {\n                  configuration: configuration,\n                  fullscreenState: fullscreenState,\n                  nudge: interactionState.nudge,\n                  toggleFixedUserActive: interactionState.toggleFixedUserActive,\n                  render: ({\n                    handleKeyDown\n                  }) => /*#__PURE__*/React.createElement(_ResponsiveClassNames.default, {\n                    onRef: onRef,\n                    configuration: configuration,\n                    render: ({\n                      onRef,\n                      responsiveClassNames\n                    }) => /*#__PURE__*/React.createElement(ConnectedPlayerStateClassNames, _extends({}, fullscreenState, interactionState, {\n                      classNameDefinitions: classNameDefinitions,\n                      classNamePrefix: classNamePrefix,\n                      className: uiContainerClassName,\n                      extraClassNames: responsiveClassNames,\n                      render: classNames => /*#__PURE__*/React.createElement(\"div\", {\n                        className: classNames,\n                        tabIndex: 0,\n                        ref: onRef,\n                        onMouseMove: handleMouseMove,\n                        onTouchStart: handleTouchStart,\n                        onTouchEnd: handleTouchEnd,\n                        onKeyDown: handleKeyDown,\n                        onFocus: handleFocus\n                      }, _render({\n                        fullscreenState,\n                        interactionState\n                      }))\n                    }))\n                  })\n                });\n              }\n            });\n          }\n        })\n      });\n    }\n\n  }, _defineProperty(_class, \"defaultProps\", {\n    classNamePrefix: _common.defaultClassNamePrefix,\n    className: _common.defaultClassNamePrefix.substr(0, _common.defaultClassNamePrefix.length - 1),\n    // Removing the last dash of the prefix. Dangerous assumption...\n    aspectRatio: {\n      horizontal: 16,\n      vertical: 9\n    }\n  }), _temp;\n};\n\nexports.getConnectedPlayerUIContainer = getConnectedPlayerUIContainer;\nconst PlayerUIContainer = getConnectedPlayerUIContainer();\nvar _default = PlayerUIContainer;\nexports.default = _default;","map":{"version":3,"sources":["../../../src/replay/components/player/PlayerUIContainer/PlayerUIContainer.js"],"names":["uiContainerClassName","aspectRatioFixClassName","classNameDefinitions","responsivenessPrefix","volumePrefix","isFullscreen","isUserActive","isUserInactive","isBuffering","isSeeking","isPlaying","isPaused","isStarting","isMuted","isAtLiveEdge","isLive","isOnDemand","isDvrEnabled","isFailed","noConnect","Component","getConnectedPlayerUIContainer","connector","ConnectedPlayerStateClassNames","PlayerStateClassNames","ConnectedKeyboardShortcuts","KeyboardShortcuts","React","classNamePrefix","defaultClassNamePrefix","className","aspectRatio","horizontal","vertical","render","configuration","playerClassName","onRef","fullscreenState","handleMouseMove","handleTouchStart","handleTouchEnd","handleFocus","interactionState","handleKeyDown","responsiveClassNames","classNames","PlayerUIContainer"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { defaultClassNamePrefix } from '../../common';\nimport type { CommonProps } from '../../common';\nimport Fullscreen from '../containment-helpers/Fullscreen';\nimport AspectRatio from '../containment-helpers/AspectRatio';\nimport InteractionDetector from '../containment-helpers/InteractionDetector';\nimport KeyboardShortcuts from '../containment-helpers/KeyboardShortcuts';\nimport type { InteractionDetectorConfiguration } from '../containment-helpers/InteractionDetector';\nimport type { KeyboardShortcutsConfiguration } from '../containment-helpers/KeyboardShortcuts';\nimport PlayerStateClassNames from '../containment-helpers/PlayerStateClassNames';\nimport ResponsiveClassNames from '../containment-helpers/ResponsiveClassNames';\nimport type { ResponsiveRanges } from '../containment-helpers/ResponsiveClassNames';\n\ntype RenderParameters = {\n  fullscreenState: {\n    isFullscreen: boolean,\n    setProperties: ({ isFullscreen: boolean }) => void,\n    enterFullscreen: () => void,\n    exitFullscreen: () => void\n  },\n  interactionState: {\n    nudge: () => void,\n    isUserActive: boolean\n  }\n};\n\ntype AspectRatioConfiguration = {\n  horizontal: number,\n  vertical: number\n};\n\ntype Props = CommonProps & {\n  aspectRatio: AspectRatioConfiguration,\n  configuration?: {\n    interactionDetector?: InteractionDetectorConfiguration,\n    keyboardShortcuts?: KeyboardShortcutsConfiguration,\n    responsivenessRules?: ?ResponsiveRanges,\n    aspectRatio?: ?AspectRatioConfiguration\n  },\n  render: RenderParameters => React.Node,\n  className?: string\n};\n\nconst uiContainerClassName = 'ui-container';\nconst aspectRatioFixClassName = 'aspect-ratio-fix';\n\nconst classNameDefinitions = {\n  responsivenessPrefix: 'player-size-',\n  volumePrefix: 'volume-level-',\n  isFullscreen: 'is-fullscreen',\n  isUserActive: 'is-user-active',\n  isUserInactive: 'is-user-inactive',\n  isBuffering: 'is-buffering',\n  isSeeking: 'is-seeking',\n  isPlaying: 'is-playing',\n  isPaused: 'is-paused',\n  isStarting: 'is-starting',\n  isMuted: 'is-muted',\n  isAtLiveEdge: 'is-at-live-edge',\n  isLive: 'is-live',\n  isOnDemand: 'is-on-demand',\n  isDvrEnabled: 'is-dvr-enabled',\n  isFailed: 'is-failed'\n};\n\n// Make stateClassNames pass an array with all relevant keys, so that a simple mapping can be done.\n// In addition comes dynamically generated class names from responsiveness, and perhaps volume level.\n\nconst noConnect = Component => Component;\n\nexport const getConnectedPlayerUIContainer = (connector: any => React.ComponentType<any> = noConnect) => {\n  const ConnectedPlayerStateClassNames = connector(PlayerStateClassNames);\n  const ConnectedKeyboardShortcuts = connector(KeyboardShortcuts);\n\n  return class PlayerUIContainer extends React.Component<Props> {\n    static defaultProps = {\n      classNamePrefix: defaultClassNamePrefix,\n      className: defaultClassNamePrefix.substr(0, defaultClassNamePrefix.length - 1), // Removing the last dash of the prefix. Dangerous assumption...\n      aspectRatio: {\n        horizontal: 16,\n        vertical: 9\n      }\n    };\n\n    render() {\n      const { classNamePrefix, render, configuration, aspectRatio, className } = this.props;\n      const playerClassName = classNamePrefix ? classNamePrefix.substr(0, classNamePrefix.length - 1) : className;\n      return (\n        <AspectRatio\n          rootClassName={playerClassName}\n          aspectRatio={aspectRatio || (configuration && configuration.aspectRatio)}\n          aspectFixClassName={aspectRatioFixClassName}\n          classNamePrefix={classNamePrefix}\n          render={() => (\n            <Fullscreen\n              render={({ onRef, ...fullscreenState }) => (\n                <InteractionDetector\n                  configuration={configuration}\n                  render={({ handleMouseMove, handleTouchStart, handleTouchEnd, handleFocus, ...interactionState }) => (\n                    <ConnectedKeyboardShortcuts\n                      configuration={configuration}\n                      fullscreenState={fullscreenState}\n                      nudge={interactionState.nudge}\n                      toggleFixedUserActive={interactionState.toggleFixedUserActive}\n                      render={({ handleKeyDown }) => (\n                        <ResponsiveClassNames\n                          onRef={onRef}\n                          configuration={configuration}\n                          render={({ onRef, responsiveClassNames }) => (\n                            <ConnectedPlayerStateClassNames\n                              {...fullscreenState}\n                              {...interactionState}\n                              classNameDefinitions={classNameDefinitions}\n                              classNamePrefix={classNamePrefix}\n                              className={uiContainerClassName}\n                              extraClassNames={responsiveClassNames}\n                              render={classNames => (\n                                <div\n                                  className={classNames}\n                                  tabIndex={0}\n                                  ref={onRef}\n                                  onMouseMove={handleMouseMove}\n                                  onTouchStart={handleTouchStart}\n                                  onTouchEnd={handleTouchEnd}\n                                  onKeyDown={handleKeyDown}\n                                  onFocus={handleFocus}>\n                                  {render({ fullscreenState, interactionState })}\n                                </div>\n                              )}\n                            />\n                          )}\n                        />\n                      )}\n                    />\n                  )}\n                />\n              )}\n            />\n          )}\n        />\n      );\n    }\n  };\n};\n\nconst PlayerUIContainer = getConnectedPlayerUIContainer();\nexport default PlayerUIContainer;\n"]},"metadata":{},"sourceType":"script"}