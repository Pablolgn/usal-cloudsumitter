{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFullscreenElement = getFullscreenElement;\nexports.enterFullscreen = enterFullscreen;\nexports.exitFullscreen = exitFullscreen;\nexports.notifyFullscreenChange = notifyFullscreenChange;\n\nfunction getFullscreenElement() {\n  // Ridiculous camel casing confusion ruling the Interwebs.\n  return document.fullScreenElement || document.fullscreenElement || document.webkitFullscreenElement || document.webkitFullScreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n}\n\nfunction enterFullscreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n    return true;\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n    return true;\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n    return true;\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n    return true;\n  } else if (element.webkitRequestFullScreen) {\n    element.webkitRequestFullScreen(); // ALLOW_KEY_BOARD_INPUT makes this function not work in older Safari versions.\n\n    return true;\n  } else {\n    // Try native fullscreen for video element in Safari on iPhone and older iOS in general.\n    if (navigator.userAgent.match(/(iPad|iPhone|iPod)/i)) {\n      element = element.getElementsByTagName('video')[0];\n\n      if (element) {\n        element.webkitEnterFullscreen();\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction exitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  } else if (document.webkitExitFullScreen) {\n    document.webkitExitFullScreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  }\n}\n\nfunction notifyFullscreenChange(handler) {\n  const fullscreenEventNames = ['fullscreenchange', 'mozfullscreenchange', 'webkitfullscreenchange', 'MSFullscreenChange'];\n  fullscreenEventNames.forEach(function (eventName) {\n    document.addEventListener(eventName, handler);\n  });\n  return function () {\n    fullscreenEventNames.forEach(function (eventName) {\n      document.removeEventListener(eventName, handler);\n    });\n  };\n}","map":{"version":3,"sources":["../../../../src/replay/components/player/containment-helpers/ponyfills/crossBrowserFullscreen.js"],"names":["document","element","Element","navigator","fullscreenEventNames"],"mappings":";;;;;;;;;;AAAO,SAAA,oBAAA,GAAgC;AACrC;AACA,SACEA,QAAQ,CAARA,iBAAAA,IACAA,QAAQ,CADRA,iBAAAA,IAEAA,QAAQ,CAFRA,uBAAAA,IAGAA,QAAQ,CAHRA,uBAAAA,IAIAA,QAAQ,CAJRA,oBAAAA,IAKAA,QAAQ,CANV,mBAAA;AAQD;;AAEM,SAAA,eAAA,CAAA,OAAA,EAAkC;AACvC,MAAIC,OAAO,CAAX,iBAAA,EAA+B;AAC7BA,IAAAA,OAAO,CAAPA,iBAAAA;AACA,WAAA,IAAA;AAFF,GAAA,MAGO,IAAIA,OAAO,CAAX,oBAAA,EAAkC;AACvCA,IAAAA,OAAO,CAAPA,oBAAAA;AACA,WAAA,IAAA;AAFK,GAAA,MAGA,IAAIA,OAAO,CAAX,mBAAA,EAAiC;AACtCA,IAAAA,OAAO,CAAPA,mBAAAA;AACA,WAAA,IAAA;AAFK,GAAA,MAGA,IAAIA,OAAO,CAAX,uBAAA,EAAqC;AAC1CA,IAAAA,OAAO,CAAPA,uBAAAA,CAAgCC,OAAO,CAAvCD,oBAAAA;AACA,WAAA,IAAA;AAFK,GAAA,MAGA,IAAIA,OAAO,CAAX,uBAAA,EAAqC;AAC1CA,IAAAA,OAAO,CADmC,uBAC1CA,GAD0C,CACP;;AACnC,WAAA,IAAA;AAFK,GAAA,MAGA;AACL;AACA,QAAIE,SAAS,CAATA,SAAAA,CAAAA,KAAAA,CAAJ,qBAAIA,CAAJ,EAAsD;AACpDF,MAAAA,OAAO,GAAGA,OAAO,CAAPA,oBAAAA,CAAAA,OAAAA,EAAVA,CAAUA,CAAVA;;AACA,UAAA,OAAA,EAAa;AACXA,QAAAA,OAAO,CAAPA,qBAAAA;AACA,eAAA,IAAA;AACD;AACF;AACF;;AACD,SAAA,KAAA;AACD;;AAEM,SAAA,cAAA,GAA0B;AAC/B,MAAID,QAAQ,CAAZ,cAAA,EAA6B;AAC3BA,IAAAA,QAAQ,CAARA,cAAAA;AADF,GAAA,MAEO,IAAIA,QAAQ,CAAZ,mBAAA,EAAkC;AACvCA,IAAAA,QAAQ,CAARA,mBAAAA;AADK,GAAA,MAEA,IAAIA,QAAQ,CAAZ,oBAAA,EAAmC;AACxCA,IAAAA,QAAQ,CAARA,oBAAAA;AADK,GAAA,MAEA,IAAIA,QAAQ,CAAZ,oBAAA,EAAmC;AACxCA,IAAAA,QAAQ,CAARA,oBAAAA;AADK,GAAA,MAEA,IAAIA,QAAQ,CAAZ,gBAAA,EAA+B;AACpCA,IAAAA,QAAQ,CAARA,gBAAAA;AACD;AACF;;AAEM,SAAA,sBAAA,CAAA,OAAA,EAAyC;AAC9C,QAAMI,oBAAoB,GAAG,CAAA,kBAAA,EAAA,qBAAA,EAAA,wBAAA,EAA7B,oBAA6B,CAA7B;AAOAA,EAAAA,oBAAoB,CAApBA,OAAAA,CAA6B,UAAA,SAAA,EAAoB;AAC/CJ,IAAAA,QAAQ,CAARA,gBAAAA,CAAAA,SAAAA,EAAAA,OAAAA;AADFI,GAAAA;AAIA,SAAO,YAAW;AAChBA,IAAAA,oBAAoB,CAApBA,OAAAA,CAA6B,UAAA,SAAA,EAAoB;AAC/CJ,MAAAA,QAAQ,CAARA,mBAAAA,CAAAA,SAAAA,EAAAA,OAAAA;AADFI,KAAAA;AADF,GAAA;AAKD","sourcesContent":["export function getFullscreenElement() {\n  // Ridiculous camel casing confusion ruling the Interwebs.\n  return (\n    document.fullScreenElement ||\n    document.fullscreenElement ||\n    document.webkitFullscreenElement ||\n    document.webkitFullScreenElement ||\n    document.mozFullScreenElement ||\n    document.msFullscreenElement\n  );\n}\n\nexport function enterFullscreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n    return true;\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n    return true;\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n    return true;\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n    return true;\n  } else if (element.webkitRequestFullScreen) {\n    element.webkitRequestFullScreen(); // ALLOW_KEY_BOARD_INPUT makes this function not work in older Safari versions.\n    return true;\n  } else {\n    // Try native fullscreen for video element in Safari on iPhone and older iOS in general.\n    if (navigator.userAgent.match(/(iPad|iPhone|iPod)/i)) {\n      element = element.getElementsByTagName('video')[0];\n      if (element) {\n        element.webkitEnterFullscreen();\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function exitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  } else if (document.webkitExitFullScreen) {\n    document.webkitExitFullScreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  }\n}\n\nexport function notifyFullscreenChange(handler) {\n  const fullscreenEventNames = [\n    'fullscreenchange',\n    'mozfullscreenchange',\n    'webkitfullscreenchange',\n    'MSFullscreenChange'\n  ];\n\n  fullscreenEventNames.forEach(function(eventName) {\n    document.addEventListener(eventName, handler);\n  });\n\n  return function() {\n    fullscreenEventNames.forEach(function(eventName) {\n      document.removeEventListener(eventName, handler);\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"script"}