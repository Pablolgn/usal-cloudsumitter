{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.prefixClassNames = prefixClassNames;\nexports.hydrateClassNames = hydrateClassNames;\nexports.getBoundingEventCoordinates = getBoundingEventCoordinates;\nexports.getKeyboardShortcutBlocker = getKeyboardShortcutBlocker;\nexports.deepClone = deepClone;\nexports.override = override;\nexports.getIntervalRunner = exports.formatClockTime = exports.formatTime = exports.formatTimeComponent = exports.isShallowEqual = exports.isObject = exports.isDifferent = exports.defaultClassNamePrefix = void 0;\nconst defaultClassNamePrefix = 'replay-';\nexports.defaultClassNamePrefix = defaultClassNamePrefix;\n\nfunction prefixClassNames(prefix, ...names) {\n  const sanitizedPrefix = prefix == null ? '' : prefix;\n  const classNameArray = [];\n\n  for (let i = 0; i < names.length; i++) {\n    // Early optimisation: For loop is more effective than map/filter...\n    if (names[i]) {\n      classNameArray.push(sanitizedPrefix + names[i]);\n    }\n  }\n\n  return classNameArray.join(' ');\n}\n/*export function buildClassNames(useDefaultClassNaming: ?boolean, prefix: ?string, ...names: Array<?string>): string {\n  return useDefaultClassNaming ? prefixClassNames(prefix, ...names) : names[0] || '';\n}*/\n\n\nconst isDefined = item => item;\n\nfunction hydrateClassNames({\n  classes,\n  selectClasses,\n  classNames,\n  classNamePrefix\n}) {\n  if (classes && selectClasses) {\n    const selectedClasses = selectClasses(classes);\n\n    if (Array.isArray(selectedClasses)) {\n      return selectedClasses.filter(isDefined).join(' ');\n    } else {\n      return selectedClasses;\n    }\n  } else if (classNames) {\n    return prefixClassNames(classNamePrefix, ...classNames);\n  }\n}\n\nfunction getBoundingEventCoordinates(evt, element) {\n  // Difficult to code this with strict typing in a JS-optimal way. Sticking to any for the event.\n  const domRect = (element || evt.currentTarget).getBoundingClientRect();\n  let extractedEvent;\n\n  if (evt.touches && evt.touches.length > 0) {\n    extractedEvent = evt.touches[0];\n  } else if (evt.changedTouches && evt.changedTouches.length > 0) {\n    extractedEvent = evt.changedTouches[0];\n  } else {\n    extractedEvent = evt;\n  }\n\n  return {\n    x: Math.max(0, Math.min(extractedEvent.pageX - domRect.left, domRect.width)),\n    y: Math.max(0, Math.min(extractedEvent.pageY - domRect.top, domRect.height)),\n    width: domRect.width,\n    height: domRect.height\n  };\n}\n\nfunction getKeyboardShortcutBlocker(keysToBeBlocked) {\n  return keyboardEvent => {\n    if (keysToBeBlocked.indexOf(keyboardEvent.key) >= 0) {\n      keyboardEvent.preventDefault();\n      keyboardEvent.stopPropagation();\n    }\n  };\n}\n\nconst isDifferent = (a, b) => {\n  if (a === b) {\n    return false;\n  }\n\n  if (a instanceof Date && b instanceof Date && a.getTime() === b.getTime()) {\n    return false;\n  }\n\n  return !(Number.isNaN(a) && Number.isNaN(b));\n};\n\nexports.isDifferent = isDifferent;\n\nconst isObject = obj => obj != null && obj.constructor === {}.constructor;\n\nexports.isObject = isObject;\n\nconst isShallowEqual = (a, b) => {\n  if (a === b) {\n    return true;\n  } else if (isObject(a) && isObject(b)) {\n    const keysA = Object.keys(a);\n    const keysB = Object.keys(b);\n\n    if (keysA.length !== keysB.length) {\n      return false;\n    }\n\n    const differentACount = keysA.filter(key => isDifferent(a[key], b[key])).length;\n\n    if (differentACount > 0) {\n      return false;\n    }\n\n    return keysB.filter(key => isDifferent(b[key], a[key])).length === 0;\n  } else if (Array.isArray(a) && Array.isArray(b) && a.length === b.length) {\n    for (let i = a.length; i--;) {\n      if (a[i] !== b[i]) return false;\n    }\n\n    return true;\n  } else {\n    // No identical equality\n    return false;\n  }\n};\n\nexports.isShallowEqual = isShallowEqual;\n\nfunction deepClone(obj) {\n  if (obj == null) {\n    return {};\n  } else {\n    const clone = {};\n    const original = obj;\n    Object.keys(obj).forEach(key => {\n      if (isObject(original[key])) {\n        clone[key] = deepClone(original[key]);\n      } else {\n        clone[key] = original[key];\n      }\n    });\n    return clone;\n  }\n}\n\nfunction override(base, overrides) {\n  const copy = deepClone(base);\n\n  if (overrides) {\n    const extension = overrides; // Should be unnecessary!\n\n    Object.getOwnPropertyNames(extension).forEach(key => {\n      if (isObject(extension[key])) {\n        if (isObject(copy[key])) {\n          copy[key] = override(copy[key], extension[key]);\n        } else {\n          copy[key] = deepClone(extension[key]);\n        }\n      } else {\n        copy[key] = extension[key];\n      }\n    });\n  }\n\n  return copy;\n}\n\nconst formatTimeComponent = (integer, separator = '', emptyIfZero = false, pad = true) => {\n  return emptyIfZero && integer === 0 ? '' : integer < 10 && pad ? \"0\".concat(integer).concat(separator) : \"\".concat(integer).concat(separator);\n};\n\nexports.formatTimeComponent = formatTimeComponent;\n\nconst formatTime = (seconds, negativeMark = '-') => {\n  let rounded = Math.round(seconds);\n  let includedNegativeMark = '';\n\n  if (typeof seconds !== 'number' || isNaN(seconds) || seconds === Infinity) {\n    rounded = 0;\n  } else if (rounded < 0) {\n    rounded = -rounded;\n    includedNegativeMark = negativeMark;\n  }\n\n  const days = Math.floor(rounded / 86400);\n  const daysInSeconds = days * 86400;\n  const hours = Math.floor((rounded - daysInSeconds) / 3600);\n  const hoursAndDaysInSeconds = daysInSeconds + hours * 3600;\n  const minutes = Math.floor((rounded - hoursAndDaysInSeconds) / 60);\n  const secs = rounded - hoursAndDaysInSeconds - minutes * 60;\n  return includedNegativeMark + formatTimeComponent(days, '.', true, false) + formatTimeComponent(hours, ':', days === 0) + formatTimeComponent(minutes, ':', false) + formatTimeComponent(secs);\n};\n\nexports.formatTime = formatTime;\n\nconst formatClockTime = date => {\n  const isValidDate = date instanceof Date && !isNaN(date.getTime());\n  let hours = 0;\n  let minutes = 0;\n  let seconds = 0;\n\n  if (isValidDate && date != null) {\n    // Silly construct for flow null check.\n    hours = isValidDate ? date.getHours() : 0;\n    minutes = isValidDate ? date.getMinutes() : 0;\n    seconds = isValidDate ? date.getSeconds() : 0;\n  }\n\n  return formatTimeComponent(hours, ':', false) + formatTimeComponent(minutes, ':', false) + formatTimeComponent(seconds);\n};\n\nexports.formatClockTime = formatClockTime;\n\nconst getIntervalRunner = (method, intervalSeconds) => {\n  let intervalID = null;\n  return {\n    start: () => {\n      if (!intervalID) {\n        intervalID = setInterval(method, intervalSeconds * 1000);\n      }\n    },\n    stop: () => {\n      if (intervalID) {\n        clearInterval(intervalID);\n        intervalID = null;\n      }\n    }\n  };\n};\n\nexports.getIntervalRunner = getIntervalRunner;","map":{"version":3,"sources":["../src/replay/components/common.js"],"names":["defaultClassNamePrefix","sanitizedPrefix","prefix","classNameArray","i","names","isDefined","item","classNamePrefix","classes","selectedClasses","selectClasses","Array","prefixClassNames","domRect","element","evt","extractedEvent","x","Math","y","width","height","keyboardEvent","keysToBeBlocked","isDifferent","a","b","Number","isObject","obj","isShallowEqual","keysA","Object","keysB","differentACount","key","clone","original","deepClone","copy","extension","override","formatTimeComponent","separator","emptyIfZero","pad","integer","formatTime","negativeMark","rounded","includedNegativeMark","isNaN","seconds","days","daysInSeconds","hours","hoursAndDaysInSeconds","minutes","secs","formatClockTime","date","isValidDate","getIntervalRunner","intervalID","start","setInterval","intervalSeconds","stop","clearInterval"],"mappings":"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","sourcesContent":["//@flow\n\ntype Classes = { [string]: ?string };\n\nexport type CommonGenericProps = {\n  classes?: ?Classes,\n  classNamePrefix?: string,\n  className?: string\n};\n\nexport type CommonProps = {\n  classNamePrefix?: string,\n  label?: string\n};\n\nexport type Id = string | number;\n\ntype Coordinates = { x: number, y: number, width: number, height: number };\n\nexport const defaultClassNamePrefix = 'replay-';\n\nexport function prefixClassNames(prefix: ?string, ...names: Array<?string>): string {\n  const sanitizedPrefix = prefix == null ? '' : prefix;\n  const classNameArray = [];\n  for (let i = 0; i < names.length; i++) {\n    // Early optimisation: For loop is more effective than map/filter...\n    if (names[i]) {\n      classNameArray.push(sanitizedPrefix + names[i]);\n    }\n  }\n  return classNameArray.join(' ');\n}\n\n/*export function buildClassNames(useDefaultClassNaming: ?boolean, prefix: ?string, ...names: Array<?string>): string {\n  return useDefaultClassNaming ? prefixClassNames(prefix, ...names) : names[0] || '';\n}*/\n\nconst isDefined = item => item;\n\nexport function hydrateClassNames({\n  classes,\n  selectClasses,\n  classNames,\n  classNamePrefix\n}: {\n  classes: ?Classes,\n  selectClasses: Classes => ?string | ?Array<?string>,\n  classNames?: Array<?string>,\n  classNamePrefix?: string\n}): ?string {\n  if (classes && selectClasses) {\n    const selectedClasses = selectClasses(classes);\n    if (Array.isArray(selectedClasses)) {\n      return selectedClasses.filter(isDefined).join(' ');\n    } else {\n      return selectedClasses;\n    }\n  } else if (classNames) {\n    return prefixClassNames(classNamePrefix, ...classNames);\n  }\n}\n\nexport function getBoundingEventCoordinates(evt: any, element?: HTMLElement): Coordinates {\n  // Difficult to code this with strict typing in a JS-optimal way. Sticking to any for the event.\n  const domRect = (element || evt.currentTarget).getBoundingClientRect();\n  let extractedEvent;\n  if (evt.touches && evt.touches.length > 0) {\n    extractedEvent = evt.touches[0];\n  } else if (evt.changedTouches && evt.changedTouches.length > 0) {\n    extractedEvent = evt.changedTouches[0];\n  } else {\n    extractedEvent = evt;\n  }\n  return {\n    x: Math.max(0, Math.min(extractedEvent.pageX - domRect.left, domRect.width)),\n    y: Math.max(0, Math.min(extractedEvent.pageY - domRect.top, domRect.height)),\n    width: domRect.width,\n    height: domRect.height\n  };\n}\n\nexport function getKeyboardShortcutBlocker(keysToBeBlocked: Array<string>): KeyboardEvent => void {\n  return (keyboardEvent: KeyboardEvent) => {\n    if (keysToBeBlocked.indexOf(keyboardEvent.key) >= 0) {\n      keyboardEvent.preventDefault();\n      keyboardEvent.stopPropagation();\n    }\n  };\n}\n\nexport const isDifferent = (a: any, b: any) => {\n  if (a === b) {\n    return false;\n  }\n  if (a instanceof Date && b instanceof Date && a.getTime() === b.getTime()) {\n    return false;\n  }\n  return !(Number.isNaN(a) && Number.isNaN(b));\n};\n\nexport const isObject = (obj: ?{}) => obj != null && obj.constructor === {}.constructor;\n\nexport const isShallowEqual = (a: any, b: any): boolean => {\n  if (a === b) {\n    return true;\n  } else if (isObject(a) && isObject(b)) {\n    const keysA = Object.keys(a);\n    const keysB = Object.keys(b);\n    if (keysA.length !== keysB.length) {\n      return false;\n    }\n    const differentACount = keysA.filter(key => isDifferent(a[key], b[key])).length;\n    if (differentACount > 0) {\n      return false;\n    }\n    return keysB.filter(key => isDifferent(b[key], a[key])).length === 0;\n  } else if (Array.isArray(a) && Array.isArray(b) && a.length === b.length) {\n    for (let i = a.length; i--; ) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  } else {\n    // No identical equality\n    return false;\n  }\n};\n\nexport function deepClone(obj: ?{}): {} {\n  if (obj == null) {\n    return {};\n  } else {\n    const clone = {};\n    const original = obj;\n    Object.keys(obj).forEach(key => {\n      if (isObject(original[key])) {\n        clone[key] = deepClone(original[key]);\n      } else {\n        clone[key] = original[key];\n      }\n    });\n    return clone;\n  }\n}\n\nexport function override(base: ?{}, overrides: ?{}): Object {\n  const copy = deepClone(base);\n  if (overrides) {\n    const extension: {} = overrides; // Should be unnecessary!\n    Object.getOwnPropertyNames((extension: {})).forEach(key => {\n      if (isObject(extension[key])) {\n        if (isObject(copy[key])) {\n          copy[key] = override(copy[key], extension[key]);\n        } else {\n          copy[key] = deepClone(extension[key]);\n        }\n      } else {\n        copy[key] = extension[key];\n      }\n    });\n  }\n  return copy;\n}\n\nexport const formatTimeComponent = (\n  integer: number,\n  separator: string = '',\n  emptyIfZero: boolean = false,\n  pad: boolean = true\n) => {\n  return emptyIfZero && integer === 0 ? '' : integer < 10 && pad ? `0${integer}${separator}` : `${integer}${separator}`;\n};\n\nexport const formatTime = (seconds: number, negativeMark: string = '-') => {\n  let rounded = Math.round(seconds);\n  let includedNegativeMark = '';\n  if (typeof seconds !== 'number' || isNaN(seconds) || seconds === Infinity) {\n    rounded = 0;\n  } else if (rounded < 0) {\n    rounded = -rounded;\n    includedNegativeMark = negativeMark;\n  }\n  const days = Math.floor(rounded / 86400);\n  const daysInSeconds = days * 86400;\n  const hours = Math.floor((rounded - daysInSeconds) / 3600);\n  const hoursAndDaysInSeconds = daysInSeconds + hours * 3600;\n  const minutes = Math.floor((rounded - hoursAndDaysInSeconds) / 60);\n  const secs = rounded - hoursAndDaysInSeconds - minutes * 60;\n  return (\n    includedNegativeMark +\n    formatTimeComponent(days, '.', true, false) +\n    formatTimeComponent(hours, ':', days === 0) +\n    formatTimeComponent(minutes, ':', false) +\n    formatTimeComponent(secs)\n  );\n};\n\nexport const formatClockTime = (date: ?Date) => {\n  const isValidDate = date instanceof Date && !isNaN(date.getTime());\n  let hours = 0;\n  let minutes = 0;\n  let seconds = 0;\n  if (isValidDate && date != null) {\n    // Silly construct for flow null check.\n    hours = isValidDate ? date.getHours() : 0;\n    minutes = isValidDate ? date.getMinutes() : 0;\n    seconds = isValidDate ? date.getSeconds() : 0;\n  }\n  return (\n    formatTimeComponent(hours, ':', false) + formatTimeComponent(minutes, ':', false) + formatTimeComponent(seconds)\n  );\n};\n\nexport const getIntervalRunner = (method: () => void, intervalSeconds: number) => {\n  let intervalID: ?IntervalID = null;\n  return {\n    start: () => {\n      if (!intervalID) {\n        intervalID = setInterval(method, intervalSeconds * 1000);\n      }\n    },\n    stop: () => {\n      if (intervalID) {\n        clearInterval(intervalID);\n        intervalID = null;\n      }\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"script"}