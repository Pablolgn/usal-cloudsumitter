{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pablo/work/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/File_list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; //general\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Grid, Checkbox } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField'; //table\n\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow'; //icons\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PrintIcon from '@material-ui/icons/Print';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Preview from './Preview';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8)\n  },\n  root: {\n    marginTop: 80,\n    flexGrow: 1\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3)\n  },\n  fullWidth: {\n    width: '100%'\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 350,\n    width: 520\n  },\n  paper: {\n    margin: theme.spacing(2)\n  },\n  model: {\n    marginLeft: theme.spacing(5)\n  },\n  buttons: {\n    marginLeft: theme.spacing(55)\n  },\n  numbers: {\n    width: 50\n  }\n}));\n\nfunction FileList() {\n  _s();\n\n  const [models, setModels] = useState([]);\n  const [count, setCount] = useState(0);\n  const [state, setState] = useState(); //const [del, setDel] = useState(0);\n\n  const classes = useStyles();\n  useEffect(() => {\n    handlerCharge();\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      axios.get(\"http://mini3dfactory.duckdns.org:3004/api/communication/state\").then(response => {\n        setState(response.data.state);\n      }).catch(e => {\n        console.log(e);\n      });\n    }, 3000);\n    return () => clearInterval(interval);\n  }, []);\n\n  function handlerDelete(id) {\n    axios.delete(\"http://mini3dfactory.duckdns.org:3002/api/models/delete/\" + models[id].value).then(response => {\n      handlerCharge();\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  ;\n\n  function handleCheckboxClick(event, id) {\n    event.stopPropagation();\n\n    if (models[id].sel === false) {\n      models[id].sel = true;\n      setCount(count + 1);\n    } else if (models[id].sel === true) {\n      models[id].sel = false;\n      setCount(count - 1);\n    }\n  }\n\n  ;\n\n  function handlerNumber(n, id) {\n    if (n !== \"\") {\n      console.log(n);\n      models[id].number = n;\n    }\n  }\n\n  function handlerCancelar() {\n    axios.get(\"http://mini3dfactory.duckdns.org:3004/api/communication/cancel\").then(response => {// server answer\n    }).catch(e => {\n      console.log(e);\n    });\n  } //function to optimize the .stl models \n\n\n  function handlerOptimize() {\n    var arrOfModels = [];\n\n    for (let m of models) {\n      if (m.sel === true) {\n        arrOfModels.push({\n          name: m.value,\n          number: m.number\n        });\n      }\n    }\n\n    axios.post(\"http://mini3dfactory.duckdns.org:3003/api/optimize\", arrOfModels).then(response => {\n      handlerCharge();\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  function handlerPrint() {\n    var fullName;\n\n    for (let m of models) {\n      if (m.sel === true) {\n        fullName = m.value;\n      }\n    }\n\n    var filename = fullName.slice(0, -4);\n    axios.post(\"http://mini3dfactory.duckdns.org:3002/api/models/printupload/\" + filename).then(response => {// server answer\n    }).catch(e => {\n      console.log(e);\n    });\n  } //function to read all the models that are uploaded on the server\n\n\n  function handlerCharge() {\n    axios.get(\"http://mini3dfactory.duckdns.org:3002/api/models\").then(function (response) {\n      var namelist = response.data;\n      var items = [];\n      setModels([]);\n      let counter = 0;\n      namelist.forEach(nl => {\n        axios.get(\"http://mini3dfactory.duckdns.org:3002/api/models/Uploaded_models/\" + nl, {\n          responseType: 'blob'\n        }).then(function (response) {\n          const f = new Blob([response.data]);\n          var file = new File([f], nl, {\n            type: \"application/sla\",\n            lastModified: Date.now()\n          });\n          items.push({\n            value: file.name,\n            sel: false,\n            file: file,\n            number: \"1\",\n            id: counter\n          });\n          counter++;\n\n          if (counter === namelist.length) {\n            setModels(items);\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      direction: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 4,\n        direction: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          className: classes.table,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-label\": \"simple table\",\n            stickyHeader: true,\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Files on server\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: models.map(model => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    color: \"primary\",\n                    checked: model.sel,\n                    onClick: event => handleCheckboxClick(event, model.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: model.sel ? /*#__PURE__*/_jsxDEV(TextField, {\n                    type: \"number\",\n                    className: classes.numbers,\n                    onChange: event => handlerNumber(event.target.value, model.id),\n                    defaultValue: \"1\",\n                    id: \"number\",\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 25\n                  }, this) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: classes.name,\n                  children: model.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Preview, {\n                    size: 50,\n                    file: model.file\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: model.sel ? /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"secondary\",\n                    \"aria-label\": \"Delete\",\n                    onClick: () => handlerDelete(model.id),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                      fontSize: \"large\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 25\n                  }, this) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 21\n                }, this)]\n              }, model.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          direction: \"row\",\n          className: classes.buttons,\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            disabled: !count,\n            \"aria-label\": \"Optimize\",\n            onClick: handlerOptimize,\n            children: /*#__PURE__*/_jsxDEV(DashboardIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            disabled: !count,\n            \"aria-label\": \"Optimize\",\n            onClick: handlerPrint,\n            children: /*#__PURE__*/_jsxDEV(PrintIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FileList, \"9+CpCrfEf/k+i+b/u1SHG1veRD8=\", false, function () {\n  return [useStyles];\n});\n\n_c = FileList;\nexport default FileList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileList\");","map":{"version":3,"sources":["/home/pablo/work/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/File_list.js"],"names":["React","useState","useEffect","axios","makeStyles","IconButton","Grid","Checkbox","TextField","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","DashboardIcon","PrintIcon","DeleteIcon","Preview","useStyles","theme","title","flexGrow","marginLeft","spacing","root","marginTop","upload","marginBottom","fullWidth","width","table","margin","maxHeight","paper","model","buttons","numbers","FileList","models","setModels","count","setCount","state","setState","classes","handlerCharge","interval","setInterval","get","then","response","data","catch","e","console","log","clearInterval","handlerDelete","id","delete","value","handleCheckboxClick","event","stopPropagation","sel","handlerNumber","n","number","handlerCancelar","handlerOptimize","arrOfModels","m","push","name","post","handlerPrint","fullName","filename","slice","namelist","items","counter","forEach","nl","responseType","f","Blob","file","File","type","lastModified","Date","now","length","error","map","target"],"mappings":"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","sourcesContent":["import React, { useState , useEffect } from 'react';\nimport axios from 'axios';\n  //general\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Grid, Checkbox} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n  //table\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n  //icons\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PrintIcon from '@material-ui/icons/Print';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport Preview from './Preview';\n\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8),\n  },\n  root:{\n    marginTop:80,\n    flexGrow: 1,\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 350,\n    width: 520\n  \n  },\n  paper: {\n    margin: theme.spacing(2),\n  },\n  model: {\n    marginLeft:theme.spacing(5),\n  },\n  buttons: {\n    marginLeft:theme.spacing(55),\n  },\n  numbers: {\n    width:50\n  },\n\n}));\n\nfunction FileList() {\n\n  const [models, setModels] = useState([]);\n  const [count, setCount] = useState(0);\n  const [state, setState] = useState();\n  //const [del, setDel] = useState(0);\n\n  const classes = useStyles();\n\n  useEffect(() => { \n    handlerCharge()\n  },[]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      axios.get(\"http://mini3dfactory.duckdns.org:3004/api/communication/state\").then(response => { \n        setState(response.data.state)\n      }).catch(e => {\n        console.log(e);\n      });\n    }, 3000);\n    return () => clearInterval(interval);\n  }, []);\n\n\n\n  function handlerDelete(id){\n\n    axios.delete(\"http://mini3dfactory.duckdns.org:3002/api/models/delete/\" + models[id].value).then(response => {\n      handlerCharge()\n    }).catch(e => {\n      console.log(e);\n    });\n\n  };\n\n\n  function handleCheckboxClick(event, id){\n    event.stopPropagation();\n\n      if (models[id].sel === false) {\n          models[id].sel = true;\n          setCount(count + 1)\n\n      } else if (models[id].sel === true) {\n          models[id].sel = false; \n          setCount(count - 1)\n      }\n  };\n\n  function handlerNumber(n,id){\n    if(n !== \"\"){\n      console.log(n)\n      models[id].number = n\n    }\n  }\n\n  function handlerCancelar(){\n\n    axios.get(\"http://mini3dfactory.duckdns.org:3004/api/communication/cancel\").then(response => {\n      // server answer\n    }).catch(e => {\n      console.log(e);\n    });\n\n  }\n\n\n  //function to optimize the .stl models \n  function handlerOptimize(){\n    var arrOfModels = []\n\n    for (let m of models) {\n      if (m.sel === true){\n        arrOfModels.push({name:m.value , number:m.number})\n      }\n    }\n\n    axios.post(\"http://mini3dfactory.duckdns.org:3003/api/optimize\",arrOfModels).then(response => {\n      handlerCharge()\n    }).catch(e => {\n      console.log(e);\n    });\n\n  }\n\n  function handlerPrint(){\n\n    var fullName \n\n    for (let m of models) {\n      if (m.sel === true){\n        fullName = m.value\n      }\n    }\n\n    var filename = fullName.slice(0,-4)\n    \n    axios.post(\"http://mini3dfactory.duckdns.org:3002/api/models/printupload/\"+filename).then(response => {\n      // server answer\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  //function to read all the models that are uploaded on the server\n  function handlerCharge(){\n\n    axios.get(\"http://mini3dfactory.duckdns.org:3002/api/models\").then(function (response){ \n\n          var namelist = response.data;\n          var items = [];\n\n            setModels([])\n     \n          let counter = 0;\n\n          namelist.forEach( nl => {\n\n            axios.get(\"http://mini3dfactory.duckdns.org:3002/api/models/Uploaded_models/\"+nl,{responseType: 'blob'}).then(function (response){ \n\n              const f = new Blob([response.data]);\n              var file = new File([f], nl, {type: \"application/sla\", lastModified: Date.now()});\n\n                items.push({\n                  value: file.name,\n                  sel: false,\n                  file: file,\n                  number: \"1\",\n                  id: counter\n                })\n                counter++\n\n                if(counter === namelist.length){\n                  setModels(items)\n                }\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n            })\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2} direction=\"row\">\n        <Grid container item xs={4} direction=\"column\">\n          <TableContainer component={Paper} className={classes.table}>\n            <Table  aria-label=\"simple table\" stickyHeader>\n              <TableHead>\n                <TableRow>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n                <TableCell>Files on server</TableCell>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {models.map(model =>\n                  <TableRow key={model.id}>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox color=\"primary\" checked={model.sel} onClick={event => handleCheckboxClick(event, model.id)}/>\n                    </TableCell>\n                    <TableCell>  \n                      {model.sel ? \n                        <TextField type={\"number\"} className={classes.numbers} onChange={event => handlerNumber(event.target.value,model.id)} defaultValue=\"1\" id=\"number\" size=\"small\"/>\n                                                : null\n                      }\n                    </TableCell>\n                    <TableCell className={classes.name}>{model.value}</TableCell>\n                    <TableCell>  \n                      <Preview size={50} file={model.file}/>\n                    </TableCell>\n                    <TableCell>  \n                      {model.sel ? \n                        <IconButton color=\"secondary\" aria-label=\"Delete\" onClick={() => handlerDelete(model.id)}>\n                          <DeleteIcon fontSize=\"large\"/>\n                        </IconButton> \n                                                : null\n                      }\n\n                    </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          <Grid container item direction=\"row\" className={classes.buttons} >\n            <IconButton color=\"primary\" disabled={!count} aria-label=\"Optimize\" onClick={handlerOptimize}>\n              <DashboardIcon fontSize=\"large\"/>\n            </IconButton>\n\n            <IconButton  color=\"primary\" disabled={!count} aria-label=\"Optimize\" onClick={handlerPrint}>\n              <PrintIcon fontSize=\"large\"/>\n            </IconButton>\n            \n          </Grid>\n          <Grid item xs={8} >\n       \n          </Grid>\n\n        </Grid>\n    </Grid>\n    </div>\n  );\n}\n\nexport default FileList;\n"]},"metadata":{},"sourceType":"module"}