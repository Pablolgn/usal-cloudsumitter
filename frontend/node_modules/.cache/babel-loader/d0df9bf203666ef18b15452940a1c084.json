{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getArrayLogger = void 0;\n\nconst getArrayLogger = (obj, name) => {\n  if (document.location.search.indexOf('debugVideoStreamer') >= 0) {\n    return {\n      log: (...args) => {\n        if (!obj[name]) {\n          obj[name] = [];\n        }\n\n        switch (args.length) {\n          case 0:\n            return;\n\n          case 1:\n            obj[name].push(args[0]);\n            return;\n\n          default:\n            obj[name].push(args);\n            return;\n        }\n      }\n    };\n  } else {\n    return {\n      log: (...args) => {}\n    };\n  }\n};\n\nexports.getArrayLogger = getArrayLogger;","map":{"version":3,"sources":["../../../../src/replay/components/player/VideoStreamer/common/logger.js"],"names":["getArrayLogger","document","log","obj","args"],"mappings":";;;;;;;AAEO,MAAMA,cAAc,GAAG,CAAA,GAAA,EAAA,IAAA,KAA4B;AACxD,MAAIC,QAAQ,CAARA,QAAAA,CAAAA,MAAAA,CAAAA,OAAAA,CAAAA,oBAAAA,KAAJ,CAAA,EAAiE;AAC/D,WAAO;AACLC,MAAAA,GAAG,EAAE,CAAC,GAAD,IAAA,KAAyB;AAC5B,YAAI,CAACC,GAAG,CAAR,IAAQ,CAAR,EAAgB;AACdA,UAAAA,GAAG,CAAHA,IAAG,CAAHA,GAAAA,EAAAA;AACD;;AACD,gBAAQC,IAAI,CAAZ,MAAA;AACE,eAAA,CAAA;AACE;;AACF,eAAA,CAAA;AACED,YAAAA,GAAG,CAAHA,IAAG,CAAHA,CAAAA,IAAAA,CAAeC,IAAI,CAAnBD,CAAmB,CAAnBA;AACA;;AACF;AACEA,YAAAA,GAAG,CAAHA,IAAG,CAAHA,CAAAA,IAAAA,CAAAA,IAAAA;AACA;AARJ;AAUD;AAfI,KAAP;AADF,GAAA,MAkBO;AACL,WAAO;AAAED,MAAAA,GAAG,EAAE,CAAC,GAAD,IAAA,KAAyB,CAAE;AAAlC,KAAP;AACD;AArBI,CAAA","sourcesContent":["// @flow\n\nexport const getArrayLogger = (obj: any, name: string) => {\n  if (document.location.search.indexOf('debugVideoStreamer') >= 0) {\n    return {\n      log: (...args: Array<any>) => {\n        if (!obj[name]) {\n          obj[name] = [];\n        }\n        switch (args.length) {\n          case 0:\n            return;\n          case 1:\n            obj[name].push(args[0]);\n            return;\n          default:\n            obj[name].push(args);\n            return;\n        }\n      }\n    };\n  } else {\n    return { log: (...args: Array<any>) => {} };\n  }\n};\n"]},"metadata":{},"sourceType":"script"}