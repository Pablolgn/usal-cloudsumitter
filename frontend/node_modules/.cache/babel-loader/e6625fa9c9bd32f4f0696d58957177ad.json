{"ast":null,"code":"var _jsxFileName = \"/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Box.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport * as THREE from \"three\";\nimport { Canvas, Children } from \"react-three-fiber\";\n\nconst Box = () => {\n  const [hovered, setHovered] = useState(false);\n  const [active, setActive] = useState(false);\n  const props = useSpring({\n    scale: active ? [1.3, 1.3, 1.3] : [1, 1, 1],\n    color: hovered ? \"green\" : \"grey\"\n  });\n  return (// mesh is what hold the object  \n    React.createElement(\"mesh\", {\n      onPointerOver: () => setHovered(true),\n      onPointerOut: () => setHovered(false),\n      onClick: () => setActive(!active),\n      scale: props.scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"boxBufferGeometry\", {\n      attach: \"geometry\",\n      args: [1.5, 1.5, 1.5],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(\"meshPhysicalMaterial\", {\n      attach: \"material\",\n      color: props.color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }))\n  );\n};","map":{"version":3,"sources":["/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Box.js"],"names":["React","Typography","THREE","Canvas","Children","Box","hovered","setHovered","useState","active","setActive","props","useSpring","scale","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAgC,mBAAhC;;AAGA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBF,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMG,KAAK,GAAGC,SAAS,CAAC;AACxBC,IAAAA,KAAK,EAAEJ,MAAM,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAH,GAAmB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CADR;AAExBK,IAAAA,KAAK,EAAER,OAAO,GAAG,OAAH,GAAa;AAFH,GAAD,CAAvB;AAKA,SACA;AACA;AACA,MAAA,aAAa,EAAE,MAAMC,UAAU,CAAC,IAAD,CAD/B;AAEA,MAAA,YAAY,EAAE,MAAMA,UAAU,CAAC,KAAD,CAF9B;AAGA,MAAA,OAAO,EAAE,MAAMG,SAAS,CAAC,CAACD,MAAF,CAHxB;AAIA,MAAA,KAAK,EAAEE,KAAK,CAACE,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI;AAAmB,MAAA,MAAM,EAAC,UAA1B;AAAqC,MAAA,IAAI,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI;AAAsB,MAAA,MAAM,EAAC,UAA7B;AAAwC,MAAA,KAAK,EAAEF,KAAK,CAACG,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ;AAFA;AAYI,CApBR","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport * as THREE from \"three\";\nimport { Canvas, Children} from \"react-three-fiber\";\n\n\nconst Box = () => {\n    const [hovered, setHovered] = useState(false) \n    const [active, setActive] = useState(false) \n    const props = useSpring({ \n    scale: active ? [1.3,1.3,1.3] : [1,1,1], \n    color: hovered ? \"green\" : \"grey\",\n     })\n     \n    return(\n    // mesh is what hold the object  \n    <mesh  \n    onPointerOver={() => setHovered(true)}  \n    onPointerOut={() => setHovered(false)}  \n    onClick={() => setActive(!active)}  \n    scale={props.scale}>    \n    \n        <boxBufferGeometry attach=\"geometry\" args={[1.5,1.5,1.5]} />\n        <meshPhysicalMaterial attach=\"material\" color={props.color} />  \n    \n       </mesh> )\n       }"]},"metadata":{},"sourceType":"module"}