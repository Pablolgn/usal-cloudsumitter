{"ast":null,"code":"var _jsxFileName = \"/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Upload.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Button, Grid } from '@material-ui/core';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    padding: theme.spacing(2)\n  },\n  root: {\n    marginTop: 80,\n    flexGrow: 1\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  fullWidth: {\n    width: '100%'\n  }\n}));\n\nfunction Upload() {\n  const classes = useStyles();\n\n  function handleUpload(e) {\n    const data = new FormData();\n    var models = Array.from(e.target.files);\n\n    for (let m of models) {\n      data.append('file', m);\n      axios.post(\"http://localhost:3002/upload\", data).then(response => {// server answer\n      }).catch(e => {\n        console.log(e);\n      });\n      console.log(m);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    lignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Uploaded files\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"File upload\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    component: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Upload File\", React.createElement(\"input\", {\n    type: \"file\",\n    style: {\n      display: \"none\"\n    },\n    multiple: true,\n    accept: \".pdf,.obj,.stl\",\n    onChange: handleUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))), React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Uploaded files\")), React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"canvas\"))));\n}\n\nexport default Upload;","map":{"version":3,"sources":["/home/pablo/go/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/Upload.js"],"names":["React","makeStyles","Typography","Button","Grid","axios","Paper","useStyles","theme","title","flexGrow","padding","spacing","root","marginTop","content","fullWidth","width","Upload","classes","handleUpload","e","data","FormData","models","Array","from","target","files","m","append","post","then","response","catch","console","log","paper","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Button, Grid } from '@material-ui/core';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    padding: theme.spacing(2),\n  },\n  root:{\n    marginTop:80,\n    flexGrow: 1,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  \n}));\n\nfunction Upload() {\n  const classes = useStyles();\n\n\n  function handleUpload(e) {\n    const data = new FormData()\n\n    var models = Array.from(e.target.files)\n\n    for (let m of models) {\n\n      data.append('file', m)\n\n      axios.post(\"http://localhost:3002/upload\",data).then(response => {\n        // server answer\n      }).catch(e => {\n        console.log(e);\n      });\n\n      console.log(m);\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}   container\n        direction=\"row\"\n        justify=\"center\"\n        lignItems=\"center\">\n\n        <Grid item xs={3} direction=\"column\">\n        <Paper className={classes.paper}>Uploaded files</Paper>\n          <div>\n          <Typography variant='h6'>File upload</Typography>\n          </div>\n          <div>\n          <Button variant=\"contained\" component=\"label\">\n              Upload File\n              <input\n                  type=\"file\"\n                  style={{ display: \"none\" }}\n                  multiple\n                  accept=\".pdf,.obj,.stl\"\n                  onChange={handleUpload}\n              />\n          </Button>\n          </div>\n            <Paper className={classes.paper}>Uploaded files</Paper>\n        </Grid>\n        <Grid item xs={9}>\n          <Paper className={classes.paper}>canvas</Paper>\n        </Grid>\n      </Grid>\n    </div>\n\n\n\n    \n  );\n}\n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}