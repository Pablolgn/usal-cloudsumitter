{"ast":null,"code":"var _jsxFileName = \"/home/pablo/work/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/STLDisplay.js\";\nimport React, { useState, useEffect } from 'react';\nimport { STLViewer } from 'react-stl-obj-viewer';\nimport { IconButton, Collapse, Button, Grid, Checkbox } from '@material-ui/core';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport { GithubPicker } from 'react-color';\n\nfunction STLDisplay(props) {\n  const [aux, setaux] = useState([]);\n  const [button, setbutton] = useState(false);\n  const [backColor] = useState(\"#b0b0b0\");\n  const [modelColor, setmodelColor] = useState(\"#0a43f5\");\n  useEffect(() => {\n    setaux([props.file]);\n    setbutton(true);\n    props.setUnavailable(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.file]);\n\n  function deleteid() {\n    props.setAvailable();\n    setaux([]);\n    setbutton(false);\n  }\n\n  function changeHandler(color) {\n    setmodelColor(color.hex);\n    console.log(color.hex);\n  }\n\n  function pt() {\n    setmodelColor(\"00ffe0\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: pt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"pene\"), React.createElement(GithubPicker, {\n    onChange: changeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Collapse, {\n    in: button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"Display\",\n    onClick: deleteid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(BackspaceIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })))), console.log(modelColor), aux.map(auxModel => React.createElement(STLViewer, {\n    key: auxModel.id + 256,\n    width: 800,\n    height: 380,\n    sceneClassName: \"test-scene\",\n    file: auxModel,\n    className: \"stl\",\n    modelColor: modelColor,\n    backgroundColor: backColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })));\n}\n\n;\nexport default STLDisplay;","map":{"version":3,"sources":["/home/pablo/work/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/STLDisplay.js"],"names":["React","useState","useEffect","STLViewer","IconButton","Collapse","Button","Grid","Checkbox","BackspaceIcon","GithubPicker","STLDisplay","props","aux","setaux","button","setbutton","backColor","modelColor","setmodelColor","file","setUnavailable","deleteid","setAvailable","changeHandler","color","hex","console","log","pt","map","auxModel","id"],"mappings":";AAAC,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAAQC,SAAR,QAAwB,sBAAxB;AACA,SAAQC,UAAR,EAAoBC,QAApB,EAA8BC,MAA9B,EAAsCC,IAAtC,EAA4CC,QAA5C,QAA2D,mBAA3D;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAEzB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACgB,SAAD,IAAehB,QAAQ,CAAC,SAAD,CAA7B;AACA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA+BlB,QAAQ,CAAC,SAAD,CAA7C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACfY,IAAAA,MAAM,CAAC,CAACF,KAAK,CAACQ,IAAP,CAAD,CAAN;AACAJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAJ,IAAAA,KAAK,CAACS,cAAN,GAHe,CAIf;AACA,GALQ,EAKP,CAACT,KAAK,CAACQ,IAAP,CALO,CAAT;;AAQA,WAASE,QAAT,GAAmB;AAClBV,IAAAA,KAAK,CAACW,YAAN;AACAT,IAAAA,MAAM,CAAC,EAAD,CAAN;AACAE,IAAAA,SAAS,CAAC,KAAD,CAAT;AACA;;AAED,WAASQ,aAAT,CAAuBC,KAAvB,EAA6B;AAC5BN,IAAAA,aAAa,CAACM,KAAK,CAACC,GAAP,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,GAAlB;AACA;;AAED,WAASG,EAAT,GAAa;AACZV,IAAAA,aAAa,CAAC,QAAD,CAAb;AACA;;AAGF,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,SAAS,EAAC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEU,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,EAEJ,oBAAC,YAAD;AACC,IAAA,QAAQ,EAAGL,aADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFI,EAOL,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAET,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAA4B,kBAAW,SAAvC;AAAiD,IAAA,OAAO,EAAEO,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADD,CAPK,CADN,EAgBEK,OAAO,CAACC,GAAR,CAAYV,UAAZ,CAhBF,EAkBEL,GAAG,CAACiB,GAAJ,CAAQC,QAAQ,IAChB,oBAAC,SAAD;AACA,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAT,GAAY,GADjB;AAEA,IAAA,KAAK,EAAE,GAFP;AAGA,IAAA,MAAM,EAAE,GAHR;AAIA,IAAA,cAAc,EAAC,YAJf;AAKA,IAAA,IAAI,EAAED,QALN;AAMA,IAAA,SAAS,EAAC,KANV;AAOA,IAAA,UAAU,EAAEb,UAPZ;AAQA,IAAA,eAAe,EAAED,SARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAlBF,CADD;AAmCE;;AAAA;AACF,eAAeN,UAAf","sourcesContent":["\timport React, { useState,useEffect } from 'react';\n\timport {STLViewer} from 'react-stl-obj-viewer';\n\timport {IconButton, Collapse, Button, Grid, Checkbox} from '@material-ui/core';\n\timport BackspaceIcon from '@material-ui/icons/Backspace';\n\timport { GithubPicker } from 'react-color';\n\t\n\n\tfunction STLDisplay(props){\n\t\n\t\tconst [aux, setaux] = useState([]);\n\t\tconst [button, setbutton] = useState(false);\n\t\tconst [backColor,] = useState(\"#b0b0b0\");\n\t\tconst [modelColor, setmodelColor ] = useState(\"#0a43f5\");\n\n\t\tuseEffect(() => {   \n\t\t\tsetaux([props.file])\n\t\t\tsetbutton(true)\n\t\t\tprops.setUnavailable()\n\t\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t},[props.file]);\n\n\t\t\n\t\tfunction deleteid(){\n\t\t\tprops.setAvailable()\n\t\t\tsetaux([])\n\t\t\tsetbutton(false)\n\t\t}\n\n\t\tfunction changeHandler(color){\n\t\t\tsetmodelColor(color.hex)\n\t\t\tconsole.log(color.hex)\n\t\t}\n\n\t\tfunction pt(){\n\t\t\tsetmodelColor(\"00ffe0\")\n\t\t}\n\n\t\n\treturn(\n\t\t<div>\n      \t\t<Grid container spacing={2} direction=\"row\">\n\t\t\t\t  <Button onClick={pt}>pene</Button>\n\t\t\t\t<GithubPicker\n\t\t\t\t\tonChange={ changeHandler }\n\t\t\t\t/>\n\n\t\t\t\n\t\t\t<Collapse in={button}>\n\t\t\t\t<IconButton color=\"primary\" aria-label=\"Display\" onClick={deleteid}>\n\t\t\t\t<BackspaceIcon fontSize=\"large\"/>\n\t\t\t\t</IconButton>\n\t\t\t</Collapse>\n\n\t\t\t</Grid>\n\n\t\t\t{console.log(modelColor)}\n\t\n\t\t\t{aux.map(auxModel=>\n\t\t\t\t<STLViewer\n\t\t\t\tkey={auxModel.id+256}\n\t\t\t\twidth={800}\n\t\t\t\theight={380}\n\t\t\t\tsceneClassName=\"test-scene\"\n\t\t\t\tfile={auxModel}\n\t\t\t\tclassName=\"stl\"\n\t\t\t\tmodelColor={modelColor}\n\t\t\t\tbackgroundColor={backColor}\n\t\t\t\t/> \n\t\t\t)\n\t\t\t}\n\n\n\t\t</div>\n\t)};\n\texport default STLDisplay;\n"]},"metadata":{},"sourceType":"module"}