{"ast":null,"code":"var _jsxFileName = \"/home/pablo/work/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/File_list.js\";\nimport React, { useState, useEffect } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Grid, Checkbox, Button } from '@material-ui/core';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Preview from './Preview';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8)\n  },\n  root: {\n    marginTop: 80,\n    flexGrow: 1\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3)\n  },\n  fullWidth: {\n    width: '100%'\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 350,\n    width: 500\n  },\n  paper: {\n    margin: theme.spacing(2)\n  },\n  model: {\n    marginLeft: theme.spacing(5)\n  },\n  buttons: {\n    marginLeft: theme.spacing(40)\n  }\n}));\n\nfunction FileList() {\n  const [models, setModels] = useState([]);\n  const [count, setCount] = useState(0);\n  const classes = useStyles();\n  useEffect(() => {\n    handlerCharge();\n  }, []);\n\n  function handleDelete(id) {\n    /*\n      axios.get(\"http://localhost:3002/delete\",models[id].value).then(response => {\n        handlerCharge()\n      }).catch(e => {\n        console.log(e);\n      });\n      */\n    console.log(id);\n  }\n\n  ;\n\n  function handleCheckboxClick(event, id) {\n    event.stopPropagation();\n\n    if (models[id].sel === false) {\n      models[id].sel = true;\n      setCount(count + 1);\n    } else if (models[id].sel === true) {\n      models[id].sel = false;\n      setCount(count - 1);\n    }\n  }\n\n  ; //function to optimize the .stl models \n\n  function handlerOptimize() {\n    let arrOfModels = [];\n    /*\n        for (let m of models) {\n          arrOfModels.push({name:m.value , number:1})\n        }*/\n\n    arrOfModels.push({\n      name: \"xyz.stl\",\n      number: 4\n    });\n    arrOfModels.push({\n      name: \"2.stl\",\n      number: 2\n    });\n    axios.post(\"http://localhost:3002/optimize\", arrOfModels).then(response => {\n      handlerCharge();\n    }).catch(e => {\n      console.log(e);\n    });\n  } //function to read all the models that are uploaded on the server\n\n\n  function handlerCharge() {\n    axios.get(\"http://localhost:3002/req\").then(function (response) {\n      var namelist = response.data;\n      var items = [];\n      let counter = 0;\n      namelist.forEach(nl => {\n        axios.get(\"http://localhost:3002/filelist/\" + nl, {\n          responseType: 'blob'\n        }).then(function (response) {\n          const f = new Blob([response.data]);\n          var file = new File([f], nl, {\n            type: \"application/sla\",\n            lastModified: Date.now()\n          });\n          items.push({\n            value: file.name,\n            sel: false,\n            file: file,\n            id: counter\n          });\n          counter++;\n\n          if (counter === namelist.length) {\n            setModels(items);\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 4,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    component: Paper,\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    stickyHeader: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Files Uploaded on the server\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, models.map(model => React.createElement(TableRow, {\n    key: model.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    className: classes.check,\n    checked: model.sel,\n    onClick: event => handleCheckboxClick(event, model.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  })), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, model.value), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(Preview, {\n    size: 50,\n    file: model.file,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  })), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, model.sel ? React.createElement(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"Display\",\n    onClick: handleDelete(model.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  })) : null)))))), React.createElement(Button, {\n    onClick: handlerOptimize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"heeyyy\"))));\n}\n\nexport default FileList;","map":{"version":3,"sources":["/home/pablo/work/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/File_list.js"],"names":["React","useState","useEffect","DeleteIcon","makeStyles","IconButton","Grid","Checkbox","Button","axios","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Preview","useStyles","theme","title","flexGrow","marginLeft","spacing","root","marginTop","upload","marginBottom","fullWidth","width","table","margin","maxHeight","paper","model","buttons","FileList","models","setModels","count","setCount","classes","handlerCharge","handleDelete","id","console","log","handleCheckboxClick","event","stopPropagation","sel","handlerOptimize","arrOfModels","push","name","number","post","then","response","catch","e","get","namelist","data","items","counter","forEach","nl","responseType","f","Blob","file","File","type","lastModified","Date","now","value","length","error","map","check"],"mappings":"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","sourcesContent":["import React, { useState , useEffect} from 'react';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Grid, Checkbox, Button} from '@material-ui/core';\n\nimport axios from 'axios';\n\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Preview from './Preview';\n\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8),\n  },\n  root:{\n    marginTop:80,\n    flexGrow: 1,\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 350,\n    width: 500\n  },\n  paper: {\n    margin: theme.spacing(2),\n  },\n  model: {\n    marginLeft:theme.spacing(5),\n  },\n  buttons: {\n    marginLeft:theme.spacing(40),\n  },\n\n\n}));\n\nfunction FileList() {\n\n  const [models, setModels] = useState([]);\n  const [count, setCount] = useState(0);\n\n  const classes = useStyles();\n\n\n  useEffect(() => { \n    handlerCharge()\n},[]);\n\n\n\n\nfunction handleDelete(id){\n/*\n  axios.get(\"http://localhost:3002/delete\",models[id].value).then(response => {\n    handlerCharge()\n  }).catch(e => {\n    console.log(e);\n  });\n  */\nconsole.log(id)\n};\n\n\n  function handleCheckboxClick(event, id){\n    event.stopPropagation();\n\n      if (models[id].sel === false) {\n          models[id].sel = true;\n          setCount(count + 1)\n\n      } else if (models[id].sel === true) {\n          models[id].sel = false; \n          setCount(count - 1)\n      }\n  };\n\n//function to optimize the .stl models \n\n  function handlerOptimize(){\n    \n    let arrOfModels = []\n/*\n    for (let m of models) {\n      arrOfModels.push({name:m.value , number:1})\n    }*/\n    arrOfModels.push({name:\"xyz.stl\", number: 4})\n    arrOfModels.push({name:\"2.stl\", number: 2})\n\n    axios.post(\"http://localhost:3002/optimize\",arrOfModels).then(response => {\n      handlerCharge()\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n\n  //function to read all the models that are uploaded on the server\n  function handlerCharge(){\n\n    axios.get(\"http://localhost:3002/req\").then(function (response){ \n\n          var namelist = response.data;\n          var items = [];\n      \n          let counter = 0;\n\n          namelist.forEach( nl => {\n\n            axios.get(\"http://localhost:3002/filelist/\"+nl,{responseType: 'blob'}).then(function (response){ \n\n              const f = new Blob([response.data]);\n              var file = new File([f], nl, {type: \"application/sla\", lastModified: Date.now()});\n\n                items.push({\n                  value: file.name,\n                  sel: false,\n                  file: file,\n                  id: counter\n                })\n                counter++\n\n                if(counter === namelist.length){\n                  setModels(items)\n                }\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n            })\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n}\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2} direction=\"row\">\n        <Grid container item xs={4} direction=\"column\">\n          <TableContainer component={Paper} className={classes.table}>\n            <Table  aria-label=\"simple table\" stickyHeader>\n              <TableHead>\n                <TableRow>\n                <TableCell></TableCell>\n                <TableCell>Files Uploaded on the server</TableCell>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {models.map(model =>\n                  <TableRow key={model.id}>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox className={classes.check} checked={model.sel} onClick={event => handleCheckboxClick(event, model.id)}/>\n                    </TableCell>\n                    <TableCell>{model.value}</TableCell>\n                    <TableCell>  \n                      <Preview size={50} file={model.file}/>\n                    </TableCell>\n                    <TableCell>  \n                      {model.sel ? \n                        <IconButton color=\"primary\" aria-label=\"Display\" onClick={handleDelete(model.id)}>\n                          <DeleteIcon fontSize=\"large\"/>\n                        </IconButton> : null\n                      }\n                    </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <Button onClick={handlerOptimize}>\n            heeyyy\n          </Button>\n        </Grid>\n    </Grid>\n    </div>\n  );\n}\n\n\nexport default FileList;\n"]},"metadata":{},"sourceType":"module"}