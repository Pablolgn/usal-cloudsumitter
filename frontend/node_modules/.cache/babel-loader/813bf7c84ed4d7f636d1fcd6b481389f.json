{"ast":null,"code":"var _jsxFileName = \"/home/pablo/work/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/File_list.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Button } from '@material-ui/core';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Preview from './Preview';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8)\n  },\n  root: {\n    marginTop: 80,\n    flexGrow: 1\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3)\n  },\n  fullWidth: {\n    width: '100%'\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 270\n  },\n  paper: {\n    margin: theme.spacing(2)\n  },\n  model: {\n    marginLeft: theme.spacing(5)\n  },\n  buttons: {\n    marginLeft: theme.spacing(40)\n  }\n}));\n\nfunction FileList() {\n  const [models, setModels] = useState([]);\n  const classes = useStyles();\n\n  function handlerCharge() {\n    axios.get(\"http://localhost:3002/req\").then(function (response) {\n      var namelist = response.data;\n      let items = [];\n      let aux = [];\n      let counter = 0;\n      namelist.forEach(nl => {\n        axios.get(\"http://localhost:3002/filelist/\" + nl, {\n          responseType: 'blob'\n        }).then(function (response) {\n          const blob = new Blob([response.data]);\n          var file = new File([blob], nl, {\n            type: \"application/sla\",\n            lastModified: Date.now()\n          });\n          items.push({\n            value: file.name,\n            sel: false,\n            file: file,\n            id: counter\n          });\n          counter++;\n        }).catch(function (error) {\n          console.log(error);\n        });\n      });\n      console.log(items);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 4,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    component: Paper,\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    stickyHeader: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Files Uploaded on the server\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, models.map(model => React.createElement(TableRow, {\n    key: model.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Preview, {\n    size: 50,\n    file: model.file,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })))))))), React.createElement(Button, {\n    onClick: handlerCharge,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Request\"), models.map(model => React.createElement(Preview, {\n    size: 50,\n    file: model,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }))));\n}\n\nexport default FileList;\n/*\n<TableBody>\n{models.map(model =>\n  <TableRow key={model.length}>\n    <TableCell>{model}</TableCell>\n  </TableRow>\n)}\n</TableBody>\n*/","map":{"version":3,"sources":["/home/pablo/work/src/gitlab.com/Pablolgn/usal-cloudsubmitter/frontend/src/components/File_list.js"],"names":["React","useState","makeStyles","Grid","Button","axios","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Preview","useStyles","theme","title","flexGrow","marginLeft","spacing","root","marginTop","upload","marginBottom","fullWidth","width","table","margin","maxHeight","paper","model","buttons","FileList","models","setModels","classes","handlerCharge","get","then","response","namelist","data","items","aux","counter","forEach","nl","responseType","blob","Blob","file","File","type","lastModified","Date","now","push","value","name","sel","id","catch","error","console","log","map"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Button} from '@material-ui/core';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Preview from './Preview';\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(8),\n  },\n  root:{\n    marginTop:80,\n    flexGrow: 1,\n  },\n  upload: {\n    flexGrow: 1,\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(12),\n    marginBottom: theme.spacing(3),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  table: {\n    margin: theme.spacing(2),\n    maxHeight: 270,\n  },\n  paper: {\n    margin: theme.spacing(2),\n  },\n  model: {\n    marginLeft:theme.spacing(5),\n  },\n  buttons: {\n    marginLeft:theme.spacing(40),\n  },\n\n\n}));\n\nfunction FileList() {\n\n  const [models, setModels] = useState([]);\n\n  const classes = useStyles();\n\n  function handlerCharge(){\n\n    axios.get(\"http://localhost:3002/req\").then(function (response){ \n\n          var namelist = response.data;\n          let items = [];\n          let aux = [];\n \n          let counter = 0;\n\n          namelist.forEach( nl => {\n\n            axios.get(\"http://localhost:3002/filelist/\"+nl,{responseType: 'blob'}).then(function (response){ \n\n              const blob = new Blob([response.data]);\n              var file = new File([blob], nl, {type: \"application/sla\", lastModified: Date.now()});\n\n              items.push({\n                value: file.name,\n                sel: false,\n                file: file,\n                id: counter\n              })\n              counter++\n              \n\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n            })\n            console.log(items)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n\n\n}\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2} direction=\"row\">\n        <Grid container item xs={4} direction=\"column\">\n          <TableContainer component={Paper} className={classes.table}>\n            <Table  aria-label=\"simple table\" stickyHeader>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Files Uploaded on the server</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n              {models.map(model =>\n                  <TableRow key={model.id}>\n                    <TableCell>  \n                      <Preview size={50} file={model.file}/>\n                    </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Button onClick={handlerCharge} >\n            Request\n        </Button>\n        {models.map(model =>\n                      <Preview size={50} file={model}/>\n        )}\n    </Grid>\n    </div>\n  );\n}\n\n\n\nexport default FileList;\n/*\n<TableBody>\n{models.map(model =>\n  <TableRow key={model.length}>\n    <TableCell>{model}</TableCell>\n  </TableRow>\n)}\n</TableBody>\n*/"]},"metadata":{},"sourceType":"module"}