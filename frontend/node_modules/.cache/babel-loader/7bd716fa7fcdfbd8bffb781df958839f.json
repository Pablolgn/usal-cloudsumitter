{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _common = require(\"../../common\");\n\nvar _Slider = _interopRequireDefault(require(\"../../generic/Slider/Slider\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst className = 'timeline';\nconst trackClassName = 'timeline-track';\nconst handleClassName = 'timeline-handle';\n\nclass Timeline extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"timeoutId\", void 0);\n\n    _defineProperty(this, \"handleSliderChange\", position => {\n      if (this.props.setProperties) {\n        this.props.setProperties({\n          position\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleDrag\", () => {\n      this.setState({\n        isDragging: true\n      });\n\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n      }\n\n      this.timeoutId = setTimeout(() => {\n        this.setState({\n          isDragging: false\n        });\n        this.timeoutId = null;\n      }, 800);\n    });\n\n    this.state = {\n      isDragging: false\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          position = _this$props.position,\n          duration = _this$props.duration,\n          isSeeking = _this$props.isSeeking,\n          label = _this$props.label,\n          classNamePrefix = _this$props.classNamePrefix,\n          children = _this$props.children,\n          handleContent = _this$props.handleContent,\n          trackContent = _this$props.trackContent,\n          reduceDragGlitch = _this$props.reduceDragGlitch;\n    return /*#__PURE__*/React.createElement(_Slider.default, {\n      label: label,\n      value: position,\n      maxValue: duration,\n      isUpdateBlocked: isSeeking || this.state.isDragging,\n      handleContent: handleContent,\n      trackContent: trackContent,\n      onValueChange: this.handleSliderChange,\n      onDrag: reduceDragGlitch ? this.handleDrag : undefined,\n      classNamePrefix: classNamePrefix,\n      className: className,\n      trackClassName: trackClassName,\n      handleClassName: handleClassName\n    }, children);\n  }\n\n}\n\n_defineProperty(Timeline, \"defaultProps\", {\n  classNamePrefix: _common.defaultClassNamePrefix,\n  reduceDragGlitch: true\n});\n\n_defineProperty(Timeline, \"streamStateKeysForObservation\", ['position', 'duration', 'isSeeking']);\n\nTimeline.displayName = 'Timeline';\nvar _default = Timeline;\nexports.default = _default;","map":{"version":3,"sources":["../../../src/replay/components/controls/Timeline/Timeline.js"],"names":["className","trackClassName","handleClassName","Timeline","React","classNamePrefix","defaultClassNamePrefix","reduceDragGlitch","constructor","isDragging","position","clearTimeout","setTimeout","componentWillUnmount","render","duration","isSeeking","label","children","handleContent","trackContent"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { defaultClassNamePrefix } from '../../common';\nimport type { CommonProps } from '../../common';\nimport Slider from '../../generic/Slider/Slider';\nimport type { StreamStateKeysForObservation } from '../../player/PlayerController/ControllerContext';\n\ntype Props = CommonProps & {\n  /** ⇘︎ The current playback position in seconds (with decimals). A value between 0 and duration. */\n  position?: number,\n  /** ⇘︎ The stream's duration or seekable range in seconds (with decimals). */\n  duration?: number,\n  /** ⇘︎ True if a seeking operation is ongoing. This prop is used by the component to avoid glitching while dragging. */\n  isSeeking?: boolean,\n  /** Elements that will display on top of the timeline slider track, but below the timeline handle. */\n  children?: React.Node,\n  /** Can be set for custom graphics or content in the slider handle. */\n  handleContent?: React.Node,\n  /** Can be set for custom graphics or content representing the slider track. */\n  trackContent?: React.Node,\n  /** ⇗ If the volume slider handle position is changed, this callback is invoked with { position: newPosition } */\n  setProperties?: ({ position: number }) => void,\n  /** If set to false, glitches after dragging completes will occur, while the stream reports a position before seeking is performed. When true glitches are prevented by activating a timer for a small time after dragging has completed.*/\n  reduceDragGlitch?: boolean\n};\n\ntype State = {\n  isDragging: boolean\n};\n\nconst className = 'timeline';\nconst trackClassName = 'timeline-track';\nconst handleClassName = 'timeline-handle';\n\nclass Timeline extends React.Component<Props, State> {\n  static defaultProps = {\n    classNamePrefix: defaultClassNamePrefix,\n    reduceDragGlitch: true\n  };\n\n  static streamStateKeysForObservation: StreamStateKeysForObservation = ['position', 'duration', 'isSeeking'];\n\n  timeoutId: ?TimeoutID;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { isDragging: false };\n  }\n\n  handleSliderChange = (position: number) => {\n    if (this.props.setProperties) {\n      this.props.setProperties({ position });\n    }\n  };\n\n  handleDrag = () => {\n    this.setState({ isDragging: true });\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n    this.timeoutId = setTimeout(() => {\n      this.setState({ isDragging: false });\n      this.timeoutId = null;\n    }, 800);\n  };\n\n  componentWillUnmount() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n  }\n\n  render() {\n    const {\n      position,\n      duration,\n      isSeeking,\n      label,\n      classNamePrefix,\n      children,\n      handleContent,\n      trackContent,\n      reduceDragGlitch\n    } = this.props;\n    return (\n      <Slider\n        label={label}\n        value={position}\n        maxValue={duration}\n        isUpdateBlocked={isSeeking || this.state.isDragging}\n        handleContent={handleContent}\n        trackContent={trackContent}\n        onValueChange={this.handleSliderChange}\n        onDrag={reduceDragGlitch ? this.handleDrag : undefined}\n        classNamePrefix={classNamePrefix}\n        className={className}\n        trackClassName={trackClassName}\n        handleClassName={handleClassName}>\n        {children}\n      </Slider>\n    );\n  }\n}\n\nTimeline.displayName = 'Timeline';\nexport default Timeline;\n"]},"metadata":{},"sourceType":"script"}