{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _common = require(\"../../common\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst baseClassName = 'button';\n\nconst selectClasses = classes => classes.button;\n\nclass Button extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleClick\", () => this.props.onClick && this.props.onClick());\n\n    _defineProperty(this, \"handleKeyDown\", (0, _common.getKeyboardShortcutBlocker)(['Enter', ' ']));\n\n    _defineProperty(this, \"handleKeyUp\", keyboardEvent => {\n      if (keyboardEvent.key === 'Enter' || keyboardEvent.key === ' ') {\n        keyboardEvent.preventDefault();\n        this.handleClick();\n      }\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          label = _this$props.label,\n          className = _this$props.className,\n          classNamePrefix = _this$props.classNamePrefix,\n          classes = _this$props.classes,\n          content = _this$props.content;\n    const classNames = (0, _common.hydrateClassNames)({\n      classes,\n      selectClasses,\n      classNames: [baseClassName, className],\n      classNamePrefix\n    }); // buildClassNames(useDefaultClassNaming, classNamePrefix, className, baseClassName);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      title: label,\n      onClick: this.handleClick,\n      onKeyDown: this.handleKeyDown,\n      onKeyUp: this.handleKeyUp,\n      className: classNames,\n      role: \"button\",\n      tabIndex: 0\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      tabIndex: -1\n    }, content));\n  }\n\n}\n\n_defineProperty(Button, \"defaultProps\", {\n  useDefaultClassNaming: true\n});\n\nvar _default = Button;\nexports.default = _default;","map":{"version":3,"sources":["../../../src/replay/components/generic/Button/Button.js"],"names":["baseClassName","selectClasses","classes","Button","React","useDefaultClassNaming","keyboardEvent","render","label","className","classNamePrefix","content","classNames"],"mappings":";;;;;;;AACA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,MAAMA,aAAa,GAAnB,QAAA;;AACA,MAAMC,aAAa,GAAGC,OAAO,IAAIA,OAAO,CAAxC,MAAA;;AAEA,MAAA,MAAA,SAAqBE,KAAK,CAA1B,SAAA,CAA4C;AAAA,EAAA,WAAA,CAAA,GAAA,IAAA,EAAA;AAAA,UAAA,GAAA,IAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,aAAA,EAK5B,MAAM,KAAA,KAAA,CAAA,OAAA,IAAsB,KAAA,KAAA,CALA,OAKA,EALA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,eAAA,EAO1B,CAAA,GAAA,OAAA,CAAA,0BAAA,EAA2B,CAAA,OAAA,EAPD,GAOC,CAA3B,CAP0B,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,aAAA,EAS3BE,aAAD,IAAkC;AAC9C,UAAIA,aAAa,CAAbA,GAAAA,KAAAA,OAAAA,IAAiCA,aAAa,CAAbA,GAAAA,KAArC,GAAA,EAAgE;AAC9DA,QAAAA,aAAa,CAAbA,cAAAA;AACA,aAAA,WAAA;AACD;AAbuC,KAAA,CAAA;AAAA;;AAgB1CC,EAAAA,MAAM,GAAG;AAAA,UAAA,WAAA,GACgE,KADhE,KAAA;AAAA,UACCC,KADD,GAAA,WAAA,CAAA,KAAA;AAAA,UACQC,SADR,GAAA,WAAA,CAAA,SAAA;AAAA,UACmBC,eADnB,GAAA,WAAA,CAAA,eAAA;AAAA,UACoCR,OADpC,GAAA,WAAA,CAAA,OAAA;AAAA,UAC6CS,OAD7C,GAAA,WAAA,CAAA,OAAA;AAEP,UAAMC,UAAU,GAAG,CAAA,GAAA,OAAA,CAAA,iBAAA,EAAkB;AAAA,MAAA,OAAA;AAAA,MAAA,aAAA;AAGnCA,MAAAA,UAAU,EAAE,CAAA,aAAA,EAHuB,SAGvB,CAHuB;AAInCF,MAAAA;AAJmC,KAAlB,CAAnB,CAFO,CAOH;;AACJ,WAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EADP,KAAA;AAEE,MAAA,OAAO,EAAE,KAFX,WAAA;AAGE,MAAA,SAAS,EAAE,KAHb,aAAA;AAIE,MAAA,OAAO,EAAE,KAJX,WAAA;AAKE,MAAA,SAAS,EALX,UAAA;AAME,MAAA,IAAI,EANN,QAAA;AAOE,MAAA,QAAQ,EAAE;AAPZ,KAAA,EAAA,aAQE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,QAAQ,EAAE,CAAC;AAAhB,KAAA,EATJ,OASI,CARF,CADF;AAYD;;AApCyC;;gBAAtCP,M,kBACkB;AACpBE,EAAAA,qBAAqB,EAAE;AADH,C;;eAsCTF,M","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { type CommonGenericProps, getKeyboardShortcutBlocker, hydrateClassNames } from '../../common';\n\ntype Props = CommonGenericProps & {\n  label?: string,\n  content?: React.Node,\n  onClick?: () => void\n};\n\nconst baseClassName = 'button';\nconst selectClasses = classes => classes.button;\n\nclass Button extends React.Component<Props> {\n  static defaultProps = {\n    useDefaultClassNaming: true\n  };\n\n  handleClick = () => this.props.onClick && this.props.onClick();\n\n  handleKeyDown = getKeyboardShortcutBlocker(['Enter', ' ']);\n\n  handleKeyUp = (keyboardEvent: KeyboardEvent) => {\n    if (keyboardEvent.key === 'Enter' || keyboardEvent.key === ' ') {\n      keyboardEvent.preventDefault();\n      this.handleClick();\n    }\n  };\n\n  render() {\n    const { label, className, classNamePrefix, classes, content }: Props = this.props;\n    const classNames = hydrateClassNames({\n      classes,\n      selectClasses,\n      classNames: [baseClassName, className],\n      classNamePrefix\n    }); // buildClassNames(useDefaultClassNaming, classNamePrefix, className, baseClassName);\n    return (\n      <div\n        title={label}\n        onClick={this.handleClick}\n        onKeyDown={this.handleKeyDown}\n        onKeyUp={this.handleKeyUp}\n        className={classNames}\n        role=\"button\"\n        tabIndex={0}>\n        <div tabIndex={-1}>{content}</div>\n      </div>\n    );\n  }\n}\n\nexport default Button;\n"]},"metadata":{},"sourceType":"script"}